{"version":3,"sources":["Main.elm","serviceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","A2","A3","A4","A5","A6","_JsArray_initialize","size","offset","func","result","Array","i","_JsArray_initializeFromList","max","ls","length","_Utils_Tuple2","_List_Nil","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","_List_map2","xs","ys","push","_Debug_crash","identifier","Error","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","key","elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","elm$core$Basics$LT","elm$core$Basics$GT","elm$core$Basics$EQ","_Utils_Tuple3","_Utils_chr","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","root","curr","_Basics_add","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_String_split","sep","str","split","_String_join","strs","join","_String_slice","start","end","slice","_String_contains","sub","indexOf","_String_startsWith","_String_indexes","subLen","is","_Json_decodePrim","decoder","value","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_wrap","String","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","field","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","index","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","answer","decoders","g","h","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","array","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_map","tagger","bag","o","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","_VirtualDom_divertHrefToApp","_Parser_isSubString","smallString","row","col","bigString","smallLength","isGood","code","charCodeAt","_Parser_isSubChar","predicate","string","substr","_Parser_isAsciiCode","_Parser_chompBase10","_Parser_consumeBase","base","total","digit","_Parser_consumeBase16","_Time_setInterval","interval","id","setInterval","clearInterval","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_map","node","_VirtualDom_on","handler","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","u","stopPropagation","ah","currentEventNode","af","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","t","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","_VirtualDom_applyPatchReorder","_Browser_document","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","a8","bj","bh","initialModel","divertHrefToApp","P","view","bl","title","bodyNode","body","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","doc","nextNode","a_","_VirtualDom_diff","bi","cancelAnimationFrame","requestAnimationFrame","setTimeout","_Browser_getUrl","elm$url$Url$fromString","location","href","parsers","millisToPosix","parser","_Browser_pushUrl","url","elm$core$Task$perform","elm$core$Basics$never","history","pushState","_Browser_window","author$project$Model$Board","author$project$Model$HandleBoardMsg","author$project$Model$HandleHomeMsg","author$project$Model$Home","author$project$Model$NotFound","author$project$Game$getBoardId","_n0","ak","elm$core$List$cons","elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","elm$core$Basics$add","elm$core$List$foldl","elm$core$List$foldrHelper","fn","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$filter","elm$core$Maybe$Just","elm$core$Maybe$Nothing","elm$core$List$head","author$project$Model$findBoard","boards","boardId","author$project$Model$toSession","aQ","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","number","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Elm$JsArray$initializeFromList","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Tuple$first","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$apL","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fromIndex","tail","leaf","tailLen","elm$core$Char$toCode","char","elm$core$Char$isDigit","_char","elm$core$Char$isAlphaNum","elm$core$Char$isLower","elm$core$Char$isUpper","elm$core$List$length","elm$core$List$map2","elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","elm$core$List$indexedMap","elm$core$String$fromInt","elm$core$String$join","chunks","_List_toArray","elm$core$String$split","elm$core$Platform$Cmd$map","author$project$Model$updateWith","toModel","toMsg","subCmd","author$project$Game$Started","elm$core$Platform$Cmd$none","author$project$Page$Board$Main$init","session","board","author$project$Model$changeRouteTo","maybeRoute","_n2","aZ","author$project$Page$Home$Main$init","elm$core$Basics$composeL","elm$core$Basics$identity","elm$core$Maybe$map","maybe","elm$core$String$toInt","code0","elm$url$Url$Parser$State","visited","unvisited","params","C","D","author$project$Game$boardIdUrlParser","tipe","stringToSomething","next","rest","nextValue","author$project$Route$Home","author$project$Route$ShowBoard","elm$core$List$map","elm$url$Url$Parser$mapState","elm$url$Url$Parser$map","subValue","parseArg","_n1","elm$core$List$append","elm$core$List$concat","lists","elm$core$List$concatMap","elm$url$Url$Parser$slash","parseBefore","parseAfter","author$project$Route$parser","elm$core$Maybe$withDefault","_default","elm$url$Url$Parser$removeFinalEmpty","segments","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Dict$empty","elm$core$Basics$compare","elm$core$Dict$get","targetKey","right","elm$core$Dict$RBNode_elm_builtin","elm$core$Dict$balance","color","_n6","lRight","rK","rV","rLeft","rRight","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","elm$core$Dict$moveRedLeft","_n4","_n5","rlL","rlR","elm$core$Dict$moveRedRight","elm$core$Dict$removeHelpPrepEQGT","_n2$2","elm$core$Dict$removeMin","lLeft","elm$core$Dict$removeHelp","_n7","elm$core$Dict$removeHelpEQGT","elm$core$Dict$getMin","elm$core$Dict$remove","elm$core$Dict$update","alter","dictionary","elm$url$Url$percentDecode","decodeURIComponent","elm$url$Url$Parser$addToParametersHelp","maybeList","elm$url$Url$Parser$addParam","segment","rawValue","_n3","elm$url$Url$Parser$parse","maybeQuery","states","getFirstMatch","elm$url$Url$Parser$getFirstMatch","bf","elm$url$Url$Parser$preparePath","aI","author$project$Route$fromUrl","author$project$Particle$initial","ae","author$project$Game$buildBoardFromLevel","level","K","L","author$project$Level$map","V","X","Z","author$project$Coordinates$Coordinates","author$project$Coordinates$coordinatesFromPair","elm$core$List$maybeCons","mx","author$project$LevelBuilder$catMaybes","elm$core$List$filterMap","author$project$Obstacle$ChangeDirection","author$project$Obstacle$Cluster","author$project$Obstacle$buildSize","author$project$LevelBuilder$parseObstacle","coordinates","parsedObstacle","author$project$LevelBuilder$uncurry","author$project$LevelParser$isPortal","obstacle","author$project$Obstacle$Portal","elm$core$Basics$not","bool","elm$core$Tuple$second","elm$core$List$partition","pred","trues","falses","elm_community$list_extra$List$Extra$gatherWith","testFn","helper","scattered","gathered","toGather","population","author$project$LevelBuilder$parsedLevelToLevel","rows","allObstacles","samePortals","o1","o2","portals","portalObstacles","nonPortals","elm$parser$Parser$UnexpectedChar","elm$parser$Parser$Advanced$Bad","elm$parser$Parser$Advanced$Good","elm$parser$Parser$Advanced$AddRight","elm$parser$Parser$Advanced$DeadEnd","problem","contextStack","am","a0","aE","aM","elm$parser$Parser$Advanced$Empty","elm$parser$Parser$Advanced$fromState","elm$parser$Parser$Advanced$isSubChar","elm$parser$Parser$Advanced$chompIf","expecting","newOffset","elm$parser$Parser$chompIf","elm$core$Basics$always","elm$parser$Parser$Advanced$map2","parseA","parseB","s0","p1","p2","s2","elm$parser$Parser$ignorer","keepParser","ignoreParser","elm$parser$Parser$succeed","author$project$LevelParser$newlineParser","elm$parser$Parser$Advanced$chompWhileHelp","elm$parser$Parser$Advanced$Token","elm$core$String$isEmpty","elm$parser$Parser$Advanced$isSubString","elm$parser$Parser$token","progress","newRow","newCol","elm$parser$Parser$Advanced$token","elm$parser$Parser$toToken","author$project$LevelParser$animationParser","author$project$Coordinates$buildHeight","author$project$Coordinates$buildWidth","author$project$Level$buildLevel","width","height","obstacles","author$project$LevelParser$buildLevel","par","elm$parser$Parser$ExpectingInt","elm$parser$Parser$Advanced$consumeBase","elm$parser$Parser$Advanced$consumeBase16","elm$core$String$slice","elm$parser$Parser$Advanced$bumpOffset","elm$parser$Parser$Advanced$chompBase10","elm$parser$Parser$Advanced$isAsciiCode","elm$parser$Parser$Advanced$consumeExp","src","eOffset","expOffset","elm$parser$Parser$Advanced$consumeDotAndExp","elm$parser$Parser$Advanced$finalizeInt","invalid","startOffset","endOffset","toValue","elm$parser$Parser$Advanced$fromInfo","context","elm$parser$Parser$Advanced$finalizeFloat","intSettings","floatSettings","intPair","intOffset","floatOffset","test","elm$core$String$toFloat","elm$parser$Parser$int","aj","aq","ar","au","ax","a9","aB","zeroOffset","baseOffset","elm$parser$Parser$keeper","parseFunc","author$project$LevelParser$parParser","elm$parser$Parser$Done","elm$parser$Parser$Loop","elm$parser$Parser$map","parse","s1","elm$parser$Parser$toAdvancedStep","step","elm$parser$Parser$Advanced$loopHelp","elm$parser$Parser$Advanced$loop","elm$parser$Parser$loop","elm$parser$Parser$Advanced$Append","elm$parser$Parser$Advanced$oneOfHelp","oneOfHelp","remainingParsers","elm$parser$Parser$oneOf","author$project$LevelParser$many","author$project$LevelParser$ChangeDirection","elm$parser$Parser$andThen","elm$parser$Parser$Advanced$mapChompedString","author$project$LevelParser$singleCharacterInt","author$project$LevelParser$rowParser","author$project$LevelParser$rowsParser","separator","author$project$LevelParser$levelParser","author$project$LevelParser$levelsParser","elm$core$Result$mapError","elm$parser$Parser$deadEndsToString","elm$parser$Parser$DeadEnd","elm$parser$Parser$problemToDeadEnd","elm$parser$Parser$Advanced$bagToList","bagToList","bag2","elm$parser$Parser$Advanced$run","elm$parser$Parser$run","source","author$project$Game$loadBoards","input","parsedBoards","author$project$LevelParser$parseLevels","author$project$Update$init","ab","author$project$Session$initial","author$project$Page$Board$Main$AdvanceBoard","elm$time$Time$Every","elm$core$Task$succeed","elm$time$Time$State","processes","aG","aT","elm$time$Time$init","elm$core$Dict$foldl","elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","rKey","rValue","stepState","lKey","lValue","leftovers","intermediateResult","elm$core$Task$andThen","elm$time$Time$addMySub","elm$core$Platform$sendToSelf","elm$core$Process$spawn","elm$time$Time$setInterval","elm$time$Time$spawnHelp","intervals","spawnTimer","elm$time$Time$onEffects","subs","kills","newTaggers","existing","spawnList","existingDict","newProcesses","elm$core$Platform$sendToApp","elm$core$Task$map2","taskA","taskB","elm$core$Task$sequence","tasks","elm$time$Time$now","Date","now","time","elm$time$Time$subscription","elm$time$Time$every","elm$core$Platform$Sub$none","author$project$Page$Home$Main$subscriptions","elm$core$Platform$Sub$map","author$project$Coordinates$mapX","author$project$Coordinates$mapY","author$project$Direction$advanceCoordinatesInDirection","direction","author$project$Particle$Particle","author$project$Particle$mapCoordinates","author$project$Particle$flatMap","author$project$Particle$advanceParticles","particle","author$project$Game$boardHeight","author$project$Level$levelHeight","author$project$Game$boardWidth","author$project$Level$levelWidth","elm$core$List$any","isOkay","elm$core$List$member","author$project$Coordinates$coordinatesWithinDimensions","author$project$Particle$particleCoordinates","author$project$Particle$particlesWithinDimensions","author$project$Direction$mirrorLeftDirection","author$project$Direction$mirrorRightDirection","author$project$Direction$reverseDirection","author$project$Particle$buildParticle","particleId","particles","author$project$Obstacle$energizeAt","author$project$Direction$sidewaysDirections","author$project$Obstacle$increaseClusterSize","increasedSize","author$project$Direction$allDirections","author$project$Obstacle$reactionAt","author$project$Particle$extract","author$project$Particle$length","author$project$Particle$map","author$project$Particle$mapDirection","author$project$Particle$particleAtCoordinates","coords","author$project$Particle$mapParticlesAtCoordinates","author$project$Particle$mappend","author$project$Particle$particleDirection","author$project$Particle$particlesAtCoordinates","author$project$Particle$particlesNotAtAnyCoordinates","coordinatesList","author$project$Particle$particlesNotAtCoordinates","elm$core$List$takeReverse","kept","takeReverse","elm$core$List$takeTailRec","elm$core$List$takeFast","_n0$1","_n0$5","_n8","_n9","_n10","elm$core$List$take","author$project$Particle$take","author$project$Obstacle$handleObstacle","excess","newObstacle","particleDirections","ps","coordinates1","coordinates2","particlesAtCoordinates2","particlesAtCoordinates1","author$project$Game$advanceBoard","bo","author$project$Game$trimParticles","outcome","author$project$Game$Complete","author$project$Obstacle$isCluster","author$project$Level$levelPar","author$project$Obstacle$singleObstacleAtCoordinates","coords2","author$project$Obstacle$obstacleAtCoordinates","author$project$Game$incrementClicksOnCluster","clickCounter","author$project$Game$mapBoard","game","author$project$Page$Board$Main$update","author$project$Game$completeGameWhenNoClustersRemain","author$project$Page$Home$Main$update","author$project$Session$navKey","elm$core$Task$init","elm$core$Task$map","elm$core$Task$spawnCmd","commands","exports","onUrlChange","onUrlRequest","elm$core$Task$command","toMessage","elm$json$Json$Decode$succeed","elm$core$String$dropLeft","elm$core$String$startsWith","elm$core$String$indexes","elm$core$String$left","elm$core$String$contains","elm$url$Url$Url","protocol","host","port_","path","query","fragment","av","aD","aH","elm$url$Url$chompBeforePath","elm$url$Url$chompBeforeQuery","elm$url$Url$chompBeforeFragment","elm$url$Url$chompAfterProtocol","elm$browser$Browser$Navigation$load","err","reload","elm$browser$Browser$Navigation$pushUrl","elm$url$Url$addPort","maybePort","starter","elm$url$Url$addPrefixed","prefix","maybeSegment","elm$url$Url$toString","author$project$Update$update","_n0$4","urlRequest","newMsg","author$project$Game$clicksMade","author$project$Coordinates$dimensionsToCoordinates","author$project$Game$renderableBoard","allCoordinates","author$project$Game$showBoardId","elm$json$Json$Encode$string","elm$html$Html$Attributes$stringProperty","author$project$Route$href","targetRoute","pieces","page","replace","elm$html$Html$a","elm$html$Html$text","author$project$Page$Board$Main$endGameLink","author$project$Direction$showDirection","elm$html$Html$span","elm$html$Html$table","elm$html$Html$td","elm$html$Html$tr","elm$html$Html$Attributes$class","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","author$project$Page$Board$Main$renderBoard","boardTiles","showParticle","author$project$Page$Board$Main$obstacleClass","renderColumn","elm$html$Html$Attributes$classList","columns","elm$html$Html$div","elm$html$Html$h2","author$project$Page$Board$Main$view","currentBoard","author$project$Page$Board$Main$nextBoard","author$project$Page$Board$Main$nextBoardButton","author$project$Level$parValue","author$project$Page$Home$Main$displayBoard","elm$html$Html$map","Main","bc","bd","navigator","userAgent","ctrlKey","metaKey","shiftKey","button","target","hasAttribute","elm$browser$Browser$External","flags","author$project$Main$main","_Platform_mergeExportsProd","obj","this","Elm","registration"],"mappings":"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,EACAukB,GACA6V,GACAR,GACA55B,EAAAq6B,GAAAhB,EALA/O,EAAAI,EAAArrB,KAaA,OAAA2B,GAPAy6B,EASAz7B,EAAAw6B,GAAAnB,EAAA/O,GARAkR,EA1DAh8B,EA0DAS,EACA0d,GACA2b,GAAAhP,GACAmR,EACAD,GAJAC,GASAvM,GACA,OAEA,OAAAluB,EACAhB,EAAAw6B,GAAAnB,EAFA/O,EAAAI,EAAArrB,GAGA6vB,GACA,OACA,IAAA5E,EAAAI,EAAArrB,EACA,OAAA2B,EACAf,EACAi6B,GACAH,GAAAb,IACAG,EACA/O,GACA4E,GACA,OAEA,OADA5E,EAAAI,EAAArrB,EACA2B,EACAf,EACAi6B,GACAH,GAAAf,IACAK,EACA/O,GACA4E,GACA,OAEA,OADA5E,EAAAI,EAAArrB,EACA2B,EACAf,EACAi6B,GACAH,GAAAd,IACAI,EACA/O,GACA4E,GACA,OAGA,OADA5E,EAAAI,EAAAlrB,EACAwB,EACAf,EACAi6B,GACAH,GACA1M,GANA3C,EAAArrB,IAOAg6B,EACA/O,GACA4E,GACA,QACA,IAAAwM,EAAAhR,EAAArrB,EACAs8B,EAAAjR,EAAAlrB,EACAo8B,EAAA57B,EACA85B,GACA5B,GACA7K,GAAAsO,IACA37B,EAAAq6B,GAAAhB,EAAAqC,IACAG,EAAA77B,EACA85B,GACA5B,GACA7K,GAAAqO,IACA17B,EAAAq6B,GAAAhB,EAAAsC,IACA,OAAA36B,EACAhB,EACAm6B,GACAyB,EACA57B,EACAm6B,GACA0B,EACA77B,EACAs6B,GACAjB,EACA93B,GACAm6B,EAAAC,OACAzM,GA/EA,IAAAuM,IAkFAK,GAAA,SAAAjZ,GACA,IAniBA5F,EAmiBA8e,EAAAlZ,EAWA,OA5dA,SAAAA,GACA,IACAwW,EADAxW,EACA3gB,EACA,OAAAmB,EAFAwf,GAKA3gB,EAAAjC,EACA84B,GACAP,GAAA3V,GACAyV,GAAAzV,GACAwW,KAkdA2C,CA3iBA34B,EAHA4Z,EAgjBAhd,EAAA0d,GAZApe,EACA,SAAAmrB,EAAAzN,GACA,IAAAzd,EAAAyd,EAGAgf,EAAAh8B,EAAAo7B,GAAA3Q,EAFAlrB,EAAA0C,EACA1C,EAAAkX,GAEA,OAAArT,EACA7D,GACKkX,EAAAulB,EAAAz8B,EAAA0C,EAAA+5B,EAAA58B,MAILwjB,EAAAkZ,EAAArlB,IA1iBAxU,EAAAk2B,GALAnb,EACA/a,OAgjBAg6B,GAAAz8B,EACA,SAAAJ,EAAAG,EAAAE,GACA,OAAUwB,EAAA,EAAA7B,IAAAG,IAAAE,OAEVy8B,GAAA,SAAAzR,GACA,OAAAA,EAAAxpB,GAUAk7B,GAAA,SAAAnf,GAEA,OADAA,EAAAyM,GAyBA2S,GAAA98B,EACA,SAAA+qB,EAAAI,GACA,OAAAA,EAAAxpB,GACA,OAEA,OAAAe,EADAyoB,EAAAlrB,EACA8qB,GACA,OACA,IACAgS,EAAA5R,EAAAlrB,EACA,OAAAyC,EAFAyoB,EAAArrB,EAEAirB,IAAAroB,EAAAq6B,EAAAhS,GACA,OAGA,OAGA,OAEA,OAAAroB,EADAyoB,EAAArrB,EACAirB,GACA,OAEA,OAAAroB,EADAyoB,EAAAlrB,EACA8qB,GACA,OAGA,QAEA,OAAAroB,EADAyoB,EAAArrB,EACAirB,MAGAiS,GAAAh9B,EACA,SAAA2vB,EAAA5E,GACA,OAAA/L,GACAve,EACAoe,GACAie,GAAA/R,GACA4E,MAEAsN,GAAAj9B,EACA,SAAA+qB,EAAAzH,GACA,IAAArjB,EAAAqjB,EACAqM,EAAA1vB,EAAAkX,EACA+lB,EAAAj9B,EAAA8pB,EACArM,EAAAjd,EAAAu8B,GAAArN,EAAA5E,GACA,GAAArN,EAAA/b,GAAA+b,EAAA5d,EAAA6B,EAuBA,OAAA2hB,EAtBA,IAAA6H,EAAAzN,EAAA5d,EAOA,OAAAgE,EACA7D,GAEA8pB,EAAAmT,EA7DA,EA8DA/lB,EAAA1W,EACAmd,GATAnd,EACAmqB,GAHAO,EAAArrB,EAhDA,EAiDAqrB,EAAAlrB,GAYAQ,EACAoe,GACA,SAAAtT,GACA,OAAA7I,EAAA6I,EAAA4f,IAEAwE,QAMAwN,GAAAn9B,EACA,SAAAD,EAAAq9B,GACA,OAAAA,EAAAz7B,EAKAy7B,EAHAla,GACAnjB,EAFAq9B,EAAAt9B,MAOAu9B,GAAAr9B,EACA,SAAAoJ,EAAAwQ,GACA,OAoBAnY,EApBA2H,EAAAzH,EAqBAmC,EACA8V,GACMtC,EA/HN,SAAA8lB,GACA,GAAAA,EAAAz7B,EAUA,OAAAy7B,EATA,IAAA9Z,EAAA8Z,EAAAt9B,EACAo9B,EAAA5Z,EAAAyG,EACAD,EAAAxG,EAAA0G,EACA,OAXAvpB,EAAA04B,GAAAyD,GAWAtZ,EAZAnM,GAYA+L,GAAAI,GAAA5iB,EACAi8B,GACArZ,EACAuZ,GAAA/S,GACAoT,GAiHAI,CACA78B,EAAA08B,GAAAZ,GAAA3iB,EAAAtC,MAlBAlO,EAAAtJ,EAAA6B,GAAAyH,EAAAtJ,IAAA6B,EAcAiY,EAVA9V,EACA8V,GAEAtC,EAAA7W,EACA08B,GACAF,GARA7zB,EAAAtJ,IACAG,GAQA2Z,EAAAtC,KAaA6L,MAGAoa,GAAAv9B,EACA,SAAAoJ,EAAAwQ,GACA,OAAAnY,EAAAmY,EAAAuJ,MAEAqa,GAAA,SAAA9f,GAEA,OADAA,EAAAoX,IAUA9X,GAAA,SAAAU,GAEA,OAGAA,EAFAA,GAOA+f,GAAAvI,GAAA,GACAwI,GAAA19B,EACA,SAAAiB,EAAAw2B,GACA,OAAAh3B,EACA81B,GACA,SAAAz2B,GACA,OAAAo1B,GACAj0B,EAAAnB,KAEA23B,KAEAkG,GAAA39B,EACA,SAAAsK,EAAAoT,GACA,IAAA7U,EAAA6U,EACA,OAAAxU,GACAzI,EACA81B,GACAgB,GAAAjtB,GACAzB,MAwBAe,GAAA,KAAAC,GAAA4zB,GAtBAv9B,EACA,SAAAoK,EAAAszB,GACA,OAAAn9B,EACAi9B,GACA,WACA,UAEA/F,GACAl3B,EACAukB,GACA2Y,GAAArzB,GACAszB,OAEA19B,EACA,WACA,OAAAg1B,GAAA,KAEAl1B,EACA,SAAAqL,EAAAqS,GAEA,OAAAjd,EAAAi9B,GAAAryB,EADAqS,MAIA,IAh8LAmgB,GAy3DAxkB,GAEAykB,GACAC,GACA56B,GAmkIA66B,GAAAnzB,GAAA,QACAkS,GAAA/c,EACA,SAAAi+B,EAAAp1B,GACA,OAAAm1B,GACAv9B,EAAAi9B,GAAAO,EAAAp1B,MAIAq1B,GAj+NA,SAAA90B,GAEA,OACAzH,EAAA,EACA7B,EAAAsJ,IA89NA8I,GAAA,SAAA3C,GACA,OAAAA,EAAA5N,GACA,OACA,SACA,OACA,SACA,OACA,SACA,QACA,WAIAw8B,GAAAn+B,EACA,SAAAwD,EAAA2J,GACA,OAAA3J,EAAA,EAAA2J,EAAAzM,EACAuvB,GACAzsB,EACA2J,EA9xOA3L,OA+xOA2L,KAEAixB,GAAAz4B,EAGA04B,GAAAz4B,EACA04B,GAAAt+B,EACA,SAAAwD,EAAA2J,GACA,OAAA3J,EAAA,KAAA9C,EAAAuvB,GAAA,EAAAzsB,EAAA2J,KAEAoxB,GAAA/4B,EACAg5B,GAAAh+B,EACA,SAAAi+B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,OAAUvqB,GAAAuqB,EAAAC,GAAAL,EAAAnV,GAAAqV,EAAAI,GAAAL,EAAAM,GAAAR,EAAAhV,GAAAoV,KAEVK,GAAA5+B,EACA,SAAAm+B,EAAAG,EAAAva,EAAAtL,EAAAhU,GACA,GAAA8pB,GAAA9pB,IAAAtE,EAAA89B,GAAA,IAAAx5B,GACA,OAAAga,GAEA,IAAArB,EAAAjd,EAAA49B,GAAA,IAAAt5B,GACA,GAAA2Y,EAAAzd,EAGI,CACJ,GAAAyd,EAAAzd,IAmBA,OAAA8e,GAlBA,IAAA3d,EAAAsc,EAAA5d,EACAulB,EAAArB,GACAvjB,EAAA09B,GAAA/8B,EAAA,EAAA2D,IACA,OAAAsgB,EAAA1jB,EACA,OAAAod,GAEA,IAAA4f,EAAAtZ,EACA,OAAAvG,GACAje,EACA29B,GACAC,EACAh+B,EAAA69B,GAAAl9B,EAAA2D,GACA45B,EACAC,EACAva,EACAtL,IAnBA,OAAA+F,GACAje,EAAA29B,GAAAC,EAAA15B,EAAAga,GAAA6f,EAAAva,EAAAtL,MA0BAomB,GAAA/+B,EACA,SAAAq+B,EAAApa,EAAAtL,EAAAhU,GACA,GAAA8pB,GAAA9pB,GACA,OAAAga,GAEA,IAAArB,EAAAjd,EAAA49B,GAAA,IAAAt5B,GACA,GAAA2Y,EAAAzd,EAEI,CACJ,IAAAmB,EAAAsc,EAAA5d,EACA,OAAAc,EACAs+B,GACAT,EACAh+B,EAAA09B,GAAA/8B,EAAA2D,GACAsf,EACAtL,EACAtY,EAAA69B,GAAAl9B,EAAA2D,IATA,OAAAnE,EAAAs+B,GAAAT,EAAA,IAAApa,EAAAtL,EAAAhU,KAaAq6B,GAAAl/B,EACA,SAAAu+B,EAAA1lB,EAAAhU,GACA,GAAA8pB,GAAA9pB,GACA,OAAAga,GAEA,IAAArB,EAAAjd,EAAA49B,GAAA,IAAAt5B,GACA,GAAA2Y,EAAAzd,EAEI,CACJ,IAAAmB,EAAAsc,EAAA5d,EACA,OAAAa,EACAw+B,GACAV,EACA3f,GACAre,EAAA09B,GAAA/8B,EAAA,EAAA2D,IACAgU,EACAtY,EAAA69B,GAAAl9B,EAAA2D,IATA,OAAApE,EAAAw+B,GAAAV,EAAA1f,GAAAhG,EAAAhU,KAaAs6B,GAAAr/B,EACA,SAAAy+B,EAAA15B,GACA,GAAA8pB,GAAA9pB,GACA,OAAAga,GAEA,IAAArB,EAAAjd,EAAA49B,GAAA,IAAAt5B,GACA,GAAA2Y,EAAAzd,EAEI,CACJ,IAAAmB,EAAAsc,EAAA5d,EACA,OAAAY,EACA0+B,GACAX,EACA3f,GACAre,EAAA09B,GAAA/8B,EAAA,EAAA2D,IACAtE,EAAA69B,GAAAl9B,EAAA2D,IARA,OAAArE,EAAA0+B,GAAAX,EAAA1f,GAAAha,KAYAwX,GAAA,SAAAxX,GACA,OAAAtE,EAAA29B,GAAA,UAAAr5B,GAAAtE,EACA4+B,GACA,EACA5+B,EAAA09B,GAAA,EAAAp5B,IAAAtE,EAAA29B,GAAA,WAAAr5B,GAAAtE,EACA4+B,GACA,EACA5+B,EAAA09B,GAAA,EAAAp5B,IAAAga,IAEAugB,GAz6HA,SAAAxiB,GAEA,OAAArc,EAAAsc,GAAAC,GAAAtU,EAAA,WAEA,IAEAyU,GAAAX,SAAAM,EAEA,MAAAyiB,GAIAtxB,GAAAuO,SAAAgjB,QAAA,QA85HAC,GAAA5iB,GACA6iB,GAAA1/B,EACA,SAAA2/B,EAAAC,GACA,WAAAD,EAAAh+B,EACAi+B,EAGAA,EAAA,IAAApd,GADAmd,EAAA7/B,KAIA+/B,GAAA3/B,EACA,SAAA4/B,EAAAC,EAAAH,GACA,WAAAG,EAAAp+B,EACAi+B,EAGA17B,EACA07B,EACA17B,EAAA47B,EAHAC,EAAAjgC,MAMAkgC,GAAA,SAAAljB,GASA,OAAApc,EACAm/B,GACA,IACA/iB,EAAAvI,GACA7T,EACAm/B,GACA,IACA/iB,EAAA2M,GACAvlB,EACAzD,EACAi/B,GACA5iB,EAAAkiB,GACA96B,EAnBA4Y,EAAAmiB,GAIA,WAFA,UAiBAniB,EAAAiiB,KACAjiB,EAAAyM,OAEA0W,GAAAjgC,EACA,SAAAoJ,EAAAwQ,GACA,IAAA8D,EAAAjc,EAAA2H,EAAAwQ,GACAsmB,EACA,OACA,OAAAxiB,EAAA5d,EAAA6B,GACA,OACA,IAAAw+B,EAAAziB,EAAA5d,IACA,OAgBA2B,EACAmY,EAjBAumB,EAAAx+B,EAkBA29B,GAHAa,EAAArgC,GAZA,KAFAgd,EAAAqjB,EAAArgC,GACAyU,GACA5S,EACAwhB,GAIA1iB,EACAg/B,GACAjC,GACApe,GAAAxF,IACAomB,GAAAljB,KAQA,OACA,IAAAA,EACA,OAAArc,EACA8iB,GACAmG,GAHA5M,EAAAY,EAAA5d,KAIA8Z,GACA,OACA,GAAA8D,EAAAzd,EAAA0B,EAUA,MAAAu+B,EATA,IAEAjX,EAAAxoB,EAAA88B,GAFA7f,EAAA5d,IACA4d,EAAAzd,EAAAH,GAGAsgC,EAAAnX,EAAAhpB,EACA,OAAAwB,EACA8b,GAHA0L,EAAAnpB,GAIAW,EAAAoiB,GAAAvF,GAAA8iB,IAIA,QACA,OAAA1iB,EAAAzd,EAAA0B,EAAA,CACA,IAEA8lB,EAAAhnB,EAAA48B,GAFA3f,EAAA5d,IACA4d,EAAAzd,EAAAH,GAIA,OADAsgC,EAAA3Y,EAAAxnB,EACAwB,EACA2b,GAHAqK,EAAA3nB,GAIAW,EAAAoiB,GAAAxF,GAAA+iB,IAEA,MAAAF,EAIA,OAAAz+B,EAAAmY,EAAAuJ,MAUAkd,GAAA,SAAAjD,GACA,OAAAA,EAAAz7B,EAIAy7B,EAAAj9B,EAHAi9B,EAAAt9B,EALAiqB,GAqBAuW,GAAAtgC,EACA,SAAA0d,EAAA2H,GACA,IAAAlO,EAAAuG,EAEArb,EAAA5B,EAAA6hB,GAAA,EADA+C,EACA,GACAjjB,EAAA3B,EAAA6hB,GAAA,EAAAnL,EAAA,GACA,OAAA9P,GACA5G,EACAukB,GACA,SAAApiB,GACA,OAAAnC,EACAukB,GACA,SAAAriB,GACA,OAAA2nB,GACA7oB,EAAAkB,EAAAC,KAEAR,IAEAC,MAEAk+B,GAAA,SAAAjd,GACA,IAAAwW,EAAAxW,EAAA3gB,EACAgtB,EAAArM,EAAAnM,EAOAqpB,EAAA//B,EACA6/B,GACArH,GAAA3V,GACAyV,GAAAzV,IACA,OAAA7iB,EACAukB,GACAA,GAZA,SAAA+F,GACA,OAAAtpB,EACA44B,GACA55B,EAAAq6B,GAAAhB,EAAA/O,IACAtqB,EAAAu8B,GAAArN,EAAA5E,MASAyV,IAEAC,GAAA,SAAA/iB,GAEA,OAAA8E,GADA9E,IAkBAgjB,GAAAr6B,EACAs6B,GAAA3gC,EACA,SAAAmD,EAAAgK,GACA,OAAA1M,EACA+O,GACArM,EACAu9B,GAAAvzB,MAQAyzB,GAAA,SAAAC,GACA,OA7BAC,GADAC,EA+BAF,GA7BAl/B,EAIAK,GAEA,QACAy+B,GAJAM,EAAAjhC,KAFA4B,EAqBAjB,EACAkgC,GACA,OA3xLA,gBAAApP,MAFAtrB,EAgxLA,KAAAxF,EAAAgiB,GAAA,IAAAqe,IA9wLAE,QAAA,cAAA/6B,GAwxLA,IA1xLAA,EAmwLA86B,EACAD,GAgCAG,GAAAzyB,GAAA,KAEA0yB,GADA3yB,GAEA4yB,GAAA1gC,EACAwgC,GACAj/B,GAEA4+B,GAAA9b,MAEA9iB,GAEAk/B,GAAA,eAiDAE,GAAA,SAAA3I,GACA,OAAAA,GACA,OACA,WACA,OACA,aACA,OACA,aACA,QACA,gBA8CA4I,GAAA7yB,GAAA,QACA8yB,GAAA9yB,GAAA,SACA+yB,GAAA/yB,GAAA,MACAgzB,GAAAhzB,GAAA,MACAizB,GAAAd,GAAA,aAcAe,GAAApyB,GACAqyB,GAAA3hC,EACA,SAAAwS,EAAAxM,GACA,OAAAvF,EACAihC,GACAlvB,GAPS7Q,EAAA,EAAA7B,EAQTkG,MAQA47B,GAAA,SAAAC,GACA,IAAAC,EAAA,SAAAhJ,GACA,OAAAr4B,EACA4gC,GACAr/B,GAEAy/B,GACA,qBAAAL,GACAvG,GAAA/B,OAEAp3B,IAEAsO,EAAAhQ,EACA,SAAA85B,EAAA3O,GACA,OAAAjnB,EACAzD,EACAqlB,GACApkB,EACAjB,EACAqjB,GACA,SAAAvY,GACA,OAAA9K,EACAukB,GACA,SAAA1R,GACA,OAAA7R,EAAA6R,GAAA,IA5FA,SAAA6X,GACA,OAAAA,EAAAxpB,GACA,OAEA,OAAAK,GAEA,UACA,YAXA0b,EAOAyN,EAAArrB,EALA0iB,GADA9E,MAYA,OACA,OAAA1b,GACA,WACA,OACA,OAAAA,GACA,WACA,OACA,OAAAA,GACA,gBACA,OACA,OAAAA,GACA,iBACA,OAEA,OAAAA,GAEA,mBACA,oBAAAo/B,GAJAjW,EAAArrB,KAMA,OACA,OAAAkC,GACA,eACA,QACA,OAAAA,GACA,cArCA,IAAA0b,EAkGAqkB,CAAAx2B,KAEA4f,IACAnpB,GAEAP,EACA,eACAqgB,GAAAgY,GAAA,QAGAkI,EAAA,SAAAtkB,GACA,IA3CAtU,EArEAtJ,EAgHAg6B,EAAApc,EAAA5d,EACAqrB,EAAAzN,EAAAzd,EACA,OAAAQ,EACA8gC,GACAv/B,GApEA,SAAAgO,GACA,OAAAyxB,GACAhhC,EACAgiB,GACA,IACAhiB,EACAukB,GACA9E,GACAzf,EAAAoe,GAAA0M,GAAAvb,MA8DAiyB,CACAxhC,EAAAuP,EAAA8pB,EAAA3O,KAvHArrB,EAyHAqrB,EApDA/hB,GApESzH,EAAA,EAAA7B,KAqETW,EACAkhC,GACA,QACAzD,GAAA90B,OAkDApH,GAEAvB,EACA4gC,GACA3/B,EACAjB,EAAAukB,GAAA8c,EAAAhI,QASA,OAAAr5B,EACA6gC,GACAt/B,GAEAy/B,GAAA,WAEAhhC,EAAAukB,GAZA,SAAAkd,GACA,OAAAzhC,EACA+gC,GACA9/B,EACAjB,EAAAukB,GAAAgd,EAAAE,KAQAL,KAEAM,GAAA3zB,GAAA,OACA4zB,GAAA5zB,GAAA,MACA6zB,GAAA,SAAAzoB,GACA,IAAAwjB,EAAAxjB,EAAAtC,EACA,GAAA8lB,EAAAz7B,EA+BA,OADA2hB,EAAA8Z,EAAAt9B,EACAW,EACA0hC,GACAzgC,EACAM,GAEAvB,EACA2hC,GACA1gC,EACAM,GAEAk/B,GACA,qBAAA1e,GACA6d,GAAAjD,QAEA+D,GAlOA,SAAAvnB,GACA,IAAA8D,EAfA,SAAA9D,GACA,IAAA0oB,EAAA1oB,EAAAtC,EALAxX,EAOA,OAAAkf,GACAve,EACAoe,GACA,SAAA5e,GACA,OAAAyC,EACA+a,GAAAxd,GAEAwd,GAAA6kB,GArBA,IAaA1oB,EAAAyF,GAAAqE,KAaA6e,CAAA3oB,GACA,OAAA8D,EAAA/b,EAeAu/B,GAAA,IAbAzgC,EACAwgC,GACAj/B,GAEA4+B,GACA7b,GACAtH,GAPAC,EAAA5d,OASAkC,GAEAk/B,GAAA,0BAqNAsB,CAAA5oB,GACAgoB,GACArB,GAAAjd,OA/CA,IA9SA5F,EA8SA4F,EAAA8Z,EAAAt9B,EACA,OAAAW,EACA0hC,GACAzgC,EACAM,GAEAvB,EACA2hC,GACA1gC,EACAM,GAEAk/B,GACA,WAAA1e,GACA6d,GAAAjD,QAEA38B,EACA2hC,GACA1gC,EACAM,GAEAk/B,GACA,QAAA1e,IAnUA9E,EAoUA4F,EAxUA,SAAA5F,GAEA,OADAA,EAKA+kB,CACA5F,GAFAnf,EAAAsM,UAqUAmX,GACAS,GACArB,GAAAjd,QAyBAof,GAAA,SAAApf,GACA,IAAAnE,EAAA1B,GAAA6F,GACA,OAAA7iB,EACA0hC,GACAzgC,EACAM,GAEAvB,EACAwgC,GACAj/B,GAEA4+B,GACA7b,GAAA5F,MAEAnd,GAEAk/B,GACA,eAAAT,GAAAthB,WAYAwjB,GADAvzB,GAjlNAyuB,IAwnNkB+E,MAAQ94B,MA7vJ1Bg0B,IAFAzkB,IA8vJEc,GAAA0a,GAAAgO,GA/7IF,SAAA/iC,GACA,OAAS6B,EAAA,EAAA7B,MA87IPgjC,GA57IF,SAAAhjC,GACA,OAAS6B,EAAA,EAAA7B,MA27IPua,GAriDF,SAAAT,GACA,OAAAA,EAAAjY,GACA,OAEA,OAAAlB,EACA43B,GACA/a,GACA8a,GAJAxe,EAAA9Z,IAKA,OAEA,OAAAW,EACA43B,GACAhb,GArBA5c,EACAy3B,GACA,IACApK,GAAAkH,MAoBA,QACA,OAAAmD,KAshDE/d,GAAA6lB,GAAAvlB,GApCF,SAAAd,GACA,OACAoC,GAAAha,GAEAvB,EACA0hC,GACAzgC,EACAM,GAEA,WACA,OAAA4X,EAAAjY,GACA,OAEA,OAAAlB,EACAkiC,GACArlB,GAtBA7c,EACA0hC,GACAzgC,EACAjB,EAAAukB,GAAA0d,GAgBA9oB,EAAA9Z,EApBAuf,GAIAqE,MAqBA,OAEA,OAAAjjB,EACAkiC,GACAtlB,GACAglB,GAJAzoB,EAAA9Z,IAKA,OACA,OAAAohC,GAAA,aACA,QACA,OAAAA,GAAA,YAjBA,QAsBAhlB,GAAA,eAvvJA2mB,GACA9E,GAAA1kB,GAAAypB,GACA3/B,GAAA,WAAuBA,GAAArD,EAAAg+B,GAAAxhB,QAEvBlD,IACAoB,EAAA,SAAAnQ,GAMA,OAJAlH,GAAArD,EAAAuK,EACA8S,GAAAvM,iBAAA,WAAAzN,IACAga,GAAA4lB,UAAAC,UAAAt9B,QAAA,cAAAyX,GAAAvM,iBAAA,aAAAzN,IAEAnD,EAAA,SAAAuQ,EAAAiC,GAEA,IAAAA,EAAAywB,UAAAzwB,EAAA0wB,UAAA1wB,EAAA2wB,UAAA3wB,EAAA4wB,OAAA,IAAA7yB,EAAA8yB,SAAA9yB,EAAA+yB,aAAA,YACA,CACA9wB,EAAAO,iBACA,IAAA0J,EAAAlM,EAAAkM,KACArY,EAAAkY,KACAqI,EAAApI,GAAAE,GAAA3c,EACAuK,EAAA0zB,GACApZ,GACAvgB,EAAA66B,KAAAta,EAAAsa,IACA76B,EAAA26B,KAAApa,EAAAoa,IACA36B,EAAA46B,GAAAl/B,IAAA6kB,EAAAqa,GAAAl/B,GAs/HS6B,EAAA,EAAA7B,EAp/HT6kB,GAg/HA,SAAA7kB,GACA,OAAS6B,EAAA,EAAA7B,KAh/HTyjC,CAAA9mB,SAKAtC,GAAA,SAAAqpB,GAEA,OAAA9iC,EAAA2Y,GAAAc,GAAAqpB,EAAAlnB,KAAAnZ,KAEAuX,GAAArB,GAAAqB,GACAN,GAAAf,GAAAe,GACAC,GAAAhB,GAAAgB,MAytJA6jB,GAAA,GAD0BuF,CAC1B,KAvnNAhkC,EAAA,IAMA,SAAAikC,EAAAC,EAAA9F,GAEA,QAAAxiB,KAAAwiB,EAEAxiB,KAAAsoB,EACA,QAAAtoB,EACA9Y,EAAA,GACAmhC,EAAAC,EAAAtoB,GAAAwiB,EAAAxiB,IACAsoB,EAAAtoB,GAAAwiB,EAAAxiB,GAbAqoB,CAAAjkC,EAAA,IAAAo+B,IACAp+B,EAAA,IAAAo+B,GAruEA,CA01RyC+F,sHC70RvCzxB,kDAEEA,0BAEAA,+BALJ,0DCRA0xB,iBACEx0B,KAAMnB,kCD4HF,kBAAJ60B,WACEA,mCAAmC,SAAAe,GACjCA","file":"static/js/main.2f974abd.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.ag.M === region.ao.M)\n\t{\n\t\treturn 'on line ' + region.ag.M;\n\t}\n\treturn 'on lines ' + region.ag.M + ' through ' + region.ao.M;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a8,\n\t\timpl.bj,\n\t\timpl.bh,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Url_percentEncode(string)\n{\n\treturn encodeURIComponent(string);\n}\n\nfunction _Url_percentDecode(string)\n{\n\ttry\n\t{\n\t\treturn elm$core$Maybe$Just(decodeURIComponent(string));\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n}\n\n\n\n// STRINGS\n\n\nvar _Parser_isSubString = F5(function(smallString, offset, row, col, bigString)\n{\n\tvar smallLength = smallString.length;\n\tvar isGood = offset + smallLength <= bigString.length;\n\n\tfor (var i = 0; isGood && i < smallLength; )\n\t{\n\t\tvar code = bigString.charCodeAt(offset);\n\t\tisGood =\n\t\t\tsmallString[i++] === bigString[offset++]\n\t\t\t&& (\n\t\t\t\tcode === 0x000A /* \\n */\n\t\t\t\t\t? ( row++, col=1 )\n\t\t\t\t\t: ( col++, (code & 0xF800) === 0xD800 ? smallString[i++] === bigString[offset++] : 1 )\n\t\t\t)\n\t}\n\n\treturn _Utils_Tuple3(isGood ? offset : -1, row, col);\n});\n\n\n\n// CHARS\n\n\nvar _Parser_isSubChar = F3(function(predicate, offset, string)\n{\n\treturn (\n\t\tstring.length <= offset\n\t\t\t? -1\n\t\t\t:\n\t\t(string.charCodeAt(offset) & 0xF800) === 0xD800\n\t\t\t? (predicate(_Utils_chr(string.substr(offset, 2))) ? offset + 2 : -1)\n\t\t\t:\n\t\t(predicate(_Utils_chr(string[offset]))\n\t\t\t? ((string[offset] === '\\n') ? -2 : (offset + 1))\n\t\t\t: -1\n\t\t)\n\t);\n});\n\n\nvar _Parser_isAsciiCode = F3(function(code, offset, string)\n{\n\treturn string.charCodeAt(offset) === code;\n});\n\n\n\n// NUMBERS\n\n\nvar _Parser_chompBase10 = F2(function(offset, string)\n{\n\tfor (; offset < string.length; offset++)\n\t{\n\t\tvar code = string.charCodeAt(offset);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn offset;\n\t\t}\n\t}\n\treturn offset;\n});\n\n\nvar _Parser_consumeBase = F3(function(base, offset, string)\n{\n\tfor (var total = 0; offset < string.length; offset++)\n\t{\n\t\tvar digit = string.charCodeAt(offset) - 0x30;\n\t\tif (digit < 0 || base <= digit) break;\n\t\ttotal = base * total + digit;\n\t}\n\treturn _Utils_Tuple2(offset, total);\n});\n\n\nvar _Parser_consumeBase16 = F2(function(offset, string)\n{\n\tfor (var total = 0; offset < string.length; offset++)\n\t{\n\t\tvar code = string.charCodeAt(offset);\n\t\tif (0x30 <= code && code <= 0x39)\n\t\t{\n\t\t\ttotal = 16 * total + code - 0x30;\n\t\t}\n\t\telse if (0x41 <= code && code <= 0x46)\n\t\t{\n\t\t\ttotal = 16 * total + code - 55;\n\t\t}\n\t\telse if (0x61 <= code && code <= 0x66)\n\t\t{\n\t\t\ttotal = 16 * total + code - 87;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn _Utils_Tuple2(offset, total);\n});\n\n\n\n// FIND STRING\n\n\nvar _Parser_findSubString = F5(function(smallString, offset, row, col, bigString)\n{\n\tvar newOffset = bigString.indexOf(smallString, offset);\n\tvar target = newOffset < 0 ? bigString.length : newOffset + smallString.length;\n\n\twhile (offset < target)\n\t{\n\t\tvar code = bigString.charCodeAt(offset++);\n\t\tcode === 0x000A /* \\n */\n\t\t\t? ( col=1, row++ )\n\t\t\t: ( col++, (code & 0xF800) === 0xD800 && offset++ )\n\t}\n\n\treturn _Utils_Tuple3(newOffset, row, col);\n});\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2(elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tu: func(record.u),\n\t\tah: record.ah,\n\t\taf: record.af\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.u;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.ah;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.af) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a8,\n\t\timpl.bj,\n\t\timpl.bh,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.bl;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a8,\n\t\timpl.bj,\n\t\timpl.bh,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.P && impl.P(sendToApp)\n\t\t\tvar view = impl.bl;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.a_);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.bi) && (_VirtualDom_doc.title = title = doc.bi);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.bc;\n\tvar onUrlRequest = impl.bd;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tP: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aH === next.aH\n\t\t\t\t\t\t\t&& curr.av === next.av\n\t\t\t\t\t\t\t&& curr.aD.a === next.aD.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\ta8: function(flags)\n\t\t{\n\t\t\treturn A3(impl.a8, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tbl: impl.bl,\n\t\tbj: impl.bj,\n\t\tbh: impl.bh\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { a6: 'hidden', a$: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { a6: 'mozHidden', a$: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { a6: 'msHidden', a$: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { a6: 'webkitHidden', a$: 'webkitvisibilitychange' }\n\t\t: { a6: 'hidden', a$: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taO: _Browser_getScene(),\n\t\taV: {\n\t\t\t_: _Browser_window.pageXOffset,\n\t\t\taa: _Browser_window.pageYOffset,\n\t\t\tZ: _Browser_doc.documentElement.clientWidth,\n\t\t\tV: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tZ: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tV: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taO: {\n\t\t\t\tZ: node.scrollWidth,\n\t\t\t\tV: node.scrollHeight\n\t\t\t},\n\t\t\taV: {\n\t\t\t\t_: node.scrollLeft,\n\t\t\t\taa: node.scrollTop,\n\t\t\t\tZ: node.clientWidth,\n\t\t\t\tV: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taO: _Browser_getScene(),\n\t\t\taV: {\n\t\t\t\t_: x,\n\t\t\t\taa: y,\n\t\t\t\tZ: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tV: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\ta1: {\n\t\t\t\t_: x + rect.left,\n\t\t\t\taa: y + rect.top,\n\t\t\t\tZ: rect.width,\n\t\t\t\tV: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$Model$ChangedUrl = function (a) {\n\treturn {$: 2, a: a};\n};\nvar author$project$Model$ClickedLink = function (a) {\n\treturn {$: 3, a: a};\n};\nvar author$project$Model$Loading = function (a) {\n\treturn {$: 2, a: a};\n};\nvar author$project$Model$Board = function (a) {\n\treturn {$: 3, a: a};\n};\nvar author$project$Model$HandleBoardMsg = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$Model$HandleHomeMsg = function (a) {\n\treturn {$: 0, a: a};\n};\nvar author$project$Model$Home = function (a) {\n\treturn {$: 0, a: a};\n};\nvar author$project$Model$NotFound = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$Game$getBoardId = function (_n0) {\n\tvar boardId = _n0.ak;\n\treturn boardId;\n};\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$LT = 0;\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$GT = 2;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar author$project$Model$findBoard = F2(\n\tfunction (boards, boardId) {\n\t\treturn elm$core$List$head(\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (b) {\n\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\tauthor$project$Game$getBoardId(b),\n\t\t\t\t\t\tboardId);\n\t\t\t\t},\n\t\t\t\tboards));\n\t});\nvar author$project$Model$toSession = function (model) {\n\tswitch (model.$) {\n\t\tcase 0:\n\t\t\tvar session = model.a.aQ;\n\t\t\treturn session;\n\t\tcase 1:\n\t\t\tvar session = model.a;\n\t\t\treturn session;\n\t\tcase 2:\n\t\t\tvar session = model.a;\n\t\t\treturn session;\n\t\tdefault:\n\t\t\tvar session = model.a.aQ;\n\t\t\treturn session;\n\t}\n};\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$True = 0;\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.e) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.g),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.g);\n\t\t} else {\n\t\t\tvar treeLen = builder.e * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.h) : builder.h;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.e);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.g) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.g);\n\t\t}\n\t});\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{h: nodeList, e: (len / elm$core$Array$branchFactor) | 0, g: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$map = _Platform_map;\nvar author$project$Model$updateWith = F3(\n\tfunction (toModel, toMsg, _n0) {\n\t\tvar subModel = _n0.a;\n\t\tvar subCmd = _n0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\ttoModel(subModel),\n\t\t\tA2(elm$core$Platform$Cmd$map, toMsg, subCmd));\n\t});\nvar author$project$Game$Started = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Page$Board$Main$init = F2(\n\tfunction (session, board) {\n\t\treturn _Utils_Tuple2(\n\t\t\t{\n\t\t\t\tA: author$project$Game$Started(board),\n\t\t\t\taQ: session\n\t\t\t},\n\t\t\telm$core$Platform$Cmd$none);\n\t});\nvar author$project$Page$Home$Main$init = function (session) {\n\treturn _Utils_Tuple2(\n\t\t{aQ: session},\n\t\telm$core$Platform$Cmd$none);\n};\nvar author$project$Model$changeRouteTo = F2(\n\tfunction (maybeRoute, model) {\n\t\tvar session = author$project$Model$toSession(model);\n\t\tif (maybeRoute.$ === 1) {\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tauthor$project$Model$NotFound(session),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\t} else {\n\t\t\tif (!maybeRoute.a.$) {\n\t\t\t\tvar _n1 = maybeRoute.a;\n\t\t\t\treturn A3(\n\t\t\t\t\tauthor$project$Model$updateWith,\n\t\t\t\t\tauthor$project$Model$Home,\n\t\t\t\t\tauthor$project$Model$HandleHomeMsg,\n\t\t\t\t\tauthor$project$Page$Home$Main$init(session));\n\t\t\t} else {\n\t\t\t\tvar boardId = maybeRoute.a.a;\n\t\t\t\tvar _n2 = A2(author$project$Model$findBoard, session.aZ, boardId);\n\t\t\t\tif (_n2.$ === 1) {\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tauthor$project$Model$NotFound(session),\n\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\tvar board = _n2.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\tauthor$project$Model$updateWith,\n\t\t\t\t\t\tauthor$project$Model$Board,\n\t\t\t\t\t\tauthor$project$Model$HandleBoardMsg,\n\t\t\t\t\t\tA2(author$project$Page$Board$Main$init, session, board));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar author$project$Game$BoardId = elm$core$Basics$identity;\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Parser$Parser = elm$core$Basics$identity;\nvar elm$url$Url$Parser$State = F5(\n\tfunction (visited, unvisited, params, frag, value) {\n\t\treturn {z: frag, C: params, y: unvisited, s: value, D: visited};\n\t});\nvar elm$url$Url$Parser$custom = F2(\n\tfunction (tipe, stringToSomething) {\n\t\treturn function (_n0) {\n\t\t\tvar visited = _n0.D;\n\t\t\tvar unvisited = _n0.y;\n\t\t\tvar params = _n0.C;\n\t\t\tvar frag = _n0.z;\n\t\t\tvar value = _n0.s;\n\t\t\tif (!unvisited.b) {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tvar next = unvisited.a;\n\t\t\t\tvar rest = unvisited.b;\n\t\t\t\tvar _n2 = stringToSomething(next);\n\t\t\t\tif (!_n2.$) {\n\t\t\t\t\tvar nextValue = _n2.a;\n\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA5(\n\t\t\t\t\t\t\telm$url$Url$Parser$State,\n\t\t\t\t\t\t\tA2(elm$core$List$cons, next, visited),\n\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tfrag,\n\t\t\t\t\t\t\tvalue(nextValue))\n\t\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\nvar author$project$Game$boardIdUrlParser = A2(\n\telm$url$Url$Parser$custom,\n\t'BoardId',\n\tA2(\n\t\telm$core$Basics$composeL,\n\t\telm$core$Maybe$map(elm$core$Basics$identity),\n\t\telm$core$String$toInt));\nvar author$project$Route$Home = {$: 0};\nvar author$project$Route$ShowBoard = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$url$Url$Parser$mapState = F2(\n\tfunction (func, _n0) {\n\t\tvar visited = _n0.D;\n\t\tvar unvisited = _n0.y;\n\t\tvar params = _n0.C;\n\t\tvar frag = _n0.z;\n\t\tvar value = _n0.s;\n\t\treturn A5(\n\t\t\telm$url$Url$Parser$State,\n\t\t\tvisited,\n\t\t\tunvisited,\n\t\t\tparams,\n\t\t\tfrag,\n\t\t\tfunc(value));\n\t});\nvar elm$url$Url$Parser$map = F2(\n\tfunction (subValue, _n0) {\n\t\tvar parseArg = _n0;\n\t\treturn function (_n1) {\n\t\t\tvar visited = _n1.D;\n\t\t\tvar unvisited = _n1.y;\n\t\t\tvar params = _n1.C;\n\t\t\tvar frag = _n1.z;\n\t\t\tvar value = _n1.s;\n\t\t\treturn A2(\n\t\t\t\telm$core$List$map,\n\t\t\t\telm$url$Url$Parser$mapState(value),\n\t\t\t\tparseArg(\n\t\t\t\t\tA5(elm$url$Url$Parser$State, visited, unvisited, params, frag, subValue)));\n\t\t};\n\t});\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn elm$core$List$concat(\n\t\t\tA2(elm$core$List$map, f, list));\n\t});\nvar elm$url$Url$Parser$oneOf = function (parsers) {\n\treturn function (state) {\n\t\treturn A2(\n\t\t\telm$core$List$concatMap,\n\t\t\tfunction (_n0) {\n\t\t\t\tvar parser = _n0;\n\t\t\t\treturn parser(state);\n\t\t\t},\n\t\t\tparsers);\n\t};\n};\nvar elm$url$Url$Parser$s = function (str) {\n\treturn function (_n0) {\n\t\tvar visited = _n0.D;\n\t\tvar unvisited = _n0.y;\n\t\tvar params = _n0.C;\n\t\tvar frag = _n0.z;\n\t\tvar value = _n0.s;\n\t\tif (!unvisited.b) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar next = unvisited.a;\n\t\t\tvar rest = unvisited.b;\n\t\t\treturn _Utils_eq(next, str) ? _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA5(\n\t\t\t\t\telm$url$Url$Parser$State,\n\t\t\t\t\tA2(elm$core$List$cons, next, visited),\n\t\t\t\t\trest,\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tvalue)\n\t\t\t\t]) : _List_Nil;\n\t\t}\n\t};\n};\nvar elm$url$Url$Parser$slash = F2(\n\tfunction (_n0, _n1) {\n\t\tvar parseBefore = _n0;\n\t\tvar parseAfter = _n1;\n\t\treturn function (state) {\n\t\t\treturn A2(\n\t\t\t\telm$core$List$concatMap,\n\t\t\t\tparseAfter,\n\t\t\t\tparseBefore(state));\n\t\t};\n\t});\nvar elm$url$Url$Parser$top = function (state) {\n\treturn _List_fromArray(\n\t\t[state]);\n};\nvar author$project$Route$parser = elm$url$Url$Parser$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(elm$url$Url$Parser$map, author$project$Route$Home, elm$url$Url$Parser$top),\n\t\t\tA2(\n\t\t\telm$url$Url$Parser$map,\n\t\t\tauthor$project$Route$ShowBoard,\n\t\t\tA2(\n\t\t\t\telm$url$Url$Parser$slash,\n\t\t\t\telm$url$Url$Parser$s('board'),\n\t\t\t\tauthor$project$Game$boardIdUrlParser))\n\t\t]));\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm$url$Url$Parser$getFirstMatch = function (states) {\n\tgetFirstMatch:\n\twhile (true) {\n\t\tif (!states.b) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar state = states.a;\n\t\t\tvar rest = states.b;\n\t\t\tvar _n1 = state.y;\n\t\t\tif (!_n1.b) {\n\t\t\t\treturn elm$core$Maybe$Just(state.s);\n\t\t\t} else {\n\t\t\t\tif ((_n1.a === '') && (!_n1.b.b)) {\n\t\t\t\t\treturn elm$core$Maybe$Just(state.s);\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$states = rest;\n\t\t\t\t\tstates = $temp$states;\n\t\t\t\t\tcontinue getFirstMatch;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\nvar elm$url$Url$Parser$removeFinalEmpty = function (segments) {\n\tif (!segments.b) {\n\t\treturn _List_Nil;\n\t} else {\n\t\tif ((segments.a === '') && (!segments.b.b)) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar segment = segments.a;\n\t\t\tvar rest = segments.b;\n\t\t\treturn A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\tsegment,\n\t\t\t\telm$url$Url$Parser$removeFinalEmpty(rest));\n\t\t}\n\t}\n};\nvar elm$url$Url$Parser$preparePath = function (path) {\n\tvar _n0 = A2(elm$core$String$split, '/', path);\n\tif (_n0.b && (_n0.a === '')) {\n\t\tvar segments = _n0.b;\n\t\treturn elm$url$Url$Parser$removeFinalEmpty(segments);\n\t} else {\n\t\tvar segments = _n0;\n\t\treturn elm$url$Url$Parser$removeFinalEmpty(segments);\n\t}\n};\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _n1 = A2(elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_n1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$getMin = function (dict) {\n\tgetMin:\n\twhile (true) {\n\t\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\t\tvar left = dict.d;\n\t\t\tvar $temp$dict = left;\n\t\t\tdict = $temp$dict;\n\t\t\tcontinue getMin;\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t}\n};\nvar elm$core$Dict$moveRedLeft = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.e.d.$ === -1) && (!dict.e.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n1 = dict.d;\n\t\t\tvar lClr = _n1.a;\n\t\t\tvar lK = _n1.b;\n\t\t\tvar lV = _n1.c;\n\t\t\tvar lLeft = _n1.d;\n\t\t\tvar lRight = _n1.e;\n\t\t\tvar _n2 = dict.e;\n\t\t\tvar rClr = _n2.a;\n\t\t\tvar rK = _n2.b;\n\t\t\tvar rV = _n2.c;\n\t\t\tvar rLeft = _n2.d;\n\t\t\tvar _n3 = rLeft.a;\n\t\t\tvar rlK = rLeft.b;\n\t\t\tvar rlV = rLeft.c;\n\t\t\tvar rlL = rLeft.d;\n\t\t\tvar rlR = rLeft.e;\n\t\t\tvar rRight = _n2.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\trlK,\n\t\t\t\trlV,\n\t\t\t\tA5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\trlL),\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rlR, rRight));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n4 = dict.d;\n\t\t\tvar lClr = _n4.a;\n\t\t\tvar lK = _n4.b;\n\t\t\tvar lV = _n4.c;\n\t\t\tvar lLeft = _n4.d;\n\t\t\tvar lRight = _n4.e;\n\t\t\tvar _n5 = dict.e;\n\t\t\tvar rClr = _n5.a;\n\t\t\tvar rK = _n5.b;\n\t\t\tvar rV = _n5.c;\n\t\t\tvar rLeft = _n5.d;\n\t\t\tvar rRight = _n5.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar elm$core$Dict$moveRedRight = function (dict) {\n\tif (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {\n\t\tif ((dict.d.d.$ === -1) && (!dict.d.d.a)) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n1 = dict.d;\n\t\t\tvar lClr = _n1.a;\n\t\t\tvar lK = _n1.b;\n\t\t\tvar lV = _n1.c;\n\t\t\tvar _n2 = _n1.d;\n\t\t\tvar _n3 = _n2.a;\n\t\t\tvar llK = _n2.b;\n\t\t\tvar llV = _n2.c;\n\t\t\tvar llLeft = _n2.d;\n\t\t\tvar llRight = _n2.e;\n\t\t\tvar lRight = _n1.e;\n\t\t\tvar _n4 = dict.e;\n\t\t\tvar rClr = _n4.a;\n\t\t\tvar rK = _n4.b;\n\t\t\tvar rV = _n4.c;\n\t\t\tvar rLeft = _n4.d;\n\t\t\tvar rRight = _n4.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t0,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\tA5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tlRight,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight)));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _n5 = dict.d;\n\t\t\tvar lClr = _n5.a;\n\t\t\tvar lK = _n5.b;\n\t\t\tvar lV = _n5.c;\n\t\t\tvar lLeft = _n5.d;\n\t\t\tvar lRight = _n5.e;\n\t\t\tvar _n6 = dict.e;\n\t\t\tvar rClr = _n6.a;\n\t\t\tvar rK = _n6.b;\n\t\t\tvar rV = _n6.c;\n\t\t\tvar rLeft = _n6.d;\n\t\t\tvar rRight = _n6.e;\n\t\t\tif (clr === 1) {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t1,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar elm$core$Dict$removeHelpPrepEQGT = F7(\n\tfunction (targetKey, dict, color, key, value, left, right) {\n\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\tvar _n1 = left.a;\n\t\t\tvar lK = left.b;\n\t\t\tvar lV = left.c;\n\t\t\tvar lLeft = left.d;\n\t\t\tvar lRight = left.e;\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tlLeft,\n\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, lRight, right));\n\t\t} else {\n\t\t\t_n2$2:\n\t\t\twhile (true) {\n\t\t\t\tif ((right.$ === -1) && (right.a === 1)) {\n\t\t\t\t\tif (right.d.$ === -1) {\n\t\t\t\t\t\tif (right.d.a === 1) {\n\t\t\t\t\t\t\tvar _n3 = right.a;\n\t\t\t\t\t\t\tvar _n4 = right.d;\n\t\t\t\t\t\t\tvar _n5 = _n4.a;\n\t\t\t\t\t\t\treturn elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _n2$2;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n6 = right.a;\n\t\t\t\t\t\tvar _n7 = right.d;\n\t\t\t\t\t\treturn elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak _n2$2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dict;\n\t\t}\n\t});\nvar elm$core$Dict$removeMin = function (dict) {\n\tif ((dict.$ === -1) && (dict.d.$ === -1)) {\n\t\tvar color = dict.a;\n\t\tvar key = dict.b;\n\t\tvar value = dict.c;\n\t\tvar left = dict.d;\n\t\tvar lColor = left.a;\n\t\tvar lLeft = left.d;\n\t\tvar right = dict.e;\n\t\tif (lColor === 1) {\n\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\tvar _n3 = lLeft.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\telm$core$Dict$removeMin(left),\n\t\t\t\t\tright);\n\t\t\t} else {\n\t\t\t\tvar _n4 = elm$core$Dict$moveRedLeft(dict);\n\t\t\t\tif (_n4.$ === -1) {\n\t\t\t\t\tvar nColor = _n4.a;\n\t\t\t\t\tvar nKey = _n4.b;\n\t\t\t\t\tvar nValue = _n4.c;\n\t\t\t\t\tvar nLeft = _n4.d;\n\t\t\t\t\tvar nRight = _n4.e;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\telm$core$Dict$removeMin(nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn A5(\n\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\telm$core$Dict$removeMin(left),\n\t\t\t\tright);\n\t\t}\n\t} else {\n\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t}\n};\nvar elm$core$Dict$removeHelp = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t} else {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_cmp(targetKey, key) < 0) {\n\t\t\t\tif ((left.$ === -1) && (left.a === 1)) {\n\t\t\t\t\tvar _n4 = left.a;\n\t\t\t\t\tvar lLeft = left.d;\n\t\t\t\t\tif ((lLeft.$ === -1) && (!lLeft.a)) {\n\t\t\t\t\t\tvar _n6 = lLeft.a;\n\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\t\tright);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n7 = elm$core$Dict$moveRedLeft(dict);\n\t\t\t\t\t\tif (_n7.$ === -1) {\n\t\t\t\t\t\t\tvar nColor = _n7.a;\n\t\t\t\t\t\t\tvar nKey = _n7.b;\n\t\t\t\t\t\t\tvar nValue = _n7.c;\n\t\t\t\t\t\t\tvar nLeft = _n7.d;\n\t\t\t\t\t\t\tvar nRight = _n7.e;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\t\t\tnColor,\n\t\t\t\t\t\t\t\tnKey,\n\t\t\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, nLeft),\n\t\t\t\t\t\t\t\tnRight);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\tright);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Dict$removeHelpEQGT,\n\t\t\t\t\ttargetKey,\n\t\t\t\t\tA7(elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$removeHelpEQGT = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === -1) {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_eq(targetKey, key)) {\n\t\t\t\tvar _n1 = elm$core$Dict$getMin(right);\n\t\t\t\tif (_n1.$ === -1) {\n\t\t\t\t\tvar minKey = _n1.b;\n\t\t\t\t\tvar minValue = _n1.c;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tminKey,\n\t\t\t\t\t\tminValue,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\telm$core$Dict$removeMin(right));\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tleft,\n\t\t\t\t\tA2(elm$core$Dict$removeHelp, targetKey, right));\n\t\t\t}\n\t\t} else {\n\t\t\treturn elm$core$Dict$RBEmpty_elm_builtin;\n\t\t}\n\t});\nvar elm$core$Dict$remove = F2(\n\tfunction (key, dict) {\n\t\tvar _n0 = A2(elm$core$Dict$removeHelp, key, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$update = F3(\n\tfunction (targetKey, alter, dictionary) {\n\t\tvar _n0 = alter(\n\t\t\tA2(elm$core$Dict$get, targetKey, dictionary));\n\t\tif (!_n0.$) {\n\t\t\tvar value = _n0.a;\n\t\t\treturn A3(elm$core$Dict$insert, targetKey, value, dictionary);\n\t\t} else {\n\t\t\treturn A2(elm$core$Dict$remove, targetKey, dictionary);\n\t\t}\n\t});\nvar elm$url$Url$percentDecode = _Url_percentDecode;\nvar elm$url$Url$Parser$addToParametersHelp = F2(\n\tfunction (value, maybeList) {\n\t\tif (maybeList.$ === 1) {\n\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[value]));\n\t\t} else {\n\t\t\tvar list = maybeList.a;\n\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\tA2(elm$core$List$cons, value, list));\n\t\t}\n\t});\nvar elm$url$Url$Parser$addParam = F2(\n\tfunction (segment, dict) {\n\t\tvar _n0 = A2(elm$core$String$split, '=', segment);\n\t\tif ((_n0.b && _n0.b.b) && (!_n0.b.b.b)) {\n\t\t\tvar rawKey = _n0.a;\n\t\t\tvar _n1 = _n0.b;\n\t\t\tvar rawValue = _n1.a;\n\t\t\tvar _n2 = elm$url$Url$percentDecode(rawKey);\n\t\t\tif (_n2.$ === 1) {\n\t\t\t\treturn dict;\n\t\t\t} else {\n\t\t\t\tvar key = _n2.a;\n\t\t\t\tvar _n3 = elm$url$Url$percentDecode(rawValue);\n\t\t\t\tif (_n3.$ === 1) {\n\t\t\t\t\treturn dict;\n\t\t\t\t} else {\n\t\t\t\t\tvar value = _n3.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\telm$core$Dict$update,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\telm$url$Url$Parser$addToParametersHelp(value),\n\t\t\t\t\t\tdict);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t});\nvar elm$url$Url$Parser$prepareQuery = function (maybeQuery) {\n\tif (maybeQuery.$ === 1) {\n\t\treturn elm$core$Dict$empty;\n\t} else {\n\t\tvar qry = maybeQuery.a;\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$url$Url$Parser$addParam,\n\t\t\telm$core$Dict$empty,\n\t\t\tA2(elm$core$String$split, '&', qry));\n\t}\n};\nvar elm$url$Url$Parser$parse = F2(\n\tfunction (_n0, url) {\n\t\tvar parser = _n0;\n\t\treturn elm$url$Url$Parser$getFirstMatch(\n\t\t\tparser(\n\t\t\t\tA5(\n\t\t\t\t\telm$url$Url$Parser$State,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\telm$url$Url$Parser$preparePath(url.bf),\n\t\t\t\t\telm$url$Url$Parser$prepareQuery(url.aI),\n\t\t\t\t\turl.as,\n\t\t\t\t\telm$core$Basics$identity)));\n\t});\nvar author$project$Route$fromUrl = function (url) {\n\treturn A2(\n\t\telm$url$Url$Parser$parse,\n\t\tauthor$project$Route$parser,\n\t\t_Utils_update(\n\t\t\turl,\n\t\t\t{\n\t\t\t\tas: elm$core$Maybe$Nothing,\n\t\t\t\tbf: A2(elm$core$Maybe$withDefault, '', url.as)\n\t\t\t}));\n};\nvar author$project$Game$Board = elm$core$Basics$identity;\nvar author$project$Game$ClickCounter = elm$core$Basics$identity;\nvar author$project$Level$levelObstacles = function (_n0) {\n\tvar l = _n0;\n\treturn l.w;\n};\nvar author$project$Particle$Particles = elm$core$Basics$identity;\nvar author$project$Particle$ParticleId = elm$core$Basics$identity;\nvar author$project$Particle$initialParticleId = 1;\nvar author$project$Particle$initial = {ae: author$project$Particle$initialParticleId, x: _List_Nil};\nvar author$project$Game$buildBoardFromLevel = F2(\n\tfunction (boardId, level) {\n\t\treturn {\n\t\t\tak: boardId + 1,\n\t\t\tK: 0,\n\t\t\tL: level,\n\t\t\tw: author$project$Level$levelObstacles(level),\n\t\t\tx: author$project$Particle$initial\n\t\t};\n\t});\nvar author$project$Level$Level = elm$core$Basics$identity;\nvar author$project$Level$map = F2(\n\tfunction (f, _n0) {\n\t\tvar l = _n0;\n\t\treturn {\n\t\t\tV: l.V,\n\t\t\tw: f(l.w),\n\t\t\tX: l.X,\n\t\t\tZ: l.Z\n\t\t};\n\t});\nvar author$project$Coordinates$Coordinates = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar author$project$Coordinates$X = elm$core$Basics$identity;\nvar author$project$Coordinates$Y = elm$core$Basics$identity;\nvar author$project$Coordinates$coordinatesFromPair = function (_n0) {\n\tvar x = _n0.a;\n\tvar y = _n0.b;\n\treturn A2(author$project$Coordinates$Coordinates, x, y);\n};\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (!_n0.$) {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar author$project$LevelBuilder$catMaybes = elm$core$List$filterMap(elm$core$Basics$identity);\nvar author$project$Obstacle$BlackHole = function (a) {\n\treturn {$: 6, a: a};\n};\nvar author$project$Obstacle$ChangeDirection = F2(\n\tfunction (a, b) {\n\t\treturn {$: 5, a: a, b: b};\n\t});\nvar author$project$Obstacle$Cluster = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar author$project$Obstacle$Energizer = function (a) {\n\treturn {$: 7, a: a};\n};\nvar author$project$Obstacle$Mirror = function (a) {\n\treturn {$: 2, a: a};\n};\nvar author$project$Obstacle$MirrorLeft = function (a) {\n\treturn {$: 3, a: a};\n};\nvar author$project$Obstacle$MirrorRight = function (a) {\n\treturn {$: 4, a: a};\n};\nvar author$project$Obstacle$Size = elm$core$Basics$identity;\nvar author$project$Obstacle$buildSize = elm$core$Basics$identity;\nvar author$project$LevelBuilder$parseObstacle = F2(\n\tfunction (coordinates, parsedObstacle) {\n\t\tswitch (parsedObstacle.$) {\n\t\t\tcase 8:\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\tcase 0:\n\t\t\t\tvar size = parsedObstacle.a;\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\tauthor$project$Obstacle$Cluster,\n\t\t\t\t\t\tauthor$project$Obstacle$buildSize(size),\n\t\t\t\t\t\tcoordinates));\n\t\t\tcase 1:\n\t\t\t\tvar direction = parsedObstacle.a;\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA2(author$project$Obstacle$ChangeDirection, direction, coordinates));\n\t\t\tcase 3:\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tauthor$project$Obstacle$BlackHole(coordinates));\n\t\t\tcase 4:\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tauthor$project$Obstacle$Energizer(coordinates));\n\t\t\tcase 5:\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tauthor$project$Obstacle$Mirror(coordinates));\n\t\t\tcase 6:\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tauthor$project$Obstacle$MirrorLeft(coordinates));\n\t\t\tcase 7:\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tauthor$project$Obstacle$MirrorRight(coordinates));\n\t\t\tdefault:\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar author$project$LevelBuilder$uncurry = F2(\n\tfunction (f, _n0) {\n\t\tvar a = _n0.a;\n\t\tvar b = _n0.b;\n\t\treturn A2(f, a, b);\n\t});\nvar author$project$LevelParser$isPortal = function (obstacle) {\n\tif (obstacle.$ === 2) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar author$project$Obstacle$Portal = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$core$Basics$not = _Basics_not;\nvar elm$core$Tuple$second = function (_n0) {\n\tvar y = _n0.b;\n\treturn y;\n};\nvar elm$core$List$partition = F2(\n\tfunction (pred, list) {\n\t\tvar step = F2(\n\t\t\tfunction (x, _n0) {\n\t\t\t\tvar trues = _n0.a;\n\t\t\t\tvar falses = _n0.b;\n\t\t\t\treturn pred(x) ? _Utils_Tuple2(\n\t\t\t\t\tA2(elm$core$List$cons, x, trues),\n\t\t\t\t\tfalses) : _Utils_Tuple2(\n\t\t\t\t\ttrues,\n\t\t\t\t\tA2(elm$core$List$cons, x, falses));\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tstep,\n\t\t\t_Utils_Tuple2(_List_Nil, _List_Nil),\n\t\t\tlist);\n\t});\nvar elm_community$list_extra$List$Extra$gatherWith = F2(\n\tfunction (testFn, list) {\n\t\tvar helper = F2(\n\t\t\tfunction (scattered, gathered) {\n\t\t\t\tif (!scattered.b) {\n\t\t\t\t\treturn elm$core$List$reverse(gathered);\n\t\t\t\t} else {\n\t\t\t\t\tvar toGather = scattered.a;\n\t\t\t\t\tvar population = scattered.b;\n\t\t\t\t\tvar _n1 = A2(\n\t\t\t\t\t\telm$core$List$partition,\n\t\t\t\t\t\ttestFn(toGather),\n\t\t\t\t\t\tpopulation);\n\t\t\t\t\tvar gathering = _n1.a;\n\t\t\t\t\tvar remaining = _n1.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\thelper,\n\t\t\t\t\t\tremaining,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t_Utils_Tuple2(toGather, gathering),\n\t\t\t\t\t\t\tgathered));\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(helper, list, _List_Nil);\n\t});\nvar author$project$LevelBuilder$parseObstacles = function (allObstacles) {\n\tvar samePortals = F2(\n\t\tfunction (o1, o2) {\n\t\t\tvar _n7 = _Utils_Tuple2(o1, o2);\n\t\t\tif ((_n7.a.$ === 2) && (_n7.b.$ === 2)) {\n\t\t\t\tvar n1 = _n7.a.a;\n\t\t\t\tvar n2 = _n7.b.a;\n\t\t\t\treturn _Utils_eq(n1, n2);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\tvar portals = A2(\n\t\telm$core$List$filter,\n\t\tA2(elm$core$Basics$composeL, author$project$LevelParser$isPortal, elm$core$Tuple$second),\n\t\tallObstacles);\n\tvar portalObstacles = A2(\n\t\telm$core$List$map,\n\t\tfunction (_n2) {\n\t\t\tvar o = _n2.a;\n\t\t\tvar os = _n2.b;\n\t\t\tvar _n3 = _Utils_Tuple2(o, os);\n\t\t\tif (_n3.b.b && (!_n3.b.b.b)) {\n\t\t\t\tvar _n4 = _n3.a;\n\t\t\t\tvar c1 = _n4.a;\n\t\t\t\tvar _n5 = _n3.b;\n\t\t\t\tvar _n6 = _n5.a;\n\t\t\t\tvar c2 = _n6.a;\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA2(author$project$Obstacle$Portal, c1, c2));\n\t\t\t} else {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t}\n\t\t},\n\t\tA2(\n\t\t\telm_community$list_extra$List$Extra$gatherWith,\n\t\t\tF2(\n\t\t\t\tfunction (_n0, _n1) {\n\t\t\t\t\tvar o1 = _n0.b;\n\t\t\t\t\tvar o2 = _n1.b;\n\t\t\t\t\treturn A2(samePortals, o1, o2);\n\t\t\t\t}),\n\t\t\tportals));\n\tvar nonPortals = A2(\n\t\telm$core$List$filter,\n\t\tA2(\n\t\t\telm$core$Basics$composeL,\n\t\t\tA2(elm$core$Basics$composeL, elm$core$Basics$not, author$project$LevelParser$isPortal),\n\t\t\telm$core$Tuple$second),\n\t\tallObstacles);\n\treturn _Utils_ap(\n\t\tA2(\n\t\t\telm$core$List$map,\n\t\t\tauthor$project$LevelBuilder$uncurry(author$project$LevelBuilder$parseObstacle),\n\t\t\tnonPortals),\n\t\tportalObstacles);\n};\nvar author$project$LevelBuilder$flattenAndParseObstacles = function (rows) {\n\treturn author$project$LevelBuilder$catMaybes(\n\t\tauthor$project$LevelBuilder$parseObstacles(\n\t\t\telm$core$List$concat(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$indexedMap,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (y, row) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$List$indexedMap,\n\t\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\t\tfunction (x, col) {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tauthor$project$Coordinates$coordinatesFromPair(\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(x, y)),\n\t\t\t\t\t\t\t\t\t\t\tcol);\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\trow);\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$List$reverse(rows)))));\n};\nvar author$project$LevelBuilder$parsedLevelToLevel = author$project$Level$map(author$project$LevelBuilder$flattenAndParseObstacles);\nvar elm$parser$Parser$UnexpectedChar = {$: 11};\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$parser$Parser$Advanced$Bad = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$parser$Parser$Advanced$Good = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar elm$parser$Parser$Advanced$Parser = elm$core$Basics$identity;\nvar elm$parser$Parser$Advanced$AddRight = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$parser$Parser$Advanced$DeadEnd = F4(\n\tfunction (row, col, problem, contextStack) {\n\t\treturn {am: col, a0: contextStack, aE: problem, aM: row};\n\t});\nvar elm$parser$Parser$Advanced$Empty = {$: 0};\nvar elm$parser$Parser$Advanced$fromState = F2(\n\tfunction (s, x) {\n\t\treturn A2(\n\t\t\telm$parser$Parser$Advanced$AddRight,\n\t\t\telm$parser$Parser$Advanced$Empty,\n\t\t\tA4(elm$parser$Parser$Advanced$DeadEnd, s.aM, s.am, x, s.c));\n\t});\nvar elm$parser$Parser$Advanced$isSubChar = _Parser_isSubChar;\nvar elm$parser$Parser$Advanced$chompIf = F2(\n\tfunction (isGood, expecting) {\n\t\treturn function (s) {\n\t\t\tvar newOffset = A3(elm$parser$Parser$Advanced$isSubChar, isGood, s.b, s.a);\n\t\t\treturn _Utils_eq(newOffset, -1) ? A2(\n\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\tfalse,\n\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, expecting)) : (_Utils_eq(newOffset, -2) ? A3(\n\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\ttrue,\n\t\t\t\t0,\n\t\t\t\t{am: 1, c: s.c, d: s.d, b: s.b + 1, aM: s.aM + 1, a: s.a}) : A3(\n\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\ttrue,\n\t\t\t\t0,\n\t\t\t\t{am: s.am + 1, c: s.c, d: s.d, b: newOffset, aM: s.aM, a: s.a}));\n\t\t};\n\t});\nvar elm$parser$Parser$chompIf = function (isGood) {\n\treturn A2(elm$parser$Parser$Advanced$chompIf, isGood, elm$parser$Parser$UnexpectedChar);\n};\nvar elm$core$Basics$always = F2(\n\tfunction (a, _n0) {\n\t\treturn a;\n\t});\nvar elm$parser$Parser$Advanced$map2 = F3(\n\tfunction (func, _n0, _n1) {\n\t\tvar parseA = _n0;\n\t\tvar parseB = _n1;\n\t\treturn function (s0) {\n\t\t\tvar _n2 = parseA(s0);\n\t\t\tif (_n2.$ === 1) {\n\t\t\t\tvar p = _n2.a;\n\t\t\t\tvar x = _n2.b;\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t} else {\n\t\t\t\tvar p1 = _n2.a;\n\t\t\t\tvar a = _n2.b;\n\t\t\t\tvar s1 = _n2.c;\n\t\t\t\tvar _n3 = parseB(s1);\n\t\t\t\tif (_n3.$ === 1) {\n\t\t\t\t\tvar p2 = _n3.a;\n\t\t\t\t\tvar x = _n3.b;\n\t\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p1 || p2, x);\n\t\t\t\t} else {\n\t\t\t\t\tvar p2 = _n3.a;\n\t\t\t\t\tvar b = _n3.b;\n\t\t\t\t\tvar s2 = _n3.c;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\t\t\tp1 || p2,\n\t\t\t\t\t\tA2(func, a, b),\n\t\t\t\t\t\ts2);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\nvar elm$parser$Parser$Advanced$ignorer = F2(\n\tfunction (keepParser, ignoreParser) {\n\t\treturn A3(elm$parser$Parser$Advanced$map2, elm$core$Basics$always, keepParser, ignoreParser);\n\t});\nvar elm$parser$Parser$ignorer = elm$parser$Parser$Advanced$ignorer;\nvar elm$parser$Parser$Advanced$succeed = function (a) {\n\treturn function (s) {\n\t\treturn A3(elm$parser$Parser$Advanced$Good, false, a, s);\n\t};\n};\nvar elm$parser$Parser$succeed = elm$parser$Parser$Advanced$succeed;\nvar author$project$LevelParser$newlineParser = A2(\n\telm$parser$Parser$ignorer,\n\telm$parser$Parser$succeed(0),\n\telm$parser$Parser$chompIf(\n\t\tfunction (c) {\n\t\t\treturn c === '\\n';\n\t\t}));\nvar elm$parser$Parser$Advanced$chompWhileHelp = F5(\n\tfunction (isGood, offset, row, col, s0) {\n\t\tchompWhileHelp:\n\t\twhile (true) {\n\t\t\tvar newOffset = A3(elm$parser$Parser$Advanced$isSubChar, isGood, offset, s0.a);\n\t\t\tif (_Utils_eq(newOffset, -1)) {\n\t\t\t\treturn A3(\n\t\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\t\t_Utils_cmp(s0.b, offset) < 0,\n\t\t\t\t\t0,\n\t\t\t\t\t{am: col, c: s0.c, d: s0.d, b: offset, aM: row, a: s0.a});\n\t\t\t} else {\n\t\t\t\tif (_Utils_eq(newOffset, -2)) {\n\t\t\t\t\tvar $temp$isGood = isGood,\n\t\t\t\t\t\t$temp$offset = offset + 1,\n\t\t\t\t\t\t$temp$row = row + 1,\n\t\t\t\t\t\t$temp$col = 1,\n\t\t\t\t\t\t$temp$s0 = s0;\n\t\t\t\t\tisGood = $temp$isGood;\n\t\t\t\t\toffset = $temp$offset;\n\t\t\t\t\trow = $temp$row;\n\t\t\t\t\tcol = $temp$col;\n\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\tcontinue chompWhileHelp;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isGood = isGood,\n\t\t\t\t\t\t$temp$offset = newOffset,\n\t\t\t\t\t\t$temp$row = row,\n\t\t\t\t\t\t$temp$col = col + 1,\n\t\t\t\t\t\t$temp$s0 = s0;\n\t\t\t\t\tisGood = $temp$isGood;\n\t\t\t\t\toffset = $temp$offset;\n\t\t\t\t\trow = $temp$row;\n\t\t\t\t\tcol = $temp$col;\n\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\tcontinue chompWhileHelp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$chompWhile = function (isGood) {\n\treturn function (s) {\n\t\treturn A5(elm$parser$Parser$Advanced$chompWhileHelp, isGood, s.b, s.aM, s.am, s);\n\t};\n};\nvar elm$parser$Parser$chompWhile = elm$parser$Parser$Advanced$chompWhile;\nvar elm$parser$Parser$Expecting = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$parser$Parser$Advanced$Token = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$parser$Parser$toToken = function (str) {\n\treturn A2(\n\t\telm$parser$Parser$Advanced$Token,\n\t\tstr,\n\t\telm$parser$Parser$Expecting(str));\n};\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$parser$Parser$Advanced$isSubString = _Parser_isSubString;\nvar elm$parser$Parser$Advanced$token = function (_n0) {\n\tvar str = _n0.a;\n\tvar expecting = _n0.b;\n\tvar progress = !elm$core$String$isEmpty(str);\n\treturn function (s) {\n\t\tvar _n1 = A5(elm$parser$Parser$Advanced$isSubString, str, s.b, s.aM, s.am, s.a);\n\t\tvar newOffset = _n1.a;\n\t\tvar newRow = _n1.b;\n\t\tvar newCol = _n1.c;\n\t\treturn _Utils_eq(newOffset, -1) ? A2(\n\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\tfalse,\n\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, expecting)) : A3(\n\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\tprogress,\n\t\t\t0,\n\t\t\t{am: newCol, c: s.c, d: s.d, b: newOffset, aM: newRow, a: s.a});\n\t};\n};\nvar elm$parser$Parser$token = function (str) {\n\treturn elm$parser$Parser$Advanced$token(\n\t\telm$parser$Parser$toToken(str));\n};\nvar author$project$LevelParser$animationParser = A2(\n\telm$parser$Parser$ignorer,\n\tA2(\n\t\telm$parser$Parser$ignorer,\n\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(0),\n\t\t\telm$parser$Parser$token('intro animation: ')),\n\t\telm$parser$Parser$chompWhile(\n\t\t\tfunction (c) {\n\t\t\t\treturn elm$core$Char$isAlphaNum(c) || (c === ' ');\n\t\t\t})),\n\tauthor$project$LevelParser$newlineParser);\nvar author$project$Coordinates$Height = elm$core$Basics$identity;\nvar author$project$Coordinates$buildHeight = elm$core$Basics$identity;\nvar author$project$Coordinates$Width = elm$core$Basics$identity;\nvar author$project$Coordinates$buildWidth = elm$core$Basics$identity;\nvar author$project$Level$buildLevel = F4(\n\tfunction (p, width, height, obstacles) {\n\t\treturn {V: height, w: obstacles, X: p, Z: width};\n\t});\nvar author$project$LevelParser$buildLevel = F2(\n\tfunction (par, rows) {\n\t\tvar width = elm$core$List$length(\n\t\t\tA2(\n\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t_List_Nil,\n\t\t\t\telm$core$List$head(rows)));\n\t\tvar height = elm$core$List$length(rows);\n\t\treturn A4(\n\t\t\tauthor$project$Level$buildLevel,\n\t\t\tpar,\n\t\t\tauthor$project$Coordinates$buildWidth(width),\n\t\t\tauthor$project$Coordinates$buildHeight(height),\n\t\t\trows);\n\t});\nvar author$project$Level$Par = elm$core$Basics$identity;\nvar elm$parser$Parser$ExpectingInt = {$: 1};\nvar elm$parser$Parser$Advanced$consumeBase = _Parser_consumeBase;\nvar elm$parser$Parser$Advanced$consumeBase16 = _Parser_consumeBase16;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$toFloat = _String_toFloat;\nvar elm$parser$Parser$Advanced$bumpOffset = F2(\n\tfunction (newOffset, s) {\n\t\treturn {am: s.am + (newOffset - s.b), c: s.c, d: s.d, b: newOffset, aM: s.aM, a: s.a};\n\t});\nvar elm$parser$Parser$Advanced$chompBase10 = _Parser_chompBase10;\nvar elm$parser$Parser$Advanced$isAsciiCode = _Parser_isAsciiCode;\nvar elm$parser$Parser$Advanced$consumeExp = F2(\n\tfunction (offset, src) {\n\t\tif (A3(elm$parser$Parser$Advanced$isAsciiCode, 101, offset, src) || A3(elm$parser$Parser$Advanced$isAsciiCode, 69, offset, src)) {\n\t\t\tvar eOffset = offset + 1;\n\t\t\tvar expOffset = (A3(elm$parser$Parser$Advanced$isAsciiCode, 43, eOffset, src) || A3(elm$parser$Parser$Advanced$isAsciiCode, 45, eOffset, src)) ? (eOffset + 1) : eOffset;\n\t\t\tvar newOffset = A2(elm$parser$Parser$Advanced$chompBase10, expOffset, src);\n\t\t\treturn _Utils_eq(expOffset, newOffset) ? (-newOffset) : newOffset;\n\t\t} else {\n\t\t\treturn offset;\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$consumeDotAndExp = F2(\n\tfunction (offset, src) {\n\t\treturn A3(elm$parser$Parser$Advanced$isAsciiCode, 46, offset, src) ? A2(\n\t\t\telm$parser$Parser$Advanced$consumeExp,\n\t\t\tA2(elm$parser$Parser$Advanced$chompBase10, offset + 1, src),\n\t\t\tsrc) : A2(elm$parser$Parser$Advanced$consumeExp, offset, src);\n\t});\nvar elm$parser$Parser$Advanced$finalizeInt = F5(\n\tfunction (invalid, handler, startOffset, _n0, s) {\n\t\tvar endOffset = _n0.a;\n\t\tvar n = _n0.b;\n\t\tif (handler.$ === 1) {\n\t\t\tvar x = handler.a;\n\t\t\treturn A2(\n\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\ttrue,\n\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, x));\n\t\t} else {\n\t\t\tvar toValue = handler.a;\n\t\t\treturn _Utils_eq(startOffset, endOffset) ? A2(\n\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\t_Utils_cmp(s.b, startOffset) < 0,\n\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, invalid)) : A3(\n\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\ttrue,\n\t\t\t\ttoValue(n),\n\t\t\t\tA2(elm$parser$Parser$Advanced$bumpOffset, endOffset, s));\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$fromInfo = F4(\n\tfunction (row, col, x, context) {\n\t\treturn A2(\n\t\t\telm$parser$Parser$Advanced$AddRight,\n\t\t\telm$parser$Parser$Advanced$Empty,\n\t\t\tA4(elm$parser$Parser$Advanced$DeadEnd, row, col, x, context));\n\t});\nvar elm$parser$Parser$Advanced$finalizeFloat = F6(\n\tfunction (invalid, expecting, intSettings, floatSettings, intPair, s) {\n\t\tvar intOffset = intPair.a;\n\t\tvar floatOffset = A2(elm$parser$Parser$Advanced$consumeDotAndExp, intOffset, s.a);\n\t\tif (floatOffset < 0) {\n\t\t\treturn A2(\n\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\ttrue,\n\t\t\t\tA4(elm$parser$Parser$Advanced$fromInfo, s.aM, s.am - (floatOffset + s.b), invalid, s.c));\n\t\t} else {\n\t\t\tif (_Utils_eq(s.b, floatOffset)) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\t\tfalse,\n\t\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, expecting));\n\t\t\t} else {\n\t\t\t\tif (_Utils_eq(intOffset, floatOffset)) {\n\t\t\t\t\treturn A5(elm$parser$Parser$Advanced$finalizeInt, invalid, intSettings, s.b, intPair, s);\n\t\t\t\t} else {\n\t\t\t\t\tif (floatSettings.$ === 1) {\n\t\t\t\t\t\tvar x = floatSettings.a;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, invalid));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar toValue = floatSettings.a;\n\t\t\t\t\t\tvar _n1 = elm$core$String$toFloat(\n\t\t\t\t\t\t\tA3(elm$core$String$slice, s.b, floatOffset, s.a));\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, invalid));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar n = _n1.a;\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\ttoValue(n),\n\t\t\t\t\t\t\t\tA2(elm$parser$Parser$Advanced$bumpOffset, floatOffset, s));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$number = function (c) {\n\treturn function (s) {\n\t\tif (A3(elm$parser$Parser$Advanced$isAsciiCode, 48, s.b, s.a)) {\n\t\t\tvar zeroOffset = s.b + 1;\n\t\t\tvar baseOffset = zeroOffset + 1;\n\t\t\treturn A3(elm$parser$Parser$Advanced$isAsciiCode, 120, zeroOffset, s.a) ? A5(\n\t\t\t\telm$parser$Parser$Advanced$finalizeInt,\n\t\t\t\tc.a9,\n\t\t\t\tc.au,\n\t\t\t\tbaseOffset,\n\t\t\t\tA2(elm$parser$Parser$Advanced$consumeBase16, baseOffset, s.a),\n\t\t\t\ts) : (A3(elm$parser$Parser$Advanced$isAsciiCode, 111, zeroOffset, s.a) ? A5(\n\t\t\t\telm$parser$Parser$Advanced$finalizeInt,\n\t\t\t\tc.a9,\n\t\t\t\tc.aB,\n\t\t\t\tbaseOffset,\n\t\t\t\tA3(elm$parser$Parser$Advanced$consumeBase, 8, baseOffset, s.a),\n\t\t\t\ts) : (A3(elm$parser$Parser$Advanced$isAsciiCode, 98, zeroOffset, s.a) ? A5(\n\t\t\t\telm$parser$Parser$Advanced$finalizeInt,\n\t\t\t\tc.a9,\n\t\t\t\tc.aj,\n\t\t\t\tbaseOffset,\n\t\t\t\tA3(elm$parser$Parser$Advanced$consumeBase, 2, baseOffset, s.a),\n\t\t\t\ts) : A6(\n\t\t\t\telm$parser$Parser$Advanced$finalizeFloat,\n\t\t\t\tc.a9,\n\t\t\t\tc.aq,\n\t\t\t\tc.ax,\n\t\t\t\tc.ar,\n\t\t\t\t_Utils_Tuple2(zeroOffset, 0),\n\t\t\t\ts)));\n\t\t} else {\n\t\t\treturn A6(\n\t\t\t\telm$parser$Parser$Advanced$finalizeFloat,\n\t\t\t\tc.a9,\n\t\t\t\tc.aq,\n\t\t\t\tc.ax,\n\t\t\t\tc.ar,\n\t\t\t\tA3(elm$parser$Parser$Advanced$consumeBase, 10, s.b, s.a),\n\t\t\t\ts);\n\t\t}\n\t};\n};\nvar elm$parser$Parser$Advanced$int = F2(\n\tfunction (expecting, invalid) {\n\t\treturn elm$parser$Parser$Advanced$number(\n\t\t\t{\n\t\t\t\taj: elm$core$Result$Err(invalid),\n\t\t\t\taq: expecting,\n\t\t\t\tar: elm$core$Result$Err(invalid),\n\t\t\t\tau: elm$core$Result$Err(invalid),\n\t\t\t\tax: elm$core$Result$Ok(elm$core$Basics$identity),\n\t\t\t\ta9: invalid,\n\t\t\t\taB: elm$core$Result$Err(invalid)\n\t\t\t});\n\t});\nvar elm$parser$Parser$int = A2(elm$parser$Parser$Advanced$int, elm$parser$Parser$ExpectingInt, elm$parser$Parser$ExpectingInt);\nvar elm$parser$Parser$Advanced$keeper = F2(\n\tfunction (parseFunc, parseArg) {\n\t\treturn A3(elm$parser$Parser$Advanced$map2, elm$core$Basics$apL, parseFunc, parseArg);\n\t});\nvar elm$parser$Parser$keeper = elm$parser$Parser$Advanced$keeper;\nvar author$project$LevelParser$parParser = A2(\n\telm$parser$Parser$keeper,\n\tA2(\n\t\telm$parser$Parser$ignorer,\n\t\telm$parser$Parser$succeed(elm$core$Basics$identity),\n\t\telm$parser$Parser$token('par: ')),\n\tA2(elm$parser$Parser$ignorer, elm$parser$Parser$int, author$project$LevelParser$newlineParser));\nvar elm$parser$Parser$Done = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$parser$Parser$Loop = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$parser$Parser$Advanced$map = F2(\n\tfunction (func, _n0) {\n\t\tvar parse = _n0;\n\t\treturn function (s0) {\n\t\t\tvar _n1 = parse(s0);\n\t\t\tif (!_n1.$) {\n\t\t\t\tvar p = _n1.a;\n\t\t\t\tvar a = _n1.b;\n\t\t\t\tvar s1 = _n1.c;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\t\tp,\n\t\t\t\t\tfunc(a),\n\t\t\t\t\ts1);\n\t\t\t} else {\n\t\t\t\tvar p = _n1.a;\n\t\t\t\tvar x = _n1.b;\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t}\n\t\t};\n\t});\nvar elm$parser$Parser$map = elm$parser$Parser$Advanced$map;\nvar elm$parser$Parser$Advanced$Done = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$parser$Parser$Advanced$Loop = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$parser$Parser$toAdvancedStep = function (step) {\n\tif (!step.$) {\n\t\tvar s = step.a;\n\t\treturn elm$parser$Parser$Advanced$Loop(s);\n\t} else {\n\t\tvar a = step.a;\n\t\treturn elm$parser$Parser$Advanced$Done(a);\n\t}\n};\nvar elm$parser$Parser$Advanced$loopHelp = F4(\n\tfunction (p, state, callback, s0) {\n\t\tloopHelp:\n\t\twhile (true) {\n\t\t\tvar _n0 = callback(state);\n\t\t\tvar parse = _n0;\n\t\t\tvar _n1 = parse(s0);\n\t\t\tif (!_n1.$) {\n\t\t\t\tvar p1 = _n1.a;\n\t\t\t\tvar step = _n1.b;\n\t\t\t\tvar s1 = _n1.c;\n\t\t\t\tif (!step.$) {\n\t\t\t\t\tvar newState = step.a;\n\t\t\t\t\tvar $temp$p = p || p1,\n\t\t\t\t\t\t$temp$state = newState,\n\t\t\t\t\t\t$temp$callback = callback,\n\t\t\t\t\t\t$temp$s0 = s1;\n\t\t\t\t\tp = $temp$p;\n\t\t\t\t\tstate = $temp$state;\n\t\t\t\t\tcallback = $temp$callback;\n\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\tcontinue loopHelp;\n\t\t\t\t} else {\n\t\t\t\t\tvar result = step.a;\n\t\t\t\t\treturn A3(elm$parser$Parser$Advanced$Good, p || p1, result, s1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar p1 = _n1.a;\n\t\t\t\tvar x = _n1.b;\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p || p1, x);\n\t\t\t}\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$loop = F2(\n\tfunction (state, callback) {\n\t\treturn function (s) {\n\t\t\treturn A4(elm$parser$Parser$Advanced$loopHelp, false, state, callback, s);\n\t\t};\n\t});\nvar elm$parser$Parser$loop = F2(\n\tfunction (state, callback) {\n\t\treturn A2(\n\t\t\telm$parser$Parser$Advanced$loop,\n\t\t\tstate,\n\t\t\tfunction (s) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$parser$Parser$map,\n\t\t\t\t\telm$parser$Parser$toAdvancedStep,\n\t\t\t\t\tcallback(s));\n\t\t\t});\n\t});\nvar elm$parser$Parser$Advanced$Append = F2(\n\tfunction (a, b) {\n\t\treturn {$: 2, a: a, b: b};\n\t});\nvar elm$parser$Parser$Advanced$oneOfHelp = F3(\n\tfunction (s0, bag, parsers) {\n\t\toneOfHelp:\n\t\twhile (true) {\n\t\t\tif (!parsers.b) {\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, false, bag);\n\t\t\t} else {\n\t\t\t\tvar parse = parsers.a;\n\t\t\t\tvar remainingParsers = parsers.b;\n\t\t\t\tvar _n1 = parse(s0);\n\t\t\t\tif (!_n1.$) {\n\t\t\t\t\tvar step = _n1;\n\t\t\t\t\treturn step;\n\t\t\t\t} else {\n\t\t\t\t\tvar step = _n1;\n\t\t\t\t\tvar p = step.a;\n\t\t\t\t\tvar x = step.b;\n\t\t\t\t\tif (p) {\n\t\t\t\t\t\treturn step;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$s0 = s0,\n\t\t\t\t\t\t\t$temp$bag = A2(elm$parser$Parser$Advanced$Append, bag, x),\n\t\t\t\t\t\t\t$temp$parsers = remainingParsers;\n\t\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\t\tbag = $temp$bag;\n\t\t\t\t\t\tparsers = $temp$parsers;\n\t\t\t\t\t\tcontinue oneOfHelp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$oneOf = function (parsers) {\n\treturn function (s) {\n\t\treturn A3(elm$parser$Parser$Advanced$oneOfHelp, s, elm$parser$Parser$Advanced$Empty, parsers);\n\t};\n};\nvar elm$parser$Parser$oneOf = elm$parser$Parser$Advanced$oneOf;\nvar author$project$LevelParser$many = function (parser) {\n\tvar f = function (acc) {\n\t\treturn elm$parser$Parser$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$parser$Parser$keeper,\n\t\t\t\t\telm$parser$Parser$succeed(\n\t\t\t\t\t\tfunction (a) {\n\t\t\t\t\t\t\treturn elm$parser$Parser$Loop(\n\t\t\t\t\t\t\t\tA2(elm$core$List$cons, a, acc));\n\t\t\t\t\t\t}),\n\t\t\t\t\tparser),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$parser$Parser$map,\n\t\t\t\t\telm$core$Basics$always(\n\t\t\t\t\t\telm$parser$Parser$Done(\n\t\t\t\t\t\t\telm$core$List$reverse(acc))),\n\t\t\t\t\telm$parser$Parser$succeed(0))\n\t\t\t\t]));\n\t};\n\treturn A2(elm$parser$Parser$loop, _List_Nil, f);\n};\nvar author$project$Direction$Down = 1;\nvar author$project$Direction$Left = 2;\nvar author$project$Direction$Right = 3;\nvar author$project$Direction$Up = 0;\nvar author$project$LevelParser$BlackHole = {$: 3};\nvar author$project$LevelParser$ChangeDirection = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$LevelParser$Cluster = function (a) {\n\treturn {$: 0, a: a};\n};\nvar author$project$LevelParser$Empty = {$: 8};\nvar author$project$LevelParser$Energizer = {$: 4};\nvar author$project$LevelParser$Mirror = {$: 5};\nvar author$project$LevelParser$MirrorLeft = {$: 6};\nvar author$project$LevelParser$MirrorRight = {$: 7};\nvar author$project$LevelParser$Portal = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$parser$Parser$Advanced$andThen = F2(\n\tfunction (callback, _n0) {\n\t\tvar parseA = _n0;\n\t\treturn function (s0) {\n\t\t\tvar _n1 = parseA(s0);\n\t\t\tif (_n1.$ === 1) {\n\t\t\t\tvar p = _n1.a;\n\t\t\t\tvar x = _n1.b;\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t} else {\n\t\t\t\tvar p1 = _n1.a;\n\t\t\t\tvar a = _n1.b;\n\t\t\t\tvar s1 = _n1.c;\n\t\t\t\tvar _n2 = callback(a);\n\t\t\t\tvar parseB = _n2;\n\t\t\t\tvar _n3 = parseB(s1);\n\t\t\t\tif (_n3.$ === 1) {\n\t\t\t\t\tvar p2 = _n3.a;\n\t\t\t\t\tvar x = _n3.b;\n\t\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p1 || p2, x);\n\t\t\t\t} else {\n\t\t\t\t\tvar p2 = _n3.a;\n\t\t\t\t\tvar b = _n3.b;\n\t\t\t\t\tvar s2 = _n3.c;\n\t\t\t\t\treturn A3(elm$parser$Parser$Advanced$Good, p1 || p2, b, s2);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\nvar elm$parser$Parser$andThen = elm$parser$Parser$Advanced$andThen;\nvar elm$parser$Parser$Advanced$mapChompedString = F2(\n\tfunction (func, _n0) {\n\t\tvar parse = _n0;\n\t\treturn function (s0) {\n\t\t\tvar _n1 = parse(s0);\n\t\t\tif (_n1.$ === 1) {\n\t\t\t\tvar p = _n1.a;\n\t\t\t\tvar x = _n1.b;\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t} else {\n\t\t\t\tvar p = _n1.a;\n\t\t\t\tvar a = _n1.b;\n\t\t\t\tvar s1 = _n1.c;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\t\tp,\n\t\t\t\t\tA2(\n\t\t\t\t\t\tfunc,\n\t\t\t\t\t\tA3(elm$core$String$slice, s0.b, s1.b, s0.a),\n\t\t\t\t\t\ta),\n\t\t\t\t\ts1);\n\t\t\t}\n\t\t};\n\t});\nvar elm$parser$Parser$Advanced$getChompedString = function (parser) {\n\treturn A2(elm$parser$Parser$Advanced$mapChompedString, elm$core$Basics$always, parser);\n};\nvar elm$parser$Parser$getChompedString = elm$parser$Parser$Advanced$getChompedString;\nvar elm$parser$Parser$Problem = function (a) {\n\treturn {$: 12, a: a};\n};\nvar elm$parser$Parser$Advanced$problem = function (x) {\n\treturn function (s) {\n\t\treturn A2(\n\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\tfalse,\n\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, x));\n\t};\n};\nvar elm$parser$Parser$problem = function (msg) {\n\treturn elm$parser$Parser$Advanced$problem(\n\t\telm$parser$Parser$Problem(msg));\n};\nvar author$project$LevelParser$singleCharacterInt = A2(\n\telm$parser$Parser$andThen,\n\tfunction (d) {\n\t\treturn A2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\telm$parser$Parser$problem('unable to parse'),\n\t\t\tA2(\n\t\t\t\telm$core$Maybe$map,\n\t\t\t\telm$parser$Parser$succeed,\n\t\t\t\telm$core$String$toInt(d)));\n\t},\n\telm$parser$Parser$getChompedString(\n\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(0),\n\t\t\telm$parser$Parser$chompIf(elm$core$Char$isDigit))));\nvar author$project$LevelParser$obstacleParser = elm$parser$Parser$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$Empty),\n\t\t\telm$parser$Parser$token('- ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$Energizer),\n\t\t\telm$parser$Parser$token('e ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$keeper,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$Cluster),\n\t\t\tA2(\n\t\t\t\telm$parser$Parser$ignorer,\n\t\t\t\telm$parser$Parser$int,\n\t\t\t\telm$parser$Parser$chompIf(\n\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\treturn c === ' ';\n\t\t\t\t\t}))),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(\n\t\t\t\tauthor$project$LevelParser$ChangeDirection(1)),\n\t\t\telm$parser$Parser$token('d ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(\n\t\t\t\tauthor$project$LevelParser$ChangeDirection(0)),\n\t\t\telm$parser$Parser$token('u ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(\n\t\t\t\tauthor$project$LevelParser$ChangeDirection(3)),\n\t\t\telm$parser$Parser$token('r ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(\n\t\t\t\tauthor$project$LevelParser$ChangeDirection(2)),\n\t\t\telm$parser$Parser$token('l ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$BlackHole),\n\t\t\telm$parser$Parser$token('b ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$MirrorLeft),\n\t\t\telm$parser$Parser$token('mL')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$MirrorRight),\n\t\t\telm$parser$Parser$token('mR')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$Mirror),\n\t\t\telm$parser$Parser$token('m ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$keeper,\n\t\t\tA2(\n\t\t\t\telm$parser$Parser$ignorer,\n\t\t\t\telm$parser$Parser$succeed(author$project$LevelParser$Portal),\n\t\t\t\telm$parser$Parser$token('w')),\n\t\t\tauthor$project$LevelParser$singleCharacterInt)\n\t\t]));\nvar author$project$LevelParser$rowParser = author$project$LevelParser$many(author$project$LevelParser$obstacleParser);\nvar author$project$LevelParser$sepBy = F2(\n\tfunction (parser, separator) {\n\t\tvar f = function (acc) {\n\t\t\treturn elm$parser$Parser$oneOf(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$parser$Parser$keeper,\n\t\t\t\t\t\telm$parser$Parser$succeed(\n\t\t\t\t\t\t\tfunction (a) {\n\t\t\t\t\t\t\t\treturn elm$parser$Parser$Loop(\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$cons, a, acc));\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tA2(elm$parser$Parser$ignorer, parser, separator)),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$parser$Parser$map,\n\t\t\t\t\t\telm$core$Basics$always(\n\t\t\t\t\t\t\telm$parser$Parser$Done(\n\t\t\t\t\t\t\t\telm$core$List$reverse(acc))),\n\t\t\t\t\t\telm$parser$Parser$succeed(0))\n\t\t\t\t\t]));\n\t\t};\n\t\treturn A2(elm$parser$Parser$loop, _List_Nil, f);\n\t});\nvar author$project$LevelParser$rowsParser = A2(author$project$LevelParser$sepBy, author$project$LevelParser$rowParser, author$project$LevelParser$newlineParser);\nvar author$project$LevelParser$levelParser = A2(\n\telm$parser$Parser$keeper,\n\tA2(\n\t\telm$parser$Parser$keeper,\n\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$buildLevel),\n\t\t\tauthor$project$LevelParser$animationParser),\n\t\tauthor$project$LevelParser$parParser),\n\tauthor$project$LevelParser$rowsParser);\nvar author$project$LevelParser$levelsParser = A2(\n\telm$parser$Parser$keeper,\n\tA2(\n\t\telm$parser$Parser$ignorer,\n\t\telm$parser$Parser$succeed(elm$core$Basics$identity),\n\t\tauthor$project$LevelParser$newlineParser),\n\tauthor$project$LevelParser$many(author$project$LevelParser$levelParser));\nvar elm$core$Result$mapError = F2(\n\tfunction (f, result) {\n\t\tif (!result.$) {\n\t\t\tvar v = result.a;\n\t\t\treturn elm$core$Result$Ok(v);\n\t\t} else {\n\t\t\tvar e = result.a;\n\t\t\treturn elm$core$Result$Err(\n\t\t\t\tf(e));\n\t\t}\n\t});\nvar elm$parser$Parser$deadEndsToString = function (deadEnds) {\n\treturn 'TODO deadEndsToString';\n};\nvar elm$parser$Parser$DeadEnd = F3(\n\tfunction (row, col, problem) {\n\t\treturn {am: col, aE: problem, aM: row};\n\t});\nvar elm$parser$Parser$problemToDeadEnd = function (p) {\n\treturn A3(elm$parser$Parser$DeadEnd, p.aM, p.am, p.aE);\n};\nvar elm$parser$Parser$Advanced$bagToList = F2(\n\tfunction (bag, list) {\n\t\tbagToList:\n\t\twhile (true) {\n\t\t\tswitch (bag.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn list;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar bag1 = bag.a;\n\t\t\t\t\tvar x = bag.b;\n\t\t\t\t\tvar $temp$bag = bag1,\n\t\t\t\t\t\t$temp$list = A2(elm$core$List$cons, x, list);\n\t\t\t\t\tbag = $temp$bag;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue bagToList;\n\t\t\t\tdefault:\n\t\t\t\t\tvar bag1 = bag.a;\n\t\t\t\t\tvar bag2 = bag.b;\n\t\t\t\t\tvar $temp$bag = bag1,\n\t\t\t\t\t\t$temp$list = A2(elm$parser$Parser$Advanced$bagToList, bag2, list);\n\t\t\t\t\tbag = $temp$bag;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue bagToList;\n\t\t\t}\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$run = F2(\n\tfunction (_n0, src) {\n\t\tvar parse = _n0;\n\t\tvar _n1 = parse(\n\t\t\t{am: 1, c: _List_Nil, d: 1, b: 0, aM: 1, a: src});\n\t\tif (!_n1.$) {\n\t\t\tvar value = _n1.b;\n\t\t\treturn elm$core$Result$Ok(value);\n\t\t} else {\n\t\t\tvar bag = _n1.b;\n\t\t\treturn elm$core$Result$Err(\n\t\t\t\tA2(elm$parser$Parser$Advanced$bagToList, bag, _List_Nil));\n\t\t}\n\t});\nvar elm$parser$Parser$run = F2(\n\tfunction (parser, source) {\n\t\tvar _n0 = A2(elm$parser$Parser$Advanced$run, parser, source);\n\t\tif (!_n0.$) {\n\t\t\tvar a = _n0.a;\n\t\t\treturn elm$core$Result$Ok(a);\n\t\t} else {\n\t\t\tvar problems = _n0.a;\n\t\t\treturn elm$core$Result$Err(\n\t\t\t\tA2(elm$core$List$map, elm$parser$Parser$problemToDeadEnd, problems));\n\t\t}\n\t});\nvar author$project$LevelParser$parseLevels = function (input) {\n\treturn A2(\n\t\telm$core$Result$mapError,\n\t\telm$parser$Parser$deadEndsToString,\n\t\tA2(elm$parser$Parser$run, author$project$LevelParser$levelsParser, input));\n};\nvar elm$core$Result$toMaybe = function (result) {\n\tif (!result.$) {\n\t\tvar v = result.a;\n\t\treturn elm$core$Maybe$Just(v);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar author$project$Game$loadLevels = function (input) {\n\tvar parsedBoards = author$project$LevelParser$parseLevels(input);\n\treturn A2(\n\t\telm$core$Maybe$withDefault,\n\t\t_List_Nil,\n\t\tA2(\n\t\t\telm$core$Maybe$map,\n\t\t\telm$core$List$map(author$project$LevelBuilder$parsedLevelToLevel),\n\t\t\telm$core$Result$toMaybe(parsedBoards)));\n};\nvar author$project$Game$loadBoards = A2(\n\telm$core$Basics$composeL,\n\telm$core$List$indexedMap(author$project$Game$buildBoardFromLevel),\n\tauthor$project$Game$loadLevels);\nvar author$project$Levels$levels = '\\nintro animation: Tutorial 1\\npar: 10\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- 1 - 2 - 3 - 4 \\n- - - - - - - - \\n- 1 - 2 - 3 - 4 \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 2\\npar: 8\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- d - 2 - 3 - l \\n- - - - - - - - \\n- 1 - 2 - 3 - 4 \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 3\\npar: 8\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- m - 2 - 3 - 4 \\n- - - - - - - - \\n- 1 - 2 - 3 - m \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 4\\npar: 8\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- mR- 2 - 3 - 4 \\n- - - - - - - - \\n- 1 - 2 - 3 - mR\\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 5\\npar: 13\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- 1 - 2 - 3 - 4 \\n- b - b - b - b \\n- 1 - 2 - 3 - 4 \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 6\\npar: 8\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- 1 - 2 - 3 - e \\n- - - - - - - - \\n- e - 2 - 3 - 4 \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 7\\npar: 8\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- 1 - 2 - 3 - w0\\n- - - - - - - - \\n- w0- 2 - 3 - 4 \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 8\\npar: 7\\n- - - - - - - - \\n- - - - - - - - \\n- d - 3 1 3 - l \\n- - - - - - - - \\n- 3 - 4 2 4 - 3 \\n- - - - - - - - \\n- r - 3 1 3 - u \\n- - - - - - - - \\nintro animation: Tutorial 9\\npar: 6\\n- - - - - - - - \\n- - - - - - - - \\n- d - 3 1 3 - w2\\n- - - - - - - - \\n- 3 - 4 2 4 - 3 \\n- - - - - - - - \\n- w2- 3 1 3 - u \\n- - - - - - - - \\nintro animation: None\\npar: 6\\n- - - - - - - d \\n- - - w0- 3 1 1 \\n- b - - - - - e \\n- - - 4 - 4 - - \\n- - - - - - - 2 \\n- b - 1 - e - - \\n- r - - - 3 - w0\\n- - - u - - - - \\nintro animation: None\\npar: 4\\nmR- 4 - - e - - \\ne - - 4 - - - 2 \\n- 3 - w0- 4 - - \\n- - - - - - - e \\ne 1 - m - - - - \\n- - - - - 3 - l \\n- - - - - - - - \\n- w0- - 2 2 - m \\nintro animation: None\\npar: 4\\n- - - - - - - - \\n- - - - - - - e \\n- - 4 - e - - l \\nd - - l 3 - l m \\n4 - b - - - 2 - \\n- r - - - - 4 - \\nmL4 - - - - 2 mL\\nm - - 3 - - 2 l \\nintro animation: None\\npar: 5\\nd - - - 4 - mL- \\n- - - - - - - - \\n- 2 - - e - - w0\\nr - - 4 - - 3 - \\n- - - - - - - - \\n- - - - - - 3 - \\nw0- - 3 - - - - \\n- - - - - - mR- \\nintro animation: None\\npar: 8\\n4 3 - - - - 3 4 \\n2 w0- - - - w12 \\n- - - - - - - - \\nmL- - 3 3 - - mR\\nmR- - 3 3 - - mL\\n- - - - - - - - \\n2 w1- - - - w02 \\n4 3 - - - - 3 4 \\nintro animation: None\\npar: 6\\n- - - - - - - 3 \\nm 3 - 2 - - - 3 \\n- - 3 e - 3 - 2 \\n- - - - - - - - \\n- 2 - mR- - - - \\n- - - - - - - - \\n- 3 - 3 - - - l \\n- - - - - - - - \\nintro animation: None\\npar: 5\\n- - - - - - - - \\n- - - mR2 - l - \\n- - - - - - - - \\n- 3 - 1 3 - 4 m \\n- 3 - 3 3 - - - \\n- - - 2 - - - - \\n- - - m - - - - \\n- - - - - - - - \\nintro animation: None\\npar: 4\\n- - - - - - - - \\n- mR1 3 1 2 - - \\n3 e 3 1 4 4 4 m \\n- mL1 3 1 2 - - \\n- - 3 3 - - - - \\n- - 4 4 - - - - \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: None\\npar: 7\\n- - - - - - - - \\n- - d 2 3 l - - \\n- - 3 2 2 3 - - \\n- - d 2 2 u - - \\n- - - - - - - - \\n- - 3 mRmL3 - - \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: None\\npar: 4\\n- - - - - - - - \\n- 3 - - - mL- - \\n- - r - - - d - \\n- - 4 - - 4 - - \\n- 2 u - - l - - \\n- - - - - - - - \\n- - - 2 - - 3 - \\n- u - 3 - - l - \\nintro animation: None \\npar: 4\\n3 - - - - - mL- \\n- w2- 2 - - - mL\\n- - - - - - - - \\n- - - - - - - - \\n- - - w1- - - - \\n- 2 - - - - w2- \\n- - w1- - - - 4 \\nmL- 4 - e - - mR\\nintro animation: None\\npar: 4\\nm b b b b b b m \\nm 2 3 d - - mLm \\nm 1 1 mR- - - m \\nm - 3 - 3 3 u m \\nm mRu - 4 - w0m \\nm w0- - d l 3 m \\nm - - 4 3 3 u m \\nm b b b b b b m \\nintro animation: None \\npar: 5\\nmR- - 4 - - mL- \\n- - - - - - - - \\n3 - w2- 4 - w1- \\n- - r - - - - - \\n- w1- - - - - - \\n- - - 3 - w2- 4 \\n- - - - - - - - \\n- 3 - - - - - mR\\nintro animation: None\\npar: 5\\n- m mL- 4 - 3 m \\nb - 4 - 4 e - - \\nw02 - 3 - 4 2 l \\nd w13 - 3 - m - \\nr 2 - 3 - 3 - w1\\n- w0- 4 3 - 4 - \\nb m 2 e 3 3 2 - \\nb - 3 - m - - b \\nintro animation: None\\npar: 9\\nb 3 b - b - - b \\n- u 2 3 l 3 - 4 \\n2 - mL- 3 - - b \\nb - - - - - - - \\n- - - - - - - b \\nb - 3 - 2 4 - 4 \\n- 3 - mR- - - - \\nb r 3 b - b - b \\nintro animation: None\\npar: 6\\n- - - - - - - - \\nmR- - - 1 - - - \\n- - - - - - - - \\n1 - - - 3 - - - \\nmL- 2 - 3 - mL- \\n- - - - - - - - \\n- - 3 - mR- 3 3 \\n- - r - e - u 2 \\nintro animation: None\\npar: 7\\nb r - - - d b 3 \\nb - b b b r - u \\nb u l b b b b b \\nb b - b b b b b \\nb b u b b b b b \\n3 - - - 4 - 3 - \\n3 - 3 - mR- - - \\nr - 2 - - - 3 - \\nintro animation: None\\npar: 6\\nr - mL- - mR- l \\n- w02 b b 2 w1- \\n- 3 - 3 3 - 3 - \\n3 2 - - - - 2 3 \\n3 - - 3 3 - - 3 \\n3 - - - - - - 3 \\nw1- - 2 2 - - w0\\n- - - - - - - - \\nintro animation: None\\npar: 5\\n4 3 4 - - - - d \\n3 - - - - - d - \\n3 3 4 - - d - - \\n3 - - - - - - - \\n4 - - 4 - - - 4 \\nr - - - 3 - - 3 \\n- r - - - 3 - 3 \\n- - r - - - 3 4 \\nintro animation: None\\npar: 4\\n4 - - - - e - 4 \\n- - - - - - - - \\n- e 2 - - 3 2 - \\n- - - - - - - - \\n- - - - - - - - \\n- 2 3 - - 2 e - \\n- - - - - - - - \\n4 - e - - - - 4 \\nintro animation: None\\npar: 5\\nw0- mR- - mL- 3 \\n3 - - - 4 - - - \\nmL- - - - - - 4 \\n- 4 mL- - - mL- \\nmR- - - - mR- - \\ne - - 3 - - - - \\n4 - - 4 - - mR- \\n- - u - 4 - - w0\\nintro animation: None\\npar: 4\\nw03 4 3 4 3 4 3 \\n3 w3- - - - - 4 \\n4 - w2- - - - 3 \\n3 - - w1- - - 4 \\n4 - - - w3- - 3 \\n3 - - - - w0- 4 \\n4 - - - - - w13 \\n3 4 3 4 3 4 3 w2\\nintro animation: None\\npar: 6\\nr 4 - - 4 - 2 d \\n- r - d l - - - \\n3 - b - - b 3 - \\n- 3 b - 3 b - 4 \\n4 - b 4 - b 4 2 \\n- 4 b - - b - 4 \\nu 3 2 3 u - 4 - \\n- u 4 - 4 - - l \\nintro animation: None\\npar: 4\\n3 - 3 e 3 - - 4 \\n- 1 - 3 - 3 e - \\n3 e 1 - 3 - 3 - \\n- 3 - 1 e 3 - 4 \\n4 - 3 - 1 - 3 e \\n- 3 e 3 - 1 - 3 \\n- - 3 - 3 e 1 - \\ne - - 4 - 3 - 2 \\nintro animation: None\\npar: 5\\n4 - 4 - - 3 - 3 \\n- 3 - - - - 4 - \\n4 - 4 - - 3 - 3 \\n- - - e e - - - \\n- - - e e - - - \\n3 - 3 - - 4 - 4 \\n- 4 - - - - 3 - \\n3 - 3 - - 4 - 4 \\nintro animation: None\\npar: 6\\n2 3 3 e b - - - \\n- - - b e 3 2 2 \\n2 4 3 e b - - - \\n- - - e e 3 4 2 \\n2 3 3 e b - - - \\n- - - b e 3 2 2 \\n2 4 3 e b - - - \\n- - - b e 3 4 2 \\nintro animation: None\\npar: 5\\n4 mLw0- - - - 3 \\n- 3 mL- - - - 3 \\n3 4 e mLm - m m \\n- 3 b - mL- - - \\n2 4 e - 4 - - 3 \\n- 3 b - 3 - mL- \\n- 4 e - 3 - - mL\\n2 3 - - 3 w0- - \\nintro animation: None \\npar: 3\\n- - 4 - - - mL- \\nr 3 - - - - - - \\n- - - - - - - - \\n- w2- - - - 4 3 \\n- - - - - - - - \\nmL- - 4 - w2- 3 \\n- - - - - - - - \\n- - 3 - - 4 - mR\\nintro animation: None \\npar: 4\\nmR- e w1- e - mL\\n- - - - - - w24 \\n- - 3 - - 3 - mL\\n- - - - - - - - \\n4 - w2- - - - - \\n- - - - - 3 - mR\\n- 2 - w1- - 2 - \\nmL- - 1 - - - mR\\nintro animation: None \\npar: 5\\n- - 3 - - w1- - \\n- - - - - - - - \\nmR- - - - 3 - mL\\n- - - - - - - - \\n- - - - - - - - \\nu 4 - mLmR2 - - \\n- - - - - - - - \\n- - w13 3 b - 2 \\nintro animation: None \\npar: 6\\nw3- - - - - - 3 \\n- - - - - - - - \\n- 4 - w1- - w2- \\n- - - - - - - - \\nw1- - 1 4 - - w3\\n- - - - - - - - \\n- 3 - - - - mR- \\n- - - w2- - - - \\nintro animation: None\\npar: 3\\n- - - - - - - - \\n- 3 - - - mL- - \\n- - r - - - d - \\n- - 4 - - 4 - - \\n- 2 u - - l - - \\n- - - - - - - - \\n- - - 2 - - 3 - \\n- u - 3 - - l - \\nintro animation: None\\npar: 6\\nb b e b b e b b \\nd 4 - - 4 - - m \\nb - 4 - - - - e \\nb 3 - 3 - - d b \\nr - - - 3 - - e \\nb e - - - 4 - b \\ne r - - - - 3 b \\nb b m b m b b b \\nintro animation: None \\npar: 5\\n4 - 4 - mLw2- - \\nb - b - - - - - \\n3 - - 2 - 3 - w1\\n- - - e - - - - \\nw1- - - e - - - \\n- - - - - 3 - 4 \\n- - 3 - - b - b \\n- - w2mL- 4 - 4 \\nintro animation: None\\npar: 7\\nmR- 2 mLmR- 3 mL\\n- - - - - - - - \\n- - - 3 - - - - \\n- - 1 - e - - 1 \\n- - - - - - - - \\n- 4 - 3 - 4 - - \\n- 3 - - - - 4 mR\\n4 - - - mR- - - \\nintro animation: None\\npar: 4\\n- m mL- 4 - 3 m \\nb - 4 - 4 e - - \\nw02 - 3 - 4 2 l \\nd w13 - 3 - m - \\nr 2 - 3 - 3 - w1\\n- w0- 4 3 - 4 - \\nb m 2 e 3 3 2 - \\nb - 3 - m - - b \\nintro animation: None\\npar: 6\\n4 mRmL3 mRmL3 mL\\nmL- - - - - - 3 \\nmR- 3 - - 3 - mR\\n3 - - 3 3 - - mL\\nmL- - 3 3 - - 3 \\nmR- 3 - - 3 - mR\\n3 - - - - - - mL\\nmL3 mLmR3 mLmR4 \\nintro animation: None\\npar: 6\\ne e e e e e e e \\ne b b b b - b e \\ne b 3 2 - - b e \\n- - - 3 4 3 b e \\ne b 3 4 3 - - - \\ne b - - 2 3 b e \\ne b - b b b b e \\ne e e e e e e e \\nintro animation: None\\npar: 7\\n4 3 3 w01 3 w53 \\nw8w11 3 w93 4 3 \\n3 3 w43 2 w23 w7\\n3 w02 3 w63 3 3 \\n2 3 3 w43 3 w73 \\nw33 3 3 w13 2 w9\\n1 w2w83 4 3 3 w6\\n3 w54 3 3 w31 3 \\nintro animation: None\\npar: 9\\n4 - 3 mLmR4 - d \\n3 3 - - 3 d r 3 \\n- 3 4 d r - 4 - \\n4 d r 3 - 3 - 4 \\n2 - 3 - 4 l u 2 \\n3 - 3 l u 3 3 3 \\n- l u 3 3 - 4 - \\nu - - mRmL4 - 3 \\nintro animation: None\\npar: 7\\n4 - 4 1 4 2 4 1 \\n1 - 2 - - - - 4 \\n4 - 4 - 4 1 - 2 \\n2 - 1 - 2 4 - 4 \\n4 - 4 - - 2 - 1 \\n1 - 2 4 1 4 - 4 \\n4 - - - - - - 2 \\n2 4 1 4 2 4 1 4 \\nintro animation: None\\npar: 10\\n4 4 4 4 4 4 4 4 \\n4 2 3 2 2 3 2 4 \\n4 3 1 1 1 1 3 4 \\n4 2 1 4 4 1 2 4 \\n4 2 1 4 4 3 2 4 \\n4 3 1 1 1 1 3 4 \\n4 2 3 2 2 3 2 4 \\n4 4 4 4 4 4 4 4 \\nintro animation: None\\npar: 6\\n3 - 3 - - - - 3 \\n- - e 4 - mL- - \\nmL- - - 2 1 mL4 \\n- mLe - 2 1 - mL\\n- mR- - 2 1 - mR\\nmR- e - 2 1 mR4 \\n- - - 4 - mR- - \\n3 - 3 - - - - 3 \\nintro animation: None\\npar: 8\\nmR3 - - - - 2 1 \\n3 4 - - - - 2 2 \\n- - b b b b - - \\n- - b e e b - - \\n- - b e e b - - \\n- - b b b b - - \\n4 3 - - - - mR- \\n2 4 - - - - - mR\\nintro animation: None\\npar: 11\\n4 4 1 2 2 2 4 4 \\n- - - - - - - - \\n- - - - - - - - \\n3 3 3 3 3 3 3 3 \\n3 3 3 3 3 3 3 3 \\n- - - - - - - - \\n- - - - - - - - \\n4 4 2 2 2 1 4 4 \\nintro animation: None\\npar: 4\\n- 3 - 3 - l - 4 \\n- - - - - 3 - mR\\n- 4 - - - - 3 - \\n- r - d - - - - \\n- - - - - - - - \\n- 4 - - - u 4 m \\n- - - - - - - - \\n- - - 2 - - - r \\nintro animation: None\\npar: 4\\nm - - - - - - m \\nb 2 3 d - - mLb \\nm 1 1 mR- - - m \\nb - 3 - 3 3 u b \\nm mRu - 4 - w0m \\nb w0- - d l 3 b \\nm - - 4 3 3 u m \\nb - - - - - - b \\nintro animation: None\\npar: 6\\nw1- 3 2 3 3 - - \\nr - - 2 3 2 1 m \\nb b b b b b b b \\nw0- - e 3 - - mL\\nmL- - 3 e - - w1\\nb b b b b b b b \\nm 1 2 3 2 - - l \\n- - 3 3 2 3 - w0\\nintro animation: None\\npar: 6\\nw03 4 l - m b 4 \\n3 2 l 3 - b 4 4 \\n4 u 3 4 b 4 3 4 \\nu 3 4 b 4 3 3 4 \\n- - b 4 3 3 2 4 \\n- b 4 3 3 2 2 3 \\nb 4 3 3 2 2 3 3 \\n4 4 4 4 4 3 3 w0\\nintro animation: None\\npar: 5\\n3 - - 3 3 - - m \\n3 - - 3 3 - - m \\n3 - - 3 4 - - m \\n3 - - m 1 - - 4 \\n4 - - 1 m - - 3 \\nm - - 4 3 - - 3 \\nm - - 3 3 - - 3 \\nm - - 3 3 - - 3 \\nintro animation: None\\npar: 5\\n- d - - - mL- - \\n- - 4 3 2 3 - - \\n- 1 e 2 3 4 - - \\n- - 4 3 2 4 - - \\n- - b b b 3 - - \\n- 2 4 - - 3 - - \\n- u 3 - - 3 - - \\n- mL- - - mR- - \\nintro animation: None\\npar: 3\\n4 w0b e - - - mL\\n1 4 b 1 b 3 - 4 \\n1 2 b 4 b 3 - 4 \\nu 4 b 4 b 3 - 4 \\n4 l b 4 b 2 - 4 \\n4 d b 4 b 1 1 mR\\n4 l b 4 b mL- 4 \\n4 mRb w0b 4 - 4 \\nintro animation: None\\npar: 4\\nm - 4 3 - 1 - 2 \\n- - - - 3 - - 3 \\n- - 3 - 4 - 3 - \\n4 r - w1w3- - - \\n- - - w3w1- - 3 \\n- 3 - l - - - - \\n- - 3 - - 4 4 - \\nr - - - 3 - - u \\nintro animation: None\\npar: 4\\nr 1 - 3 b w8- 3 \\n- u - - 3 b - 3 \\n- 1 - - 4 - b 3 \\n4 e - 2 - - 1 u \\n- e 2 - 2 1 4 u \\n- 4 - - - - b 3 \\n- u - - - b 3 4 \\nu 2 - w8b 3 4 mR\\nintro animation: None\\npar: 3\\n- - - - - - - - \\n- - w0- - 3 - - \\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- - 4 - - w0- - \\n- - - - - - - - \\nintro animation: None\\npar: 4\\n- - - - - - - - \\n- - w0- - 4 - - \\n4 - - 4 3 mL- - \\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\nmL- 3 - - w0- - \\n- - - - - - - - \\nintro animation: None\\npar: 5\\nmR- d - - - - - \\n- - w0- - 4 - - \\n4 - - 4 3 mL- - \\n- - - - - - - - \\n3 - - - - - - 3 \\n- - - - - - - 3 \\nmL- 3 - - w0- - \\n- - - - - r - mR\\nintro animation: None\\npar: 4\\nmR- d - - - - l \\n- - w0- - 4 - 4 \\n4 - - 4 3 mL- - \\n- - - - - - - - \\n3 - - 2 - - - 3 \\n- - - - - - - 3 \\nmL- 3 - - w0- 3 \\n- - - - - r - mR\\nintro animation: None\\npar: 4\\nmR- d - - 3 - l \\n- - w0- - 3 - 4 \\n4 - - 4 3 mL- - \\n- 3 - 3 l - - - \\n3 - - 2 - - - 3 \\n- - - - - - - 3 \\nmL- 3 - - w0- 3 \\n- - - - - r - mR\\nintro animation: None\\npar: 4\\nmR- d - - 3 - l \\n3 - w0- - 3 - 4 \\n4 - - 4 3 mL- - \\n- 3 - 3 l - - 2 \\n3 - - 4 - - - 3 \\n- 4 - - - - - 2 \\nmLl 3 - - w0- 2 \\n- u 4 - 3 r - mR\\nintro animation: None\\npar: 4\\nmR- d - - 3 - l \\n3 mRw0- 2 3 - 3 \\n4 2 - 4 3 mL- 3 \\n- 3 - 3 l - 4 2 \\n3 - - 4 3 - - 2 \\n- 3 - - - - - 2 \\nmLl 3 - mLw0- 2 \\n- u 3 - 4 r r mR\\nintro animation: None\\npar: 5\\nmR- d - - 3 - l \\n4 mRw0- 2 3 2 3 \\n3 3 2 4 3 mL- 3 \\nmR3 b 3 r - 4 2 \\n3 2 3 4 3 - 3 2 \\n- 3 r - - - u 1 \\nmLl 3 4 mLw0- 2 \\n- u 3 3 2 r r mR\\nintro animation: None\\npar: 5\\nmR- d 1 1 3 - l \\n4 mRw0- 2 3 2 3 \\n3 3 2 4 3 mL- 3 \\nmR3 3 3 r 1 4 2 \\n3 2 3 4 3 1 3 2 \\n- 3 r 1 1 e u 1 \\nmLl 3 4 mLw03 2 \\n- u 3 3 3 r r mR\\nintro animation: None\\npar: 8\\n- - - - - - - - \\n- r - d - - l - \\n- 4 - d - - 4 - \\nb 2 b - - b 2 b \\nb e 3 3 - b e b \\nb b b 2 - b 3 b \\n- - d 2 - - 3 d \\n- - r r 1 1 b l \\nintro animation: None\\npar: 6\\nr - - 2 - - - l \\nr - - 2 - - - u \\nu - - 2 - e - d \\nd e - 2 - - - d \\nd - - 2 - - - l \\nd - - 2 - - - l \\nd - - 2 - e - u \\nr - - 2 - - - u \\nintro animation: None\\npar: 8\\n3 - d - - r - 3 \\n- - 1 l - - w1- \\n- - e - 3 - - - \\n- - w1- - - - - \\nmL- - 2 - - w2- \\nb w22 - u - - - \\nr - 2 - - u - - \\nu l m u - - - l \\nintro animation: None\\npar: 7\\n- - - - b - - - \\n- w0- r - - 2 d \\nmL- - - - - - - \\n- 3 - 3 - - - - \\n- - - - 3 - u - \\ne - - 3 - - - - \\n- r - u - - - 3 \\nb - - - - w0- - \\nintro animation: None\\npar: 9\\n- 2 - - - b d l \\nb e e e e b 2 - \\ne 1 2 1 1 b - - \\nb r - 1 - b - - \\n- - - - - b b - \\n- e - 3 2 2 3 u \\n- - u - r - - e \\n- r - - - - u - \\nintro animation: None\\npar: 9\\nmR- 3 - - - - mL\\n- 3 w03 - 3 - - \\n- - 3 - 2 w13 2 \\n- 3 - - - 2 3 w2\\n2 w12 - - 3 - 3 \\n- 3 - - 3 w03 - \\n- - 3 - - 3 - - \\nmL3 w23 - - - mR\\nintro animation: None\\npar: 13\\nm 3 3 3 3 3 d b \\nb b b b b b - b \\n3 3 2 b b 2 3 3 \\n3 3 mR2 2 mL2 2 \\n3 3 2 m m 2 3 2 \\n3 3 mL3 3 mR3 3 \\n3 3 3 2 2 3 2 2 \\nb b b b b b b b \\nintro animation: None\\npar: 7\\nb b b b b b b b \\nb 3 3 - - 3 3 b \\nb 3 2 2 2 2 3 b \\nb 3 2 e b 2 3 b \\nb 3 2 b e 2 3 b \\nb 3 2 2 2 2 3 b \\nb 3 3 - - 3 3 b \\nb b b b b b b b \\nintro animation: None\\npar: 9\\n- 2 - - - - - l \\n- 2 - - - m 2 mR\\n- 2 - - - - 2 - \\n- 3 - - - - 2 - \\n- 3 - - - m 2 mL\\n- 3 - - - - - - \\nmRe - - - - 3 - \\n- mLl - 3 - l - \\nintro animation: None\\npar: 6\\n- - b 3 3 b d e \\n- w0- 3 3 - w03 \\nb - b 2 2 b b - \\n3 3 2 4 4 2 3 3 \\n3 3 2 4 4 2 3 3 \\nb - b 2 2 b - b \\nr w1- 3 3 - w1l \\n- u b 3 3 b 3 e \\nintro animation: None\\npar: 7\\n- d - - - - - l \\nr - - - - - d - \\n- - 3 b b 3 - - \\n- r 3 b b 3 - u \\n- - 3 b b 3 l r \\nu - 3 b b 3 - d \\nd r - - d - - - \\n- - r - - - l - \\nintro animation: None\\npar: 7\\nd l - l r - r d \\n- - d - - d - - \\n- - 3 3 3 3 - - \\n1 3 3 b 4 3 3 1 \\n- - 3 4 b 3 - - \\n1 3 3 3 3 3 3 1 \\n- r 1 2 2 1 l - \\n1 - 1 3 3 1 - 1 \\nintro animation: None\\npar: 8\\nb 3 b b b b b b \\nb 3 b 3 2 2 2 l \\nb e d b b b b 2 \\nb r 2 3 2 d b 2 \\nb b - b b 2 b 2 \\nb b - b b 2 b 2 \\nb r 3 2 2 3 2 u \\nb b r r r r r u \\nintro animation: None\\npar: 11\\nb - 3 - - - - mL\\n- r - - - 3 - 3 \\n- - 3 - l 2 - - \\nm 3 - - - - - b \\n- - r - 3 - 3 - \\nd - - - - - - u \\n- - 3 - - l - - \\nmL- u - - - u b \\nintro animation: None\\npar: 10\\n- - - 3 3 e - - \\n- 3 - d d 3 b - \\n- - 3 - 3 - 2 - \\nm - - 3 - - - d \\n- - - - 3 w0- - \\n- u - 2 - 3 - - \\n- - - - - w0- 3 \\n- - 3 3 3 u - - \\nintro animation: None\\npar: 6\\n3 3 - - - - - l \\n- - 3 - - - l - \\n- - - 3 - l - - \\n- - - - 3 - - - \\n- - - r u - - - \\n- - r - - u - - \\n- r - - - - u - \\nr - - - - - - u \\nintro animation: None\\npar: 10\\n- - - - 2 w12 - \\nr 3 - - - - d - \\n- w04 3 3 - - m \\nr 2 - 4 w2- - m \\n- - - - 2 - l - \\nw22 - - w0- u - \\n- - 1 - 3 3 - - \\nr 2 w12 - - l - \\nintro animation: None\\npar: 6\\n- - - - - - - - \\n- mL- - 2 - - - \\n- 3 3 - - m - - \\n- m 3 2 3 m - - \\n- m 3 2 3 m - - \\n- m 3 2 3 m - - \\n- m - 2 3 2 - - \\n- - - - - mR- - \\nintro animation: None\\npar: 6\\n- - d - 4 - 3 - \\n3 3 l - 4 - 3 - \\n- - u 3 d r u l \\n4 4 r 3 3 3 - - \\n- - 3 3 3 u 4 4 \\nr d l u 3 l - - \\n- 3 - 4 - d 3 3 \\n- 3 - 4 - r - - \\nintro animation: None\\npar: 7\\n- - - - d 1 l - \\n- - - - 1 1 1 d \\n- - w01 1 1 u 1 \\n- 3 e 3 2 1 1 1 \\n- 2 3 2 2 1 1 1 \\n- - mL3 2 w0- 1 \\n- - - - 1 - - - \\n- - - - 1 - - - \\nintro animation: None\\npar: 7\\n- r - r - d - - \\nr 1 r - - 3 d - \\n- u - 2 - d - - \\nd 3 - 3 - 2 d - \\n- u - 3 - d - - \\n2 - - - - 1 2 d \\nr - 1 1 1 1 2 l \\n- - - r - 1 2 - \\nintro animation: None\\npar: 9\\n3 - - - - - - d \\n- - 3 - d - - - \\n- b w0- 1 - - - \\n- - 2 b - - - - \\n- - 3 b - - - - \\nu - 4 - w0b - - \\n- - 3 - 2 - - l \\n- - - - - - - - \\nintro animation: None\\npar: 6\\n- - - m - - - - \\nd 2 - 3 d - 3 l \\nd - - e - - - u \\nd 1 2 1 3 1 - m \\n- 1 1 1 1 1 - l \\n- - - 3 - - - - \\n2 - - mL- - 3 u \\nr - - 2 - - - u \\nintro animation: None\\npar: 12\\nr d - - - - 1 - \\n2 2 2 2 - - e l \\n2 3 3 2 r - - d \\n2 2 2 2 - - - l \\n- - - - 2 2 2 2 \\n- e - - 2 3 3 2 \\n- 2 - d 2 2 2 2 \\nu - - l - - - l \\nintro animation: None\\npar: 12\\n- - d 3 - l - - \\n- d 3 - - - 3 l \\nr - w0b - - - - \\n- d 2 b - - - - \\n3 - 1 b - 3 - - \\n- - - b - w03 2 \\n- 3 u - - - - - \\nu 3 - - - 3 - u \\nintro animation: None\\npar: 13\\n- d - - 1 - - l \\n4 - 3 - - 2 - - \\n- 2 - 2 1 - 4 u \\n4 - 3 e b 2 - 2 \\n- 2 1 2 1 - 4 u \\n4 - 3 1 - 2 - 2 \\n- 2 - 2 - - 4 u \\nr - - - u - r 2 \\nintro animation: None\\npar: 9\\n3 d - - - - d - \\nr 3 - 3 3 - 3 d \\n- - - b b - - - \\n- r - 1 1 - l - \\n- r - 1 1 - l - \\n- - - b b - - - \\n- 3 - 3 3 - 3 - \\n- u - - - - u l \\nintro animation: None\\npar: 4\\nm w1- 1 2 3 l l \\nw0- m 3 - 4 mR1 \\nu 4 3 4 d 3 2 3 \\n2 3 mR3 3 d - 2 \\n1 u - 4 3 l u 3 \\n4 - l 3 mL- b 2 \\nu w1- 3 2 3 - w0\\nmL- 4 - mRb b - \\nintro animation: None\\npar: 4\\n- d 2 - - l - l \\nmRl 4 - b m 4 4 \\n4 3 3 b 1 b b 3 \\n2 3 b 1 e w0b 4 \\n2 4 3 b 1 b b 4 \\n4 - 3 3 b - - 4 \\nmL- 3 2 4 4 mL4 \\nw0- 2 - 3 - l - \\nintro animation: None\\npar: 7\\n- 3 - - - 3 - d \\n- - - - - - - - \\n4 w0- - - 3 - d \\n- - - - 3 - - - \\n- 2 - - - - 2 d \\n- - 2 - w0- - 3 \\n- - - - - - - - \\n- u - - 3 - 3 l \\nintro animation: None\\npar: 7\\nb b w0b b b b b \\nb 3 1 2 3 3 4 w2\\nb 3 e - b - 4 b \\nw22 - 3 2 w11 b \\nb 3 b 4 3 e 2 b \\nb 4 w1- b - 3 b \\nb 3 2 3 1 3 4 b \\nb b b b b b w0b \\nintro animation: None\\npar: 7\\n3 3 3 3 m 3 w03 \\nb 3 b 3 3 3 3 3 \\n3 3 3 3 b 3 m 3 \\nb 3 mL3 3 3 3 3 \\n3 3 3 3 mR3 w03 \\n1 3 1 3 3 3 3 3 \\n3 3 3 3 1 3 1 3 \\ne 3 1 3 3 3 3 3 \\nintro animation: None\\npar: 4\\nb w21 4 3 4 w0b \\n3 mL2 3 3 4 mRw1\\n4 - b 3 3 b 2 4 \\n3 4 - m m 3 3 mR\\n4 - - m m 3 4 mL\\n3 4 b - - b 4 3 \\nw0mR4 3 4 - mLw2\\nb w1- 3 - 4 w0b \\nintro animation: None\\npar: 9\\n2 3 - - - - 3 2 \\n- 3 - - - - 3 - \\n- - 3 2 2 3 - - \\n- - 2 e - 2 - - \\n- - 2 - e 2 - - \\n- - 3 2 2 3 - - \\n- - - - - - - - \\n- u l l r r u - \\nintro animation: None\\npar: 8\\n3 - - r d - - - \\n- - - 3 d - - - \\nw03 - u - - - 3 \\nr 3 - 3 - l - - \\n- 3 - - - - - - \\n3 w04 e 3 - - - \\n- r - - - 2 - u \\n- - - - - - - - \\nintro animation: None\\npar: 13\\n- 3 - d - - - - \\n- - - 4 - - - - \\n- w11 1 1 - l - \\n- b 2 4 w03 u - \\n4 w01 1 1 - - - \\nw1m - u 3 - u - \\n- - - - mL- - - \\n- - - - - - - - \\nintro animation: None\\npar: 10\\n- r - d - - w0- \\n- 3 - 2 - 3 d - \\n- - b - b - - - \\nmL1 - e b 1 1 - \\n- - b - b - - - \\n- - b 2 - 3 u - \\nu 3 - - b - - - \\n- r - u - w0- - \\nintro animation: None\\npar: 4\\n- - - - - - - - \\n- m - 4 - d - - \\nd - - 3 - - m - \\n- m - 3 3 d - - \\n- - - - - - m - \\n- m 2 - - l - - \\nr - 2 3 - - - - \\n- - - - - - - - \\nintro animation: None\\npar: 13\\n- - - m - - - - \\nr 3 b 1 - - - - \\n- 3 b 1 - d l - \\nw13 b 2 - w1- - \\n- - b 2 - 3 - - \\n- r - u - 3 - - \\nr 3 2 3 2 u - - \\n- r 2 r 2 2 u - \\nintro animation: None\\npar: 7\\n4 - - b - - b - \\n- 3 1 e 3 m 2 d \\n- mL- - w0- - l \\nr 2 - - - - 1 4 \\nb w0- - 3 - e l \\n2 3 r - 1 mR- - \\n4 - - e 4 2 b 2 \\nb e m - 2 r - u \\nintro animation: None\\npar: 6\\n- - - - - - - - \\n- r 3 3 2 1 - - \\n- - 1 2 3 3 l - \\nr 3 2 b b 2 3 l \\nr 3 2 b b 2 3 l \\n- u 3 2 3 3 u - \\n- u 3 3 2 3 l - \\n- - - - - - - - \\nintro animation: None\\npar: 9\\n- - - - - - - - \\nb - - - - m 3 - \\n- - - 3 - - - l \\n- - m - - - 3 - \\n- - - - - - - - \\nd - 3 - m 2 - u \\nr - - - - - u - \\nb - 3 - - u m 2 \\nintro animation: None\\npar: 4\\n- - - - - - - - \\nd 1 - l l - - - \\n- - - 2 3 l - - \\n3 - 2 mL2 3 - - \\n2 - mRe mL- - - \\n- u 3 3 3 u - - \\n- - - - - - - - \\n- - - r - u - - \\nintro animation: None\\npar: 10\\n- - - - - - - - \\n- 3 - d d d - - \\n- u 1 1 1 1 - - \\n- - u 4 4 u - 2 \\n- - u 4 4 d 3 u \\n- 4 - b b 3 u - \\n- u - - - l - - \\n- - - - - - - - \\nintro animation: None\\npar: 6\\n- - - - - m r d \\n3 2 - l - - e - \\n- - - 3 - 4 - - \\n- 1 - - 1 - 2 l \\nb - e mL- 4 - - \\n- - - - - - - - \\n- u - 3 - l m - \\n- - - - - - - - \\nintro animation: None\\npar: 15\\nw01 2 w13 3 w93 \\n3 w82 3 3 w23 2 \\nw72 3 w33 3 1 w6\\n1 w13 2 3 w42 4 \\n3 4 w51 w92 w33 \\n4 w63 2 w03 1 2 \\n3 w22 w83 4 w43 \\nw72 1 3 w54 2 3 \\nintro animation: None\\npar: 6\\nb 3 - - d - - - \\nb - - - - - - - \\nw03 - - 2 - 3 b \\n3 - b - - - 2 b \\n3 - b 3 3 - m b \\nb 3 - - w0b - - \\nb b - - - - - - \\nb - - - - - - - \\nintro animation: None\\npar: 9\\nb b 4 b 4 b 4 b \\nb 4 1 4 1 4 1 4 \\n4 1 4 1 4 1 4 b \\nb 4 1 4 1 4 1 4 \\n4 1 4 b 4 1 4 b \\nb 4 1 4 1 4 1 4 \\n4 1 4 1 4 1 4 b \\n- 4 b 4 b 4 b - \\nintro animation: None\\npar: 9\\nb b 1 3 3 1 b b \\nb mR2 3 mL2 m 2 \\nmR3 2 3 2 2 3 3 \\n2 m 2 mL3 1 3 m \\n2 2 2 3 2 3 3 1 \\n2 1 2 1 2 m 2 2 \\n2 3 mR3 2 2 mL3 \\nm 2 1 3 2 1 2 m \\nintro animation: None\\npar: 10\\n- 4 - - - - - - \\nr w0- - - - 3 - \\n2 d - - - - - - \\n- r 1 1 1 1 l - \\n- - - - - - - - \\n- 4 - - - - - - \\n2 l 3 - - w0u - \\nu - - - - r u - \\nintro animation: None\\npar: 8\\nd 3 2 3 - - - d \\nd 4 1 4 - - - d \\n- - - - r d - - \\n- - - - 3 2 - - \\nr - - - mR3 - - \\n- - - - - 2 - - \\n- b b b b b - - \\nu 2 3 2 3 2 - l \\nintro animation: None\\npar: 4\\n4 w0b e - - - mL\\n1 4 b 1 b 3 - 4 \\n1 2 b 4 b 3 - 4 \\nu 4 b 4 b 3 - 4 \\n4 l b 4 b 2 - 4 \\n4 d b 4 b 1 1 mR\\n4 l b 4 b mL- 4 \\n4 mRb w0b 4 - 4 \\nintro animation: None\\npar: 9\\n- - - - - - - - \\n- - 3 - - d - - \\n- - - d 3 - - - \\n4 - u 2 u 3 - - \\n4 - d 2 d 3 - - \\n- - - u 3 - - - \\n- - 3 - - u - - \\n- - - - - - - - \\nintro animation: None\\npar: 9\\n- 1 - - b - 1 - \\n1 e 3 - - 3 e 1 \\n- w0- - - - - - \\n- 2 - 1 w11 3 - \\n- 2 3 1 w01 3 - \\n- 3 2 - - - 3 - \\n1 e w1- 1 - e 1 \\n- 1 - b - - 1 - \\nintro animation: None\\npar: 5\\nw03 4 4 - 1 - 3 \\n4 3 3 2 - 1 3 - \\nd 2 2 4 - 1 - - \\n- - d - - 1 - l \\n- - r - - u - 3 \\nr 3 2 - - - - u \\n- 2 - 4 2 3 - 4 \\n- 3 - 2 2 2 1 w0\\nintro animation: None\\npar: 12\\nb b b b b b b b \\nb r 3 r 2 3 2 d \\nb 2 b u b b b 1 \\nb r 1 4 1 d b 3 \\nb 3 b 3 d 4 l 2 \\nb 2 l 1 l - l 3 \\nb u b u b 1 b 1 \\nb b b - b 3 b u \\nintro animation: None\\npar: 4\\nb b 3 3 4 - b b \\nb mR4 2 2 d mLb \\n- - - 4 2 - - 3 \\n4 u 4 mLmR- 3 1 \\n- - - mRmL3 l 4 \\n- 2 - 3 2 3 2 - \\nb mL- 4 2 3 l b \\nb b - 1 2 2 b b \\nintro animation: None\\npar: 5\\ne e e e e e e e \\n- 1 1 1 1 1 1 1 \\n- r d l r d r d \\n- - 1 3 2 1 1 1 \\n4 - 4 1 1 1 - 1 \\n- - 3 - - 1 1 1 \\n3 - - 4 - - 3 1 \\n3 1 1 3 2 1 2 1 \\nintro animation: None\\npar: 4\\nmR- - 3 - 4 3 mL\\n- b - 4 2 - 3 - \\n3 - mR- 1 mLw03 \\nw02 1 3 4 - b 1 \\n1 3 1 b 3 2 4 - \\n1 - mL- 3 mR- 3 \\n- u mR3 - - l 2 \\nmL- 3 - e 2 - mR\\nintro animation: None\\npar: 5\\nb 4 3 4 1 - 4 3 \\nd b - 2 - 1 w32 \\n2 - b - 4 3 3 4 \\n2 1 - mL3 - u 4 \\n- 2 2 - mL4 e 1 \\n3 2 2 - 3 b 3 3 \\n- w3- 4 4 3 b 2 \\n2 3 1 4 2 - 4 b \\nintro animation: None\\npar: 5\\nr d - b 3 2 m - \\ne w4d b - 2 - 4 \\nr u l b 3 2 2 3 \\nb b b mR- 3 2 4 \\n- 3 4 3 - - 2 3 \\n1 4 2 2 2 4 3 2 \\n2 3 1 2 - w43 3 \\nmL2 3 4 3 mR- 1 \\nintro animation: None\\npar: 5\\nmR1 1 e - mRmL- \\n1 3 2 - - 1 1 4 \\n4 mR2 e b w62 4 \\n4 - 1 - - u 2 - \\n2 - - - - 3 1 3 \\n1 - 2 e b 4 1 2 \\nd w6- - b 4 1 4 \\nmLu - - b 3 - mR\\nintro animation: None\\npar: 2\\n4 - w0b b - mRl \\n3 - b - - b w2- \\nw1b - w1- - b w3\\nb w3- - - w6mLb \\nb w4- r - - mRb \\nw4b u - l - b w2\\n- - b - - b - 4 \\n3 l w6b b w03 3 \\nintro animation: None\\npar: 7\\n3 3 3 4 3 3 3 e \\n3 3 3 3 3 3 3 3 \\ne 3 b b b b b b \\n3 3 3 4 3 3 3 3 \\n3 3 3 3 4 3 3 3 \\nb b b b b b 3 e \\n3 3 3 3 3 3 3 3 \\ne 3 3 3 4 3 3 3 \\nintro animation: None\\npar: 13\\nb 4 1 3 - 3 3 l \\n4 d - 4 - 2 r 3 \\n2 3 2 4 1 4 - 2 \\n3 3 1 mRmL2 3 3 \\n- 1 4 mLmR- 3 3 \\n1 - l 4 1 3 2 4 \\n- b 4 3 2 - d - \\n1 - 4 - - 3 - m \\nintro animation: None\\npar: 10\\nmR- - - 2 - 4 mL\\nr - 2 2 3 2 mL3 \\nm m m m m m 1 mR\\nm w01 1 3 m 1 mL\\nb e 1 1 1 m 2 - \\nm b m m m m 3 - \\nmR- - 3 3 3 mR- \\nmL- 2 2 2 1 - w0\\nintro animation: None\\npar: 11\\ne mLb b b b mRe \\nd - mLb b mR- d \\nd 2 - mLmR- 1 d \\nd 3 - 4 4 - 4 l \\n- b b b b b b u \\nd 3 - - - 3 - u \\nd e e - e - e 2 \\n1 2 2 3 2 3 2 2 \\nintro animation: None\\npar: 8\\n2 - - - - b - w0\\ne - 1 mLb e - 1 \\n- - - - - - - - \\n- b e - - e - - \\n- - - w0- - - - \\ne - e b - 1 - e \\nb - b - - - - - \\n- - - - b e - e \\nintro animation: None\\npar: 6\\n3 3 3 3 3 3 3 3 \\n3 r 3 - - d - 3 \\n3 u - - l - 2 3 \\n3 - - 4 - - - 3 \\n3 mL- mR- 3 - 3 \\n3 - - - - - - 3 \\n3 r - 3 u r u 3 \\n3 3 3 3 3 3 3 3 \\nintro animation: None\\npar: 7\\nr b l l 3 l l w0\\n4 d d 2 d 4 u u \\nr 2 r u d l l u \\nr u r u d r 3 u \\n2 l l u d d l u \\nr r 3 u d r d u \\nr r u u d 2 r d \\nw0r r u 2 u r r \\nintro animation: None\\npar: 15\\nw11 1 e e 1 1 w0\\nb b b - - b b b \\n- - - - - - - - \\n- - - - - - - - \\n4 4 4 4 4 4 4 4 \\n- b b b b b b - \\n2 w03 2 2 3 w12 \\nmL- - - - - - mR\\nintro animation: None\\npar: 13\\n- - e - - d - - \\n- - 3 - - - 3 - \\n- - - - - - 3 - \\nb b b b - - - - \\n3 3 3 b - - - - \\n3 w03 b r w0- l \\n3 3 3 b 3 - 3 1 \\nb b b b - u - e \\n  ';\nvar author$project$Session$initial = function (key) {\n\treturn {\n\t\taZ: author$project$Game$loadBoards(author$project$Levels$levels),\n\t\tab: key\n\t};\n};\nvar author$project$Update$init = F3(\n\tfunction (_n0, url, key) {\n\t\tvar session = author$project$Session$initial(key);\n\t\treturn A2(\n\t\t\tauthor$project$Model$changeRouteTo,\n\t\t\tauthor$project$Route$fromUrl(url),\n\t\t\tauthor$project$Model$Loading(session));\n\t});\nvar author$project$Page$Board$Main$AdvanceBoard = {$: 1};\nvar elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {aG: processes, aT: taggers};\n\t});\nvar elm$time$Time$init = elm$core$Task$succeed(\n\tA2(elm$time$Time$State, elm$core$Dict$empty, elm$core$Dict$empty));\nvar elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _n0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _n0.a;\n\t\t\t\t\tvar result = _n0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = list.a;\n\t\t\t\t\t\tvar lKey = _n2.a;\n\t\t\t\t\t\tvar lValue = _n2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_n0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _n3 = A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\telm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _n3.a;\n\t\tvar intermediateResult = _n3.b;\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n4, result) {\n\t\t\t\t\tvar k = _n4.a;\n\t\t\t\t\tvar v = _n4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$time$Time$addMySub = F2(\n\tfunction (_n0, state) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\tvar _n1 = A2(elm$core$Dict$get, interval, state);\n\t\tif (_n1.$ === 1) {\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _n1.a;\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2(elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Process$spawn = _Scheduler_spawn;\nvar elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$time$Time$customZone = elm$time$Time$Zone;\nvar elm$time$Time$setInterval = _Time_setInterval;\nvar elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\telm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2(elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\telm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2(elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _n0) {\n\t\tvar processes = _n0.aG;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_n6, id, _n7) {\n\t\t\t\tvar spawns = _n7.a;\n\t\t\t\tvar existing = _n7.b;\n\t\t\t\tvar kills = _n7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_n5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\telm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3(elm$core$List$foldl, elm$time$Time$addMySub, elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _n4) {\n\t\t\t\tvar spawns = _n4.a;\n\t\t\t\tvar existing = _n4.b;\n\t\t\t\tvar kills = _n4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _n3) {\n\t\t\t\tvar spawns = _n3.a;\n\t\t\t\tvar existing = _n3.b;\n\t\t\t\tvar kills = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _n1 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\telm$core$Dict$empty,\n\t\t\t\telm$core$Task$succeed(0)));\n\t\tvar spawnList = _n1.a;\n\t\tvar existingDict = _n1.b;\n\t\tvar killTask = _n1.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$time$Time$now = _Time_now(elm$time$Time$millisToPosix);\nvar elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _n0 = A2(elm$core$Dict$get, interval, state.aT);\n\t\tif (_n0.$ === 1) {\n\t\t\treturn elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _n0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Task$andThen, tellTaggers, elm$time$Time$now));\n\t\t}\n\t});\nvar elm$time$Time$subMap = F2(\n\tfunction (f, _n0) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\treturn A2(\n\t\t\telm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2(elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager(elm$time$Time$init, elm$time$Time$onEffects, elm$time$Time$onSelfMsg, 0, elm$time$Time$subMap);\nvar elm$time$Time$subscription = _Platform_leaf('Time');\nvar elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn elm$time$Time$subscription(\n\t\t\tA2(elm$time$Time$Every, interval, tagger));\n\t});\nvar author$project$Page$Board$Main$subscriptions = function (_n0) {\n\treturn A2(\n\t\telm$time$Time$every,\n\t\t600,\n\t\telm$core$Basics$always(author$project$Page$Board$Main$AdvanceBoard));\n};\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar author$project$Page$Home$Main$subscriptions = elm$core$Basics$always(elm$core$Platform$Sub$none);\nvar elm$core$Platform$Sub$map = _Platform_map;\nvar author$project$Update$subscriptions = function (model) {\n\tswitch (model.$) {\n\t\tcase 0:\n\t\t\tvar homeModel = model.a;\n\t\t\treturn A2(\n\t\t\t\telm$core$Platform$Sub$map,\n\t\t\t\tauthor$project$Model$HandleHomeMsg,\n\t\t\t\tauthor$project$Page$Home$Main$subscriptions(homeModel));\n\t\tcase 3:\n\t\t\tvar boardModel = model.a;\n\t\t\treturn A2(\n\t\t\t\telm$core$Platform$Sub$map,\n\t\t\t\tauthor$project$Model$HandleBoardMsg,\n\t\t\t\tauthor$project$Page$Board$Main$subscriptions(boardModel));\n\t\tdefault:\n\t\t\treturn elm$core$Platform$Sub$none;\n\t}\n};\nvar author$project$Coordinates$mapX = F2(\n\tfunction (f, _n0) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\treturn A2(\n\t\t\tauthor$project$Coordinates$Coordinates,\n\t\t\tf(x),\n\t\t\ty);\n\t});\nvar author$project$Coordinates$mapY = F2(\n\tfunction (f, _n0) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\treturn A2(\n\t\t\tauthor$project$Coordinates$Coordinates,\n\t\t\tx,\n\t\t\tf(y));\n\t});\nvar author$project$Direction$advanceCoordinatesInDirection = F2(\n\tfunction (direction, coordinates) {\n\t\tswitch (direction) {\n\t\t\tcase 0:\n\t\t\t\treturn A2(\n\t\t\t\t\tauthor$project$Coordinates$mapY,\n\t\t\t\t\telm$core$Basics$add(1),\n\t\t\t\t\tcoordinates);\n\t\t\tcase 1:\n\t\t\t\treturn A2(\n\t\t\t\t\tauthor$project$Coordinates$mapY,\n\t\t\t\t\tfunction (y) {\n\t\t\t\t\t\treturn y - 1;\n\t\t\t\t\t},\n\t\t\t\t\tcoordinates);\n\t\t\tcase 2:\n\t\t\t\treturn A2(\n\t\t\t\t\tauthor$project$Coordinates$mapX,\n\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\treturn x - 1;\n\t\t\t\t\t},\n\t\t\t\t\tcoordinates);\n\t\t\tdefault:\n\t\t\t\treturn A2(\n\t\t\t\t\tauthor$project$Coordinates$mapX,\n\t\t\t\t\telm$core$Basics$add(1),\n\t\t\t\t\tcoordinates);\n\t\t}\n\t});\nvar author$project$Particle$Particle = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar author$project$Particle$mapCoordinates = F2(\n\tfunction (f, _n0) {\n\t\tvar particleId = _n0.a;\n\t\tvar direction = _n0.b;\n\t\tvar coordinates = _n0.c;\n\t\treturn A3(\n\t\t\tauthor$project$Particle$Particle,\n\t\t\tparticleId,\n\t\t\tdirection,\n\t\t\tf(coordinates));\n\t});\nvar author$project$Particle$advanceParticle = function (particle) {\n\tvar direction = particle.b;\n\treturn A2(\n\t\tauthor$project$Particle$mapCoordinates,\n\t\tauthor$project$Direction$advanceCoordinatesInDirection(direction),\n\t\tparticle);\n};\nvar author$project$Particle$flatMap = F2(\n\tfunction (f, _n0) {\n\t\tvar p = _n0;\n\t\treturn _Utils_update(\n\t\t\tp,\n\t\t\t{\n\t\t\t\tx: f(p.x)\n\t\t\t});\n\t});\nvar author$project$Particle$advanceParticles = author$project$Particle$flatMap(\n\telm$core$List$map(author$project$Particle$advanceParticle));\nvar author$project$Game$advanceParticles = function (_n0) {\n\tvar b = _n0;\n\tvar particles = b.x;\n\treturn _Utils_update(\n\t\tb,\n\t\t{\n\t\t\tx: author$project$Particle$advanceParticles(particles)\n\t\t});\n};\nvar author$project$Level$levelHeight = function (_n0) {\n\tvar l = _n0;\n\treturn l.V;\n};\nvar author$project$Game$boardHeight = function (_n0) {\n\tvar level = _n0.L;\n\treturn author$project$Level$levelHeight(level);\n};\nvar author$project$Level$levelWidth = function (_n0) {\n\tvar l = _n0;\n\treturn l.Z;\n};\nvar author$project$Game$boardWidth = function (_n0) {\n\tvar level = _n0.L;\n\treturn author$project$Level$levelWidth(level);\n};\nvar elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$member = F2(\n\tfunction (x, xs) {\n\t\treturn A2(\n\t\t\telm$core$List$any,\n\t\t\tfunction (a) {\n\t\t\t\treturn _Utils_eq(a, x);\n\t\t\t},\n\t\t\txs);\n\t});\nvar author$project$Coordinates$coordinatesWithinDimensions = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\tvar w = _n0;\n\t\tvar h = _n1;\n\t\tvar x = _n2.a;\n\t\tvar y = _n2.b;\n\t\treturn A2(\n\t\t\telm$core$List$member,\n\t\t\tx,\n\t\t\tA2(elm$core$List$range, 0, w - 1)) && A2(\n\t\t\telm$core$List$member,\n\t\t\ty,\n\t\t\tA2(elm$core$List$range, 0, h - 1));\n\t});\nvar author$project$Particle$particleCoordinates = function (_n0) {\n\tvar coordinates = _n0.c;\n\treturn coordinates;\n};\nvar author$project$Particle$particlesWithinDimensions = F2(\n\tfunction (width, height) {\n\t\treturn author$project$Particle$flatMap(\n\t\t\telm$core$List$filter(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Basics$composeL,\n\t\t\t\t\tA2(author$project$Coordinates$coordinatesWithinDimensions, width, height),\n\t\t\t\t\tauthor$project$Particle$particleCoordinates)));\n\t});\nvar author$project$Game$trimParticles = function (board) {\n\tvar b = board;\n\tvar particles = b.x;\n\treturn _Utils_update(\n\t\tb,\n\t\t{\n\t\t\tx: A3(\n\t\t\t\tauthor$project$Particle$particlesWithinDimensions,\n\t\t\t\tauthor$project$Game$boardWidth(board),\n\t\t\t\tauthor$project$Game$boardHeight(board),\n\t\t\t\tparticles)\n\t\t});\n};\nvar author$project$Direction$mirrorLeftDirection = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn 2;\n\t\tcase 1:\n\t\t\treturn 3;\n\t\tcase 2:\n\t\t\treturn 0;\n\t\tdefault:\n\t\t\treturn 1;\n\t}\n};\nvar author$project$Direction$mirrorRightDirection = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn 3;\n\t\tcase 1:\n\t\t\treturn 2;\n\t\tcase 2:\n\t\t\treturn 1;\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n};\nvar author$project$Direction$reverseDirection = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn 1;\n\t\tcase 1:\n\t\t\treturn 0;\n\t\tcase 2:\n\t\t\treturn 3;\n\t\tdefault:\n\t\t\treturn 2;\n\t}\n};\nvar author$project$Direction$sidewaysDirections = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn _List_fromArray(\n\t\t\t\t[3, 0, 2]);\n\t\tcase 3:\n\t\t\treturn _List_fromArray(\n\t\t\t\t[0, 3, 1]);\n\t\tcase 2:\n\t\t\treturn _List_fromArray(\n\t\t\t\t[0, 2, 1]);\n\t\tdefault:\n\t\t\treturn _List_fromArray(\n\t\t\t\t[3, 2, 1]);\n\t}\n};\nvar author$project$Particle$incrementParticleId = function (_n0) {\n\tvar value = _n0;\n\treturn value + 1;\n};\nvar author$project$Particle$buildParticle = F3(\n\tfunction (coordinates, direction, _n0) {\n\t\tvar particleId = _n0.ae;\n\t\tvar particles = _n0.x;\n\t\tvar newParticle = A3(author$project$Particle$Particle, particleId, direction, coordinates);\n\t\treturn {\n\t\t\tae: author$project$Particle$incrementParticleId(particleId),\n\t\t\tx: A2(elm$core$List$cons, newParticle, particles)\n\t\t};\n\t});\nvar author$project$Obstacle$energizeAt = F3(\n\tfunction (coordinates, direction, particles) {\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tauthor$project$Particle$buildParticle(coordinates),\n\t\t\tparticles,\n\t\t\tauthor$project$Direction$sidewaysDirections(direction));\n\t});\nvar author$project$Obstacle$increaseClusterSize = F2(\n\tfunction (increasedSize, obstacle) {\n\t\tif (!obstacle.$) {\n\t\t\tvar n = obstacle.a;\n\t\t\tvar coordinates = obstacle.b;\n\t\t\treturn A2(author$project$Obstacle$Cluster, n + increasedSize, coordinates);\n\t\t} else {\n\t\t\treturn obstacle;\n\t\t}\n\t});\nvar author$project$Direction$allDirections = _List_fromArray(\n\t[0, 3, 2, 1]);\nvar author$project$Obstacle$reactionAt = F2(\n\tfunction (coordinates, particles) {\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tauthor$project$Particle$buildParticle(coordinates),\n\t\t\tparticles,\n\t\t\tauthor$project$Direction$allDirections);\n\t});\nvar author$project$Particle$extract = function (_n0) {\n\tvar particles = _n0.x;\n\treturn particles;\n};\nvar author$project$Particle$length = A2(elm$core$Basics$composeL, elm$core$List$length, author$project$Particle$extract);\nvar author$project$Particle$map = F2(\n\tfunction (f, _n0) {\n\t\tvar p = _n0;\n\t\tvar particles = p.x;\n\t\treturn _Utils_update(\n\t\t\tp,\n\t\t\t{\n\t\t\t\tx: A2(elm$core$List$map, f, particles)\n\t\t\t});\n\t});\nvar author$project$Particle$mapDirection = F2(\n\tfunction (f, _n0) {\n\t\tvar particleId = _n0.a;\n\t\tvar direction = _n0.b;\n\t\tvar coordinates = _n0.c;\n\t\treturn A3(\n\t\t\tauthor$project$Particle$Particle,\n\t\t\tparticleId,\n\t\t\tf(direction),\n\t\t\tcoordinates);\n\t});\nvar author$project$Particle$particleAtCoordinates = F2(\n\tfunction (coords, _n0) {\n\t\tvar particleCoords = _n0.c;\n\t\treturn _Utils_eq(coords, particleCoords);\n\t});\nvar author$project$Particle$mapParticlesAtCoordinates = F3(\n\tfunction (f, particles, coordinates) {\n\t\treturn A2(\n\t\t\tauthor$project$Particle$map,\n\t\t\tfunction (particle) {\n\t\t\t\treturn A2(author$project$Particle$particleAtCoordinates, coordinates, particle) ? f(particle) : particle;\n\t\t\t},\n\t\t\tparticles);\n\t});\nvar author$project$Particle$mappend = F2(\n\tfunction (_n0, _n1) {\n\t\tvar p1 = _n0;\n\t\tvar p = _n1;\n\t\tvar particles = p.x;\n\t\treturn _Utils_update(\n\t\t\tp,\n\t\t\t{\n\t\t\t\tx: _Utils_ap(particles, p1.x)\n\t\t\t});\n\t});\nvar author$project$Particle$particleDirection = function (_n0) {\n\tvar direction = _n0.b;\n\treturn direction;\n};\nvar author$project$Particle$particlesAtCoordinates = F2(\n\tfunction (particles, coordinates) {\n\t\treturn A2(\n\t\t\tauthor$project$Particle$flatMap,\n\t\t\telm$core$List$filter(\n\t\t\t\tauthor$project$Particle$particleAtCoordinates(coordinates)),\n\t\t\tparticles);\n\t});\nvar author$project$Particle$particlesNotAtAnyCoordinates = F2(\n\tfunction (particles, coordinatesList) {\n\t\treturn A2(\n\t\t\tauthor$project$Particle$flatMap,\n\t\t\telm$core$List$filter(\n\t\t\t\tfunction (_n0) {\n\t\t\t\t\tvar coordinates = _n0.c;\n\t\t\t\t\treturn !A2(elm$core$List$member, coordinates, coordinatesList);\n\t\t\t\t}),\n\t\t\tparticles);\n\t});\nvar author$project$Particle$particlesNotAtCoordinates = F2(\n\tfunction (particles, coordinates) {\n\t\treturn A2(\n\t\t\tauthor$project$Particle$flatMap,\n\t\t\telm$core$List$filter(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Basics$composeL,\n\t\t\t\t\telm$core$Basics$not,\n\t\t\t\t\tauthor$project$Particle$particleAtCoordinates(coordinates))),\n\t\t\tparticles);\n\t});\nvar elm$core$List$takeReverse = F3(\n\tfunction (n, list, kept) {\n\t\ttakeReverse:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn kept;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn kept;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs,\n\t\t\t\t\t\t$temp$kept = A2(elm$core$List$cons, x, kept);\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tkept = $temp$kept;\n\t\t\t\t\tcontinue takeReverse;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$takeTailRec = F2(\n\tfunction (n, list) {\n\t\treturn elm$core$List$reverse(\n\t\t\tA3(elm$core$List$takeReverse, n, list, _List_Nil));\n\t});\nvar elm$core$List$takeFast = F3(\n\tfunction (ctr, n, list) {\n\t\tif (n <= 0) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar _n0 = _Utils_Tuple2(n, list);\n\t\t\t_n0$1:\n\t\t\twhile (true) {\n\t\t\t\t_n0$5:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\t\treturn list;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_n0.b.b.b) {\n\t\t\t\t\t\t\tswitch (_n0.a) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tbreak _n0$1;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tvar _n2 = _n0.b;\n\t\t\t\t\t\t\t\t\tvar x = _n2.a;\n\t\t\t\t\t\t\t\t\tvar _n3 = _n2.b;\n\t\t\t\t\t\t\t\t\tvar y = _n3.a;\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[x, y]);\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tif (_n0.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _n4 = _n0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _n4.a;\n\t\t\t\t\t\t\t\t\t\tvar _n5 = _n4.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _n5.a;\n\t\t\t\t\t\t\t\t\t\tvar _n6 = _n5.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _n6.a;\n\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[x, y, z]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tif (_n0.b.b.b.b && _n0.b.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _n7 = _n0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _n7.a;\n\t\t\t\t\t\t\t\t\t\tvar _n8 = _n7.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _n8.a;\n\t\t\t\t\t\t\t\t\t\tvar _n9 = _n8.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _n9.a;\n\t\t\t\t\t\t\t\t\t\tvar _n10 = _n9.b;\n\t\t\t\t\t\t\t\t\t\tvar w = _n10.a;\n\t\t\t\t\t\t\t\t\t\tvar tl = _n10.b;\n\t\t\t\t\t\t\t\t\t\treturn (ctr > 1000) ? A2(\n\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(elm$core$List$takeTailRec, n - 4, tl))))) : A2(\n\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(elm$core$List$takeFast, ctr + 1, n - 4, tl)))));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_n0.a === 1) {\n\t\t\t\t\t\t\t\tbreak _n0$1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tvar _n1 = _n0.b;\n\t\t\tvar x = _n1.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[x]);\n\t\t}\n\t});\nvar elm$core$List$take = F2(\n\tfunction (n, list) {\n\t\treturn A3(elm$core$List$takeFast, 0, n, list);\n\t});\nvar author$project$Particle$take = function (n) {\n\treturn author$project$Particle$flatMap(\n\t\telm$core$List$take(n));\n};\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Basics$neq = _Utils_notEqual;\nvar elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar author$project$Obstacle$handleObstacle = F3(\n\tfunction (obstacle, particles, obstacles) {\n\t\tswitch (obstacle.$) {\n\t\t\tcase 0:\n\t\t\t\tvar n = obstacle.a;\n\t\t\t\tvar coordinates = obstacle.b;\n\t\t\t\tvar excess = (author$project$Particle$length(\n\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates)) + n) - 5;\n\t\t\t\tif (excess >= 0) {\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Obstacle$reactionAt,\n\t\t\t\t\t\t\tcoordinates,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Particle$mappend,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tauthor$project$Particle$take,\n\t\t\t\t\t\t\t\t\texcess,\n\t\t\t\t\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates)),\n\t\t\t\t\t\t\t\tA2(author$project$Particle$particlesNotAtCoordinates, particles, coordinates))),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\t\t\tfunction (o) {\n\t\t\t\t\t\t\t\treturn !_Utils_eq(o, obstacle);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tobstacles));\n\t\t\t\t} else {\n\t\t\t\t\tvar newObstacle = A2(\n\t\t\t\t\t\tauthor$project$Obstacle$increaseClusterSize,\n\t\t\t\t\t\tauthor$project$Particle$length(\n\t\t\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates)),\n\t\t\t\t\t\tobstacle);\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2(author$project$Particle$particlesNotAtCoordinates, particles, coordinates),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\tnewObstacle,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\t\t\t\tfunction (o) {\n\t\t\t\t\t\t\t\t\treturn !_Utils_eq(o, obstacle);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tobstacles)));\n\t\t\t\t}\n\t\t\tcase 7:\n\t\t\t\tvar coordinates = obstacle.a;\n\t\t\t\tvar particleDirections = A2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tauthor$project$Particle$particleDirection,\n\t\t\t\t\tauthor$project$Particle$extract(\n\t\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates)));\n\t\t\t\tvar potentiallyFireReaction = function (ps) {\n\t\t\t\t\treturn elm$core$List$isEmpty(particleDirections) ? ps : A3(\n\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\tauthor$project$Obstacle$energizeAt(coordinates),\n\t\t\t\t\t\tps,\n\t\t\t\t\t\tparticleDirections);\n\t\t\t\t};\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tpotentiallyFireReaction(\n\t\t\t\t\t\tA2(author$project$Particle$particlesNotAtCoordinates, particles, coordinates)),\n\t\t\t\t\tobstacles);\n\t\t\tcase 6:\n\t\t\t\tvar coordinates = obstacle.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2(author$project$Particle$particlesNotAtCoordinates, particles, coordinates),\n\t\t\t\t\tobstacles);\n\t\t\tcase 2:\n\t\t\t\tvar coordinates = obstacle.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA3(\n\t\t\t\t\t\tauthor$project$Particle$mapParticlesAtCoordinates,\n\t\t\t\t\t\tauthor$project$Particle$mapDirection(author$project$Direction$reverseDirection),\n\t\t\t\t\t\tparticles,\n\t\t\t\t\t\tcoordinates),\n\t\t\t\t\tobstacles);\n\t\t\tcase 3:\n\t\t\t\tvar coordinates = obstacle.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA3(\n\t\t\t\t\t\tauthor$project$Particle$mapParticlesAtCoordinates,\n\t\t\t\t\t\tauthor$project$Particle$mapDirection(author$project$Direction$mirrorLeftDirection),\n\t\t\t\t\t\tparticles,\n\t\t\t\t\t\tcoordinates),\n\t\t\t\t\tobstacles);\n\t\t\tcase 4:\n\t\t\t\tvar coordinates = obstacle.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA3(\n\t\t\t\t\t\tauthor$project$Particle$mapParticlesAtCoordinates,\n\t\t\t\t\t\tauthor$project$Particle$mapDirection(author$project$Direction$mirrorRightDirection),\n\t\t\t\t\t\tparticles,\n\t\t\t\t\t\tcoordinates),\n\t\t\t\t\tobstacles);\n\t\t\tcase 5:\n\t\t\t\tvar newDirection = obstacle.a;\n\t\t\t\tvar coordinates = obstacle.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA3(\n\t\t\t\t\t\tauthor$project$Particle$mapParticlesAtCoordinates,\n\t\t\t\t\t\tauthor$project$Particle$mapDirection(\n\t\t\t\t\t\t\telm$core$Basics$always(newDirection)),\n\t\t\t\t\t\tparticles,\n\t\t\t\t\t\tcoordinates),\n\t\t\t\t\tobstacles);\n\t\t\tdefault:\n\t\t\t\tvar coordinates1 = obstacle.a;\n\t\t\t\tvar coordinates2 = obstacle.b;\n\t\t\t\tvar particlesAtCoordinates2 = A2(\n\t\t\t\t\tauthor$project$Particle$map,\n\t\t\t\t\tauthor$project$Particle$mapCoordinates(\n\t\t\t\t\t\telm$core$Basics$always(coordinates2)),\n\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates1));\n\t\t\t\tvar particlesAtCoordinates1 = A2(\n\t\t\t\t\tauthor$project$Particle$map,\n\t\t\t\t\tauthor$project$Particle$mapCoordinates(\n\t\t\t\t\t\telm$core$Basics$always(coordinates1)),\n\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates2));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2(\n\t\t\t\t\t\tauthor$project$Particle$mappend,\n\t\t\t\t\t\tparticlesAtCoordinates2,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Particle$mappend,\n\t\t\t\t\t\t\tparticlesAtCoordinates1,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Particle$particlesNotAtAnyCoordinates,\n\t\t\t\t\t\t\t\tparticles,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[coordinates1, coordinates2])))),\n\t\t\t\t\tobstacles);\n\t\t}\n\t});\nvar author$project$Game$advanceBoard = function (board) {\n\tvar bo = board;\n\tvar handleObstacleOnBoard = F2(\n\t\tfunction (obstacle, _n0) {\n\t\t\tvar b = _n0;\n\t\t\tvar particles = b.x;\n\t\t\tvar obstacles = b.w;\n\t\t\tvar outcome = A3(author$project$Obstacle$handleObstacle, obstacle, particles, obstacles);\n\t\t\treturn _Utils_update(\n\t\t\t\tb,\n\t\t\t\t{w: outcome.b, x: outcome.a});\n\t\t});\n\treturn author$project$Game$trimParticles(\n\t\tauthor$project$Game$advanceParticles(\n\t\t\tA3(elm$core$List$foldl, handleObstacleOnBoard, board, bo.w)));\n};\nvar author$project$Game$Complete = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 1, a: a, b: b, c: c};\n\t});\nvar author$project$Obstacle$isCluster = function (obstacle) {\n\tif (!obstacle.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar author$project$Game$boardContainsClusters = function (_n0) {\n\tvar obstacles = _n0.w;\n\treturn A2(elm$core$List$any, author$project$Obstacle$isCluster, obstacles);\n};\nvar author$project$Level$levelPar = function (_n0) {\n\tvar par = _n0.X;\n\treturn par;\n};\nvar author$project$Game$completeGameWhenNoClustersRemain = function (game) {\n\tif (!game.$) {\n\t\tvar board = game.a;\n\t\tvar clickCounter = board.K;\n\t\tvar level = board.L;\n\t\treturn author$project$Game$boardContainsClusters(board) ? author$project$Game$Started(board) : A3(\n\t\t\tauthor$project$Game$Complete,\n\t\t\tboard,\n\t\t\tauthor$project$Level$levelPar(level),\n\t\t\tclickCounter);\n\t} else {\n\t\treturn game;\n\t}\n};\nvar author$project$Game$incrementClickCounter = function (_n0) {\n\tvar value = _n0;\n\treturn value + 1;\n};\nvar author$project$Obstacle$incrementSize = function (_n0) {\n\tvar n = _n0;\n\treturn n + 1;\n};\nvar author$project$Obstacle$singleObstacleAtCoordinates = F2(\n\tfunction (coordinates, obstacle) {\n\t\tswitch (obstacle.$) {\n\t\t\tcase 0:\n\t\t\t\tvar coords = obstacle.b;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tcase 1:\n\t\t\t\tvar coords1 = obstacle.a;\n\t\t\t\tvar coords2 = obstacle.b;\n\t\t\t\treturn _Utils_eq(coords1, coordinates) || _Utils_eq(coords2, coordinates);\n\t\t\tcase 2:\n\t\t\t\tvar coords = obstacle.a;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tcase 3:\n\t\t\t\tvar coords = obstacle.a;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tcase 4:\n\t\t\t\tvar coords = obstacle.a;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tcase 5:\n\t\t\t\tvar coords = obstacle.b;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tcase 6:\n\t\t\t\tvar coords = obstacle.a;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tdefault:\n\t\t\t\tvar coords = obstacle.a;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t}\n\t});\nvar author$project$Obstacle$obstacleAtCoordinates = F2(\n\tfunction (obstacles, coordinates) {\n\t\treturn elm$core$List$head(\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tauthor$project$Obstacle$singleObstacleAtCoordinates(coordinates),\n\t\t\t\tobstacles));\n\t});\nvar author$project$Game$incrementClicksOnCluster = F2(\n\tfunction (coordinates, board) {\n\t\tvar b = board;\n\t\tvar obstacles = b.w;\n\t\tvar clickCounter = b.K;\n\t\tvar _n0 = A2(author$project$Obstacle$obstacleAtCoordinates, obstacles, coordinates);\n\t\tif ((!_n0.$) && (!_n0.a.$)) {\n\t\t\tvar obstacle = _n0.a;\n\t\t\tvar size = obstacle.a;\n\t\t\tvar coords = obstacle.b;\n\t\t\tvar newObstacle = A2(\n\t\t\t\tauthor$project$Obstacle$Cluster,\n\t\t\t\tauthor$project$Obstacle$incrementSize(size),\n\t\t\t\tcoords);\n\t\t\treturn _Utils_update(\n\t\t\t\tb,\n\t\t\t\t{\n\t\t\t\t\tK: author$project$Game$incrementClickCounter(clickCounter),\n\t\t\t\t\tw: A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tnewObstacle,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\t\t\tfunction (o) {\n\t\t\t\t\t\t\t\treturn !_Utils_eq(o, obstacle);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tobstacles))\n\t\t\t\t});\n\t\t} else {\n\t\t\treturn board;\n\t\t}\n\t});\nvar author$project$Game$mapBoard = F2(\n\tfunction (f, game) {\n\t\tif (!game.$) {\n\t\t\tvar board = game.a;\n\t\t\treturn author$project$Game$Started(\n\t\t\t\tf(board));\n\t\t} else {\n\t\t\treturn game;\n\t\t}\n\t});\nvar author$project$Page$Board$Main$update = F2(\n\tfunction (msg, model) {\n\t\tif (!msg.$) {\n\t\t\tif ((!msg.a.$) && (!msg.a.a.$)) {\n\t\t\t\tvar _n1 = msg.a.a;\n\t\t\t\tvar coordinates = _n1.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tA: A2(\n\t\t\t\t\t\t\t\tauthor$project$Game$mapBoard,\n\t\t\t\t\t\t\t\tauthor$project$Game$incrementClicksOnCluster(coordinates),\n\t\t\t\t\t\t\t\tmodel.A)\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t\t}\n\t\t} else {\n\t\t\tvar newGame = author$project$Game$completeGameWhenNoClustersRemain(\n\t\t\t\tA2(author$project$Game$mapBoard, author$project$Game$advanceBoard, model.A));\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{A: newGame}),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar author$project$Page$Home$Main$update = F2(\n\tfunction (msg, model) {\n\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t});\nvar author$project$Session$navKey = function (_n0) {\n\tvar key = _n0.ab;\n\treturn key;\n};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$core$String$length = _String_length;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {as: fragment, av: host, bf: path, aD: port_, aH: protocol, aI: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$Navigation$load = _Browser_load;\nvar elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;\nvar elm$url$Url$addPort = F2(\n\tfunction (maybePort, starter) {\n\t\tif (maybePort.$ === 1) {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar port_ = maybePort.a;\n\t\t\treturn starter + (':' + elm$core$String$fromInt(port_));\n\t\t}\n\t});\nvar elm$url$Url$addPrefixed = F3(\n\tfunction (prefix, maybeSegment, starter) {\n\t\tif (maybeSegment.$ === 1) {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar segment = maybeSegment.a;\n\t\t\treturn _Utils_ap(\n\t\t\t\tstarter,\n\t\t\t\t_Utils_ap(prefix, segment));\n\t\t}\n\t});\nvar elm$url$Url$toString = function (url) {\n\tvar http = function () {\n\t\tvar _n0 = url.aH;\n\t\tif (!_n0) {\n\t\t\treturn 'http://';\n\t\t} else {\n\t\t\treturn 'https://';\n\t\t}\n\t}();\n\treturn A3(\n\t\telm$url$Url$addPrefixed,\n\t\t'#',\n\t\turl.as,\n\t\tA3(\n\t\t\telm$url$Url$addPrefixed,\n\t\t\t'?',\n\t\t\turl.aI,\n\t\t\t_Utils_ap(\n\t\t\t\tA2(\n\t\t\t\t\telm$url$Url$addPort,\n\t\t\t\t\turl.aD,\n\t\t\t\t\t_Utils_ap(http, url.av)),\n\t\t\t\turl.bf)));\n};\nvar author$project$Update$update = F2(\n\tfunction (msg, model) {\n\t\tvar _n0 = _Utils_Tuple2(msg, model);\n\t\t_n0$4:\n\t\twhile (true) {\n\t\t\tswitch (_n0.a.$) {\n\t\t\t\tcase 3:\n\t\t\t\t\tvar urlRequest = _n0.a.a;\n\t\t\t\t\tif (!urlRequest.$) {\n\t\t\t\t\t\tvar url = urlRequest.a;\n\t\t\t\t\t\tvar _n2 = url.as;\n\t\t\t\t\t\tif (_n2.$ === 1) {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$browser$Browser$Navigation$pushUrl,\n\t\t\t\t\t\t\t\t\tauthor$project$Session$navKey(\n\t\t\t\t\t\t\t\t\t\tauthor$project$Model$toSession(model)),\n\t\t\t\t\t\t\t\t\telm$url$Url$toString(url)));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar href = urlRequest.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\telm$browser$Browser$Navigation$load(href));\n\t\t\t\t\t}\n\t\t\t\tcase 2:\n\t\t\t\t\tvar url = _n0.a.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tauthor$project$Model$changeRouteTo,\n\t\t\t\t\t\tauthor$project$Route$fromUrl(url),\n\t\t\t\t\t\tmodel);\n\t\t\t\tcase 0:\n\t\t\t\t\tif (!_n0.b.$) {\n\t\t\t\t\t\tvar subMsg = _n0.a.a;\n\t\t\t\t\t\tvar model_ = _n0.b.a;\n\t\t\t\t\t\tvar _n3 = A2(author$project$Page$Home$Main$update, subMsg, model_);\n\t\t\t\t\t\tvar newModel = _n3.a;\n\t\t\t\t\t\tvar newMsg = _n3.b;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tauthor$project$Model$Home(newModel),\n\t\t\t\t\t\t\tA2(elm$core$Platform$Cmd$map, author$project$Model$HandleHomeMsg, newMsg));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _n0$4;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif (_n0.b.$ === 3) {\n\t\t\t\t\t\tvar subMsg = _n0.a.a;\n\t\t\t\t\t\tvar model_ = _n0.b.a;\n\t\t\t\t\t\tvar _n4 = A2(author$project$Page$Board$Main$update, subMsg, model_);\n\t\t\t\t\t\tvar newModel = _n4.a;\n\t\t\t\t\t\tvar newMsg = _n4.b;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tauthor$project$Model$Board(newModel),\n\t\t\t\t\t\t\tA2(elm$core$Platform$Cmd$map, author$project$Model$HandleBoardMsg, newMsg));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _n0$4;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t});\nvar author$project$Game$clickCounterValue = function (_n0) {\n\tvar value = _n0;\n\treturn value;\n};\nvar author$project$Game$boardClicks = function (_n0) {\n\tvar clickCounter = _n0.K;\n\treturn author$project$Game$clickCounterValue(clickCounter);\n};\nvar author$project$Game$clicksMade = function (game) {\n\tif (!game.$) {\n\t\tvar board = game.a;\n\t\treturn author$project$Game$boardClicks(board);\n\t} else {\n\t\tvar n = game.c;\n\t\treturn n;\n\t}\n};\nvar author$project$Level$parValue = function (_n0) {\n\tvar v = _n0;\n\treturn v;\n};\nvar author$project$Game$parForBoard = function (_n0) {\n\tvar level = _n0.L;\n\treturn author$project$Level$parValue(\n\t\tauthor$project$Level$levelPar(level));\n};\nvar author$project$Coordinates$dimensionsToCoordinates = F2(\n\tfunction (_n0, _n1) {\n\t\tvar w = _n0;\n\t\tvar h = _n1;\n\t\tvar ys = A2(elm$core$List$range, 0, h - 1);\n\t\tvar xs = A2(elm$core$List$range, 0, w - 1);\n\t\treturn elm$core$List$reverse(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (y) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn author$project$Coordinates$coordinatesFromPair(\n\t\t\t\t\t\t\t\t_Utils_Tuple2(x, y));\n\t\t\t\t\t\t},\n\t\t\t\t\t\txs);\n\t\t\t\t},\n\t\t\t\tys));\n\t});\nvar author$project$Game$renderableBoard = function (board) {\n\tvar particles = board.x;\n\tvar obstacles = board.w;\n\tvar tileInformation = function (coordinates) {\n\t\treturn _Utils_Tuple2(\n\t\t\tauthor$project$Particle$extract(\n\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates)),\n\t\t\tA2(author$project$Obstacle$obstacleAtCoordinates, obstacles, coordinates));\n\t};\n\tvar allCoordinates = A2(\n\t\tauthor$project$Coordinates$dimensionsToCoordinates,\n\t\tauthor$project$Game$boardWidth(board),\n\t\tauthor$project$Game$boardHeight(board));\n\treturn A2(\n\t\telm$core$List$map,\n\t\telm$core$List$map(tileInformation),\n\t\tallCoordinates);\n};\nvar author$project$Game$showBoardId = function (_n0) {\n\tvar bId = _n0;\n\treturn elm$core$String$fromInt(bId);\n};\nvar author$project$Route$routeToString = function (page) {\n\tvar pieces = function () {\n\t\tif (!page.$) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar boardId = page.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t'board',\n\t\t\t\t\tauthor$project$Game$showBoardId(boardId)\n\t\t\t\t]);\n\t\t}\n\t}();\n\treturn '#/' + A2(elm$core$String$join, '/', pieces);\n};\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$href = function (url) {\n\treturn A2(\n\t\telm$html$Html$Attributes$stringProperty,\n\t\t'href',\n\t\t_VirtualDom_noJavaScriptUri(url));\n};\nvar author$project$Route$href = function (targetRoute) {\n\treturn elm$html$Html$Attributes$href(\n\t\tauthor$project$Route$routeToString(targetRoute));\n};\nvar elm$html$Html$a = _VirtualDom_node('a');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar author$project$Page$Board$Main$endGameLink = A2(\n\telm$html$Html$a,\n\t_List_fromArray(\n\t\t[\n\t\t\tauthor$project$Route$href(author$project$Route$Home)\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$text('End game')\n\t\t]));\nvar author$project$Game$advanceBoardId = function (_n0) {\n\tvar bId = _n0;\n\treturn bId + 1;\n};\nvar author$project$Game$gameBoard = function (game) {\n\tif (!game.$) {\n\t\tvar board = game.a;\n\t\treturn board;\n\t} else {\n\t\tvar board = game.a;\n\t\treturn board;\n\t}\n};\nvar author$project$Page$Board$Main$nextBoard = function (model) {\n\tvar currentBoard = author$project$Game$gameBoard(model.A);\n\tvar boards = model.aQ.aZ;\n\treturn elm$core$List$head(\n\t\tA2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (b) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tauthor$project$Game$getBoardId(b),\n\t\t\t\t\tauthor$project$Game$advanceBoardId(\n\t\t\t\t\t\tauthor$project$Game$getBoardId(currentBoard)));\n\t\t\t},\n\t\t\tboards));\n};\nvar author$project$Page$Board$Main$nextBoardButton = function (model) {\n\tvar _n0 = author$project$Page$Board$Main$nextBoard(model);\n\tif (!_n0.$) {\n\t\tvar nextBoard_ = _n0.a;\n\t\treturn A2(\n\t\t\telm$html$Html$a,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tauthor$project$Route$href(\n\t\t\t\t\tauthor$project$Route$ShowBoard(\n\t\t\t\t\t\tauthor$project$Game$getBoardId(nextBoard_)))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Go on to next board')\n\t\t\t\t]));\n\t} else {\n\t\treturn elm$html$Html$text('');\n\t}\n};\nvar author$project$Direction$showDirection = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn 'up';\n\t\tcase 1:\n\t\t\treturn 'down';\n\t\tcase 2:\n\t\t\treturn 'left';\n\t\tdefault:\n\t\t\treturn 'right';\n\t}\n};\nvar author$project$Page$Board$Main$ClickObstacle = function (a) {\n\treturn {$: 0, a: a};\n};\nvar author$project$Obstacle$showSize = function (_n0) {\n\tvar n = _n0;\n\treturn elm$core$String$fromInt(n);\n};\nvar author$project$Page$Board$Main$obstacleClass = function (obstacle) {\n\tswitch (obstacle.$) {\n\t\tcase 0:\n\t\t\tvar size = obstacle.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t'cluster',\n\t\t\t\t\t'cluster-' + author$project$Obstacle$showSize(size)\n\t\t\t\t]);\n\t\tcase 1:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['portal']);\n\t\tcase 2:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['mirror']);\n\t\tcase 3:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['mirror-left']);\n\t\tcase 4:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['mirror-right']);\n\t\tcase 5:\n\t\t\tvar direction = obstacle.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t'change-direction',\n\t\t\t\t\t'change-direction-' + author$project$Direction$showDirection(direction)\n\t\t\t\t]);\n\t\tcase 6:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['black-hole']);\n\t\tdefault:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['energizer']);\n\t}\n};\nvar elm$html$Html$span = _VirtualDom_node('span');\nvar elm$html$Html$table = _VirtualDom_node('table');\nvar elm$html$Html$td = _VirtualDom_node('td');\nvar elm$html$Html$tr = _VirtualDom_node('tr');\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$html$Html$Attributes$classList = function (classes) {\n\treturn elm$html$Html$Attributes$class(\n\t\tA2(\n\t\t\telm$core$String$join,\n\t\t\t' ',\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\telm$core$Tuple$first,\n\t\t\t\tA2(elm$core$List$filter, elm$core$Tuple$second, classes))));\n};\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar author$project$Page$Board$Main$renderBoard = function (boardTiles) {\n\tvar showParticle = function (particle) {\n\t\treturn A2(\n\t\t\telm$html$Html$span,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class(\n\t\t\t\t\t'particle particle-' + author$project$Direction$showDirection(\n\t\t\t\t\t\tauthor$project$Particle$particleDirection(particle)))\n\t\t\t\t]),\n\t\t\t_List_Nil);\n\t};\n\tvar classes = F2(\n\t\tfunction (particles, obstacle) {\n\t\t\treturn _Utils_ap(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Maybe$map,\n\t\t\t\t\t\tfunction (o) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(s, true);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tauthor$project$Page$Board$Main$obstacleClass(o));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tobstacle)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'has-particle',\n\t\t\t\t\t\telm$core$List$length(particles) > 0)\n\t\t\t\t\t]));\n\t\t});\n\tvar renderColumn = function (_n0) {\n\t\tvar particles = _n0.a;\n\t\tvar obstacle = _n0.b;\n\t\treturn A2(\n\t\t\telm$html$Html$td,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\tA2(classes, particles, obstacle)),\n\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\tauthor$project$Page$Board$Main$ClickObstacle(obstacle))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$span,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\tA2(elm$core$List$map, showParticle, particles))\n\t\t\t\t]));\n\t};\n\tvar renderRow = function (columns) {\n\t\treturn A2(\n\t\t\telm$html$Html$tr,\n\t\t\t_List_Nil,\n\t\t\tA2(elm$core$List$map, renderColumn, columns));\n\t};\n\treturn A2(\n\t\telm$html$Html$table,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class('board')\n\t\t\t]),\n\t\tA2(elm$core$List$map, renderRow, boardTiles));\n};\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$html$Html$h2 = _VirtualDom_node('h2');\nvar author$project$Page$Board$Main$view = function (model) {\n\tvar game = model.A;\n\tif (!game.$) {\n\t\tvar board = game.a;\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$h2,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t'Clicks: ' + elm$core$String$fromInt(\n\t\t\t\t\t\t\t\tauthor$project$Game$clicksMade(game)))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$h2,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t'Par: ' + elm$core$String$fromInt(\n\t\t\t\t\t\t\t\tauthor$project$Game$parForBoard(board)))\n\t\t\t\t\t\t])),\n\t\t\t\t\tauthor$project$Page$Board$Main$endGameLink,\n\t\t\t\t\tauthor$project$Page$Board$Main$renderBoard(\n\t\t\t\t\tauthor$project$Game$renderableBoard(board))\n\t\t\t\t]));\n\t} else {\n\t\tvar board = game.a;\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$h2,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t'Complete! Clicks: ' + elm$core$String$fromInt(\n\t\t\t\t\t\t\t\tauthor$project$Game$clicksMade(game)))\n\t\t\t\t\t\t])),\n\t\t\t\t\tauthor$project$Page$Board$Main$endGameLink,\n\t\t\t\t\tauthor$project$Page$Board$Main$nextBoardButton(model),\n\t\t\t\t\tauthor$project$Page$Board$Main$renderBoard(\n\t\t\t\t\tauthor$project$Game$renderableBoard(board))\n\t\t\t\t]));\n\t}\n};\nvar author$project$Page$Home$Main$displayBoard = function (board) {\n\tvar boardId = author$project$Game$getBoardId(board);\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$a,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tauthor$project$Route$href(\n\t\t\t\t\t\tauthor$project$Route$ShowBoard(boardId))\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t'Start level ' + author$project$Game$showBoardId(boardId))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar author$project$Page$Home$Main$view = function (_n0) {\n\tvar session = _n0.aQ;\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\tA2(elm$core$List$map, author$project$Page$Home$Main$displayBoard, session.aZ));\n};\nvar elm$virtual_dom$VirtualDom$map = _VirtualDom_map;\nvar elm$html$Html$map = elm$virtual_dom$VirtualDom$map;\nvar author$project$View$view = function (model) {\n\treturn {\n\t\ta_: _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\tswitch (model.$) {\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tvar homeModel = model.a;\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\telm$html$Html$map,\n\t\t\t\t\t\t\t\t\tauthor$project$Model$HandleHomeMsg,\n\t\t\t\t\t\t\t\t\tauthor$project$Page$Home$Main$view(homeModel));\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tvar boardModel = model.a;\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\telm$html$Html$map,\n\t\t\t\t\t\t\t\t\tauthor$project$Model$HandleBoardMsg,\n\t\t\t\t\t\t\t\t\tauthor$project$Page$Board$Main$view(boardModel));\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\treturn elm$html$Html$text('not found');\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn elm$html$Html$text('loading');\n\t\t\t\t\t\t}\n\t\t\t\t\t}()\n\t\t\t\t\t]))\n\t\t\t]),\n\t\tbi: 'Reaction'\n\t};\n};\nvar elm$browser$Browser$application = _Browser_application;\nvar author$project$Main$main = elm$browser$Browser$application(\n\t{a8: author$project$Update$init, bc: author$project$Model$ChangedUrl, bd: author$project$Model$ClickedLink, bh: author$project$Update$subscriptions, bj: author$project$Update$update, bl: author$project$View$view});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport * as serviceWorker from './serviceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}