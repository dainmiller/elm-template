{"version":3,"sources":["Main.elm","serviceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","A2","A3","A4","A5","A6","_JsArray_initialize","size","offset","func","result","Array","i","_JsArray_initializeFromList","max","ls","length","_Utils_Tuple2","_Debug_crash","identifier","Error","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","key","$","elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","elm$core$Basics$LT","elm$core$Basics$GT","elm$core$Basics$EQ","_Utils_Tuple3","_Utils_chr","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","_List_map2","_Basics_add","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_Parser_isSubString","smallString","row","col","bigString","smallLength","isGood","code","charCodeAt","_Parser_isSubChar","predicate","string","substr","_Parser_isAsciiCode","_Parser_chompBase10","_Parser_consumeBase","base","total","digit","_Parser_consumeBase16","_String_join","sep","strs","join","_String_slice","start","end","str","slice","_Json_decodePrim","decoder","value","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_wrap","String","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","field","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","index","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","answer","decoders","g","h","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","array","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_VirtualDom_divertHrefToApp","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","v","stopPropagation","ah","currentEventNode","af","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","a8","bi","bg","initialModel","view","bk","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","parser","_Time_setInterval","interval","id","setInterval","clearInterval","author$project$Main$AdvanceBoard","author$project$Game$NotStarted","elm$core$Basics$identity","elm$core$List$cons","elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","author$project$Particle$initial","ae","author$project$Game$buildBoardFromLevel","boardId","level","ak","K","L","_n0","author$project$Level$map","W","Y","_","author$project$Coordinates$Coordinates","author$project$Coordinates$coordinatesFromPair","elm$core$Basics$add","elm$core$List$foldl","elm$core$List$foldrHelper","fn","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$maybeCons","mx","author$project$LevelBuilder$catMaybes","elm$core$List$filterMap","author$project$Obstacle$ChangeDirection","author$project$Obstacle$Cluster","author$project$Obstacle$buildSize","elm$core$Basics$apL","elm$core$Maybe$Just","elm$core$Maybe$Nothing","author$project$LevelBuilder$parseObstacle","coordinates","parsedObstacle","author$project$LevelBuilder$uncurry","author$project$LevelParser$isPortal","obstacle","author$project$Obstacle$Portal","elm$core$Basics$composeL","elm$core$Basics$not","bool","elm$core$List$filter","elm$core$List$map","elm$core$Tuple$second","elm$core$List$partition","pred","trues","falses","elm_community$list_extra$List$Extra$gatherWith","testFn","helper","scattered","gathered","toGather","population","_n1","elm$core$List$append","elm$core$List$length","elm$core$List$map2","elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","elm$core$List$indexedMap","author$project$LevelBuilder$parsedLevelToLevel","rows","lists","allObstacles","samePortals","o1","o2","_n7","portals","portalObstacles","_n2","_n3","nonPortals","elm$parser$Parser$UnexpectedChar","elm$parser$Parser$Advanced$Bad","elm$parser$Parser$Advanced$Good","elm$parser$Parser$Advanced$AddRight","elm$parser$Parser$Advanced$DeadEnd","problem","contextStack","am","a0","aG","aO","elm$parser$Parser$Advanced$Empty","elm$parser$Parser$Advanced$fromState","elm$parser$Parser$Advanced$isSubChar","elm$parser$Parser$Advanced$chompIf","expecting","newOffset","elm$parser$Parser$chompIf","elm$core$Basics$always","elm$parser$Parser$Advanced$map2","parseA","parseB","s0","p1","p2","s2","elm$parser$Parser$ignorer","keepParser","ignoreParser","elm$parser$Parser$succeed","author$project$LevelParser$newlineParser","elm$core$Char$toCode","char","elm$core$Char$isDigit","_char","elm$core$Char$isAlphaNum","elm$core$Char$isLower","elm$core$Char$isUpper","elm$parser$Parser$Advanced$chompWhileHelp","elm$parser$Parser$Advanced$Token","elm$parser$Parser$Advanced$isSubString","elm$parser$Parser$token","progress","newRow","newCol","elm$parser$Parser$Advanced$token","elm$parser$Parser$toToken","author$project$LevelParser$animationParser","author$project$Coordinates$buildHeight","author$project$Coordinates$buildWidth","author$project$Level$buildLevel","width","height","obstacles","elm$core$List$head","elm$core$Maybe$withDefault","_default","maybe","author$project$LevelParser$buildLevel","par","elm$parser$Parser$ExpectingInt","elm$parser$Parser$Advanced$consumeBase","elm$parser$Parser$Advanced$consumeBase16","elm$core$String$slice","elm$core$Tuple$first","elm$parser$Parser$Advanced$bumpOffset","elm$parser$Parser$Advanced$chompBase10","elm$parser$Parser$Advanced$isAsciiCode","elm$parser$Parser$Advanced$consumeExp","src","eOffset","expOffset","elm$parser$Parser$Advanced$consumeDotAndExp","elm$parser$Parser$Advanced$finalizeInt","invalid","startOffset","endOffset","toValue","elm$parser$Parser$Advanced$fromInfo","context","elm$parser$Parser$Advanced$finalizeFloat","intSettings","floatSettings","intPair","intOffset","floatOffset","test","elm$core$String$toFloat","elm$parser$Parser$int","aj","aq","ar","au","ax","a9","aC","zeroOffset","baseOffset","elm$parser$Parser$keeper","parseFunc","parseArg","author$project$LevelParser$parParser","elm$parser$Parser$Done","elm$parser$Parser$Loop","elm$parser$Parser$map","parse","s1","elm$parser$Parser$toAdvancedStep","step","elm$parser$Parser$Advanced$loopHelp","elm$parser$Parser$Advanced$loop","elm$parser$Parser$loop","elm$parser$Parser$Advanced$Append","elm$parser$Parser$Advanced$oneOfHelp","parsers","oneOfHelp","remainingParsers","elm$parser$Parser$oneOf","author$project$LevelParser$many","author$project$LevelParser$ChangeDirection","elm$core$Maybe$map","elm$parser$Parser$andThen","elm$parser$Parser$Advanced$mapChompedString","author$project$LevelParser$singleCharacterInt","code0","elm$core$String$toInt","author$project$LevelParser$rowParser","author$project$LevelParser$rowsParser","separator","author$project$LevelParser$levelParser","author$project$LevelParser$levelsParser","elm$core$Result$mapError","elm$parser$Parser$deadEndsToString","elm$parser$Parser$DeadEnd","elm$parser$Parser$problemToDeadEnd","elm$parser$Parser$Advanced$bagToList","bagToList","bag2","elm$parser$Parser$Advanced$run","elm$parser$Parser$run","source","author$project$Game$loadBoards","input","parsedBoards","author$project$LevelParser$parseLevels","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","number","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Elm$JsArray$initializeFromList","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fromIndex","tail","leaf","tailLen","elm$core$String$fromInt","elm$core$String$join","chunks","_List_toArray","elm$core$Platform$Cmd$none","author$project$Main$init","U","author$project$Game$Started","author$project$Coordinates$mapX","author$project$Coordinates$mapY","author$project$Direction$advanceCoordinatesInDirection","direction","author$project$Particle$Particle","author$project$Particle$mapCoordinates","author$project$Particle$flatMap","author$project$Particle$advanceParticles","particle","author$project$Game$boardHeight","author$project$Level$levelHeight","author$project$Game$boardWidth","author$project$Level$levelWidth","elm$core$List$any","isOkay","elm$core$List$member","author$project$Coordinates$coordinatesWithinDimensions","author$project$Particle$particleCoordinates","author$project$Particle$particlesWithinDimensions","author$project$Direction$mirrorLeftDirection","author$project$Direction$mirrorRightDirection","author$project$Direction$reverseDirection","author$project$Particle$buildParticle","particleId","particles","author$project$Obstacle$energizeAt","author$project$Direction$sidewaysDirections","author$project$Obstacle$increaseClusterSize","increasedSize","author$project$Direction$allDirections","author$project$Obstacle$reactionAt","author$project$Particle$extract","author$project$Particle$length","author$project$Particle$map","author$project$Particle$mapDirection","author$project$Particle$particleAtCoordinates","coords","author$project$Particle$mapParticlesAtCoordinates","author$project$Particle$mappend","author$project$Particle$particleDirection","author$project$Particle$particlesAtCoordinates","author$project$Particle$particlesNotAtAnyCoordinates","coordinatesList","author$project$Particle$particlesNotAtCoordinates","elm$core$List$takeReverse","kept","takeReverse","elm$core$List$takeTailRec","elm$core$List$takeFast","_n0$1","_n0$5","_n4","_n5","_n8","_n9","_n10","elm$core$List$take","author$project$Particle$take","author$project$Obstacle$handleObstacle","excess","newObstacle","particleDirections","ps","coordinates1","coordinates2","particlesAtCoordinates2","particlesAtCoordinates1","author$project$Game$advanceBoard","board","bo","author$project$Game$trimParticles","outcome","author$project$Game$Complete","author$project$Obstacle$isCluster","author$project$Level$levelPar","author$project$Obstacle$singleObstacleAtCoordinates","coords2","author$project$Obstacle$obstacleAtCoordinates","author$project$Game$incrementClicksOnCluster","clickCounter","author$project$Game$mapBoard","game","author$project$Main$update","author$project$Game$completeGameWhenNoClustersRemain","author$project$Game$clicksMade","author$project$Coordinates$dimensionsToCoordinates","author$project$Game$renderableBoard","allCoordinates","author$project$Main$StartGame","elm$json$Json$Decode$succeed","elm$html$Html$button","elm$html$Html$div","elm$html$Html$text","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$html$Html$Events$onClick","author$project$Main$displayBoard","author$project$Main$endGameButton","author$project$Game$getBoardId","author$project$Direction$showDirection","elm$html$Html$span","elm$html$Html$table","elm$html$Html$td","elm$html$Html$tr","elm$json$Json$Encode$string","elm$html$Html$Attributes$class","elm$html$Html$Attributes$stringProperty","author$project$Main$renderBoard","boardTiles","showParticle","author$project$Main$obstacleClass","renderColumn","elm$html$Html$Attributes$classList","columns","elm$html$Html$h2","elm$core$Task$succeed","elm$core$Task$init","elm$core$Task$andThen","elm$core$Task$map","taskA","elm$core$Task$map2","taskB","elm$core$Task$sequence","tasks","elm$core$Platform$sendToApp","elm$core$Task$spawnCmd","commands","millisToPosix","elm$browser$Browser$element","elm$core$Platform$Sub$none","elm$time$Time$Every","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Dict$empty","elm$time$Time$State","processes","aI","aU","elm$time$Time$init","elm$core$Dict$RBNode_elm_builtin","elm$core$Basics$compare","elm$core$Dict$balance","color","right","_n6","lRight","rK","rV","rLeft","rRight","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","elm$core$Dict$foldl","elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","rKey","rValue","stepState","lKey","lValue","rest","leftovers","intermediateResult","elm$core$Dict$get","targetKey","elm$time$Time$addMySub","elm$core$Platform$sendToSelf","elm$core$Process$spawn","elm$time$Time$setInterval","elm$time$Time$spawnHelp","intervals","spawnTimer","elm$time$Time$onEffects","subs","kills","newTaggers","existing","spawnList","existingDict","newProcesses","elm$time$Time$now","Date","now","time","exports","elm$time$Time$subscription","elm$time$Time$every","Main","author$project$Level$parValue","boards","author$project$Main$currentBoard","author$project$Main$nextBoard","author$project$Main$nextBoardButton","author$project$Main$main","_Platform_mergeExportsProd","obj","this","Elm","navigator","registration"],"mappings":"sEAAA,SAAAA,GACA,aAEA,SAAAC,EAAAC,EAAAC,EAAAC,GAGA,OAFAA,EAAAC,EAAAH,EACAE,EAAAE,EAAAH,EACAC,EAGA,SAAAG,EAAAJ,GACA,OAAAF,EAAA,EAAAE,EAAA,SAAAE,GAAgC,gBAAAG,GAAqB,OAAAL,EAAAE,EAAAG,MAErD,SAAAC,EAAAN,GACA,OAAAF,EAAA,EAAAE,EAAA,SAAAE,GACA,gBAAAG,GAAwB,gBAAAE,GAAqB,OAAAP,EAAAE,EAAAG,EAAAE,OAG7C,SAAAC,EAAAR,GACA,OAAAF,EAAA,EAAAE,EAAA,SAAAE,GAAgC,gBAAAG,GAAqB,gBAAAE,GACrD,gBAAAE,GAAwB,OAAAT,EAAAE,EAAAG,EAAAE,EAAAE,QAGxB,SAAAC,EAAAV,GACA,OAAAF,EAAA,EAAAE,EAAA,SAAAE,GAAgC,gBAAAG,GAAqB,gBAAAE,GACrD,gBAAAE,GAAwB,gBAAAE,GAAqB,OAAAX,EAAAE,EAAAG,EAAAE,EAAAE,EAAAE,SAG7C,SAAAC,EAAAZ,GACA,OAAAF,EAAA,EAAAE,EAAA,SAAAE,GAAgC,gBAAAG,GAAqB,gBAAAE,GACrD,gBAAAE,GAAwB,gBAAAE,GAAqB,gBAAAR,GAC7C,OAAAH,EAAAE,EAAAG,EAAAE,EAAAE,EAAAE,EAAAR,UAwBA,SAAAU,EAAAb,EAAAE,EAAAG,GACA,WAAAL,EAAAE,EAAAF,EAAAG,EAAAD,EAAAG,GAAAL,EAAAE,EAAAF,CAAAK,GAEA,SAAAS,EAAAd,EAAAE,EAAAG,EAAAE,GACA,WAAAP,EAAAE,EAAAF,EAAAG,EAAAD,EAAAG,EAAAE,GAAAP,EAAAE,EAAAF,CAAAK,EAAAL,CAAAO,GAEA,SAAAQ,EAAAf,EAAAE,EAAAG,EAAAE,EAAAE,GACA,WAAAT,EAAAE,EAAAF,EAAAG,EAAAD,EAAAG,EAAAE,EAAAE,GAAAT,EAAAE,EAAAF,CAAAK,EAAAL,CAAAO,EAAAP,CAAAS,GAEA,SAAAO,EAAAhB,EAAAE,EAAAG,EAAAE,EAAAE,EAAAE,GACA,WAAAX,EAAAE,EAAAF,EAAAG,EAAAD,EAAAG,EAAAE,EAAAE,EAAAE,GAAAX,EAAAE,EAAAF,CAAAK,EAAAL,CAAAO,EAAAP,CAAAS,EAAAT,CAAAW,GAEA,SAAAM,EAAAjB,EAAAE,EAAAG,EAAAE,EAAAE,EAAAE,EAAAR,GACA,WAAAH,EAAAE,EAAAF,EAAAG,EAAAD,EAAAG,EAAAE,EAAAE,EAAAE,EAAAR,GAAAH,EAAAE,EAAAF,CAAAK,EAAAL,CAAAO,EAAAP,CAAAS,EAAAT,CAAAW,EAAAX,CAAAG,GA2BA,IAAAe,EAAAZ,EAAA,SAAAa,EAAAC,EAAAC,GAIA,IAFA,IAAAC,EAAAC,MAAAJ,GAEAK,EAAA,EAAmBA,EAAAL,EAAUK,IAE7BF,EAAAE,GAAAH,EAAAD,EAAAI,GAGA,OAAAF,IAGAG,EAAArB,EAAA,SAAAsB,EAAAC,GAIA,IAFA,IAAAL,EAAAC,MAAAG,GAEAF,EAAA,EAAmBA,EAAAE,GAAAC,EAAAtB,EAAiBmB,IAEpCF,EAAAE,GAAAG,EAAAzB,EACAyB,IAAAtB,EAIA,OADAiB,EAAAM,OAAAJ,EACAK,EAAAP,EAAAK,KAoVA,SAAAG,EAAAC,GAEA,MAAAC,MAAA,gDAAAD,EAAA,OAyEA,SAAAE,EAAAC,EAAAC,GAEA,IACA,IAAAC,EAAAC,KAAAC,EAAAC,EAAAL,EAAAC,EAAA,EAAAE,GACAC,IAAAF,EAAAC,EAAAG,OACAF,EAAAC,EAAAH,EAAAlC,EAAAkC,EAAA/B,EAAA,EAAAgC,IAIA,OAAAC,EAGA,SAAAC,EAAAL,EAAAC,EAAAM,EAAAJ,GAEA,GAAAI,EAAA,IAGA,OADAJ,EAAAK,KAAAb,EAAAK,EAAAC,KACA,EAGA,GAAAD,IAAAC,EAEA,SAGA,qBAAAD,GAAA,OAAAA,GAAA,OAAAC,EAGA,MADA,oBAAAD,GAAAJ,EAAA,IACA,EAwBA,QAAAa,KAPAT,EAAAU,EAAA,IAEAV,EAAAW,GAAAX,GACAC,EAAAU,GAAAV,IAIAD,EAEA,IAAAK,EAAAL,EAAAS,GAAAR,EAAAQ,GAAAF,EAAA,EAAAJ,GAEA,SAGA,SAaA,SAAAS,EAAAZ,EAAAC,EAAAY,GAEA,qBAAAb,EAEA,OAAAA,IAAAC,EAAA,EAAAD,EAAAC,GAAA,IAaA,wBAAAD,EAAAU,EAMA,OAAAG,EAAAD,EAAAZ,EAAAhC,EAAAiC,EAAAjC,IACA6C,GACAA,EAAAD,EAAAZ,EAAA7B,EAAA8B,EAAA9B,IACA0C,EACAD,EAAAZ,EAAA3B,EAAA4B,EAAA5B,GAIA,KAAO2B,EAAA7B,GAAA8B,EAAA9B,KAAA0C,EAAAD,EAAAZ,EAAAhC,EAAAiC,EAAAjC,IAA6CgC,IAAA7B,EAAA8B,IAAA9B,GACpD,OAAA0C,IAAAb,EAAA7B,EAAA,EAAA8B,EAAA9B,GAAA,KAGA,IAKA2C,EAAA5C,EAAA,SAAA8B,EAAAC,GAEA,IAAAc,EAAAH,EAAAZ,EAAAC,GACA,OAAAc,EAAA,EAAAC,GAAAD,EAAAE,GAAAC,KASA,SAAAvB,EAAA3B,EAAAG,GAA8B,OAASH,IAAAG,KAGvC,SAAAgD,EAAAnD,EAAAG,EAAAE,GAAiC,OAASL,IAAAG,IAAAE,KAG1C,SAAA+C,EAAA/C,GAAwB,OAAAA,EAMxB,SAAAgD,EAAAC,EAAAC,GAEA,IAAAC,KAEA,QAAAf,KAAAa,EAEAE,EAAAf,GAAAa,EAAAb,GAGA,QAAAA,KAAAc,EAEAC,EAAAf,GAAAc,EAAAd,GAGA,OAAAe,EAQA,SAAAC,EAAAC,EAAAC,GAGA,qBAAAD,EAEA,OAAAA,EAAAC,EAIA,IAAAD,EAAAvD,EAEA,OAAAwD,EAEA,IAAAC,EAAAC,EAAAH,EAAA1D,EAAA2D,GACAD,IAAAvD,EACA,QAAA2D,EAAAF,EAAsBF,EAAAvD,EAAMuD,IAAAvD,EAE5B2D,IAAA3D,EAAA0D,EAAAH,EAAA1D,EAAA2D,GAEA,OAAAC,EAKA,IAAAG,GAAiBrB,EAAA,GAGjB,SAAAmB,EAAAG,EAAAC,GAA6B,OAASvB,EAAA,EAAA1C,EAAAgE,EAAA7D,EAAA8D,GAItC,IAAAC,EAAAhE,EAAA2D,GAEA,SAAAM,EAAAC,GAGA,IADA,IAAAC,EAAAN,EACAzC,EAAA8C,EAAA1C,OAAyBJ,KAEzB+C,EAAAR,EAAAO,EAAA9C,GAAA+C,GAEA,OAAAA,EAYA,IAAAC,EAAAlE,EAAA,SAAAH,EAAAyD,EAAAC,GAEA,QAAAS,KAAmBV,EAAAvD,GAAAwD,EAAAxD,EAAcuD,IAAAvD,EAAAwD,IAAAxD,EAEjCiE,EAAA5B,KAAA7B,EAAAV,EAAAyD,EAAA1D,EAAA2D,EAAA3D,IAEA,OAAAmE,EAAAC,KAiDAG,EAAArE,EAAA,SAAAF,EAAAG,GAAqC,OAAAH,EAAAG,IAyCrCqE,EAAAC,KAAAC,KACAC,EAAAF,KAAAG,MAGAC,EAAAJ,KAAAK,IAiBAC,EAAAvE,EAAA,SAAAwE,EAAA9D,EAAA+D,EAAAC,EAAAC,GAKA,IAHA,IAAAC,EAAAJ,EAAAtD,OACA2D,EAAAnE,EAAAkE,GAAAD,EAAAzD,OAEAJ,EAAA,EAAgB+D,GAAA/D,EAAA8D,GAChB,CACA,IAAAE,EAAAH,EAAAI,WAAArE,GACAmE,EACAL,EAAA1D,OAAA6D,EAAAjE,OAEA,KAAAoE,GACAL,IAAAC,EAAA,IACAA,IAAA,eAAAI,GAAAN,EAAA1D,OAAA6D,EAAAjE,KAAA,IAIA,OAAAiC,EAAAkC,EAAAnE,GAAA,EAAA+D,EAAAC,KAQAM,EAAApF,EAAA,SAAAqF,EAAAvE,EAAAwE,GAEA,OACAA,EAAAhE,OAAAR,EAGA,eAAAwE,EAAAH,WAAArE,IACAuE,EAAArC,EAAAsC,EAAAC,OAAAzE,EAAA,KAAAA,EAAA,KAEAuE,EAAArC,EAAAsC,EAAAxE,KACA,OAAAwE,EAAAxE,IAAA,EAAAA,EAAA,GACA,GAPA,IAaA0E,EAAAxF,EAAA,SAAAkF,EAAApE,EAAAwE,GAEA,OAAAA,EAAAH,WAAArE,KAAAoE,IAQAO,EAAA3F,EAAA,SAAAgB,EAAAwE,GAEA,KAAOxE,EAAAwE,EAAAhE,OAAwBR,IAC/B,CACA,IAAAoE,EAAAI,EAAAH,WAAArE,GACA,GAAAoE,EAAA,OAAAA,EAEA,OAAApE,EAGA,OAAAA,IAIA4E,EAAA1F,EAAA,SAAA2F,EAAA7E,EAAAwE,GAEA,QAAAM,EAAA,EAAoB9E,EAAAwE,EAAAhE,OAAwBR,IAC5C,CACA,IAAA+E,EAAAP,EAAAH,WAAArE,GAAA,GACA,GAAA+E,EAAA,GAAAF,GAAAE,EAAA,MACAD,EAAAD,EAAAC,EAAAC,EAEA,OAAAtE,EAAAT,EAAA8E,KAIAE,EAAAhG,EAAA,SAAAgB,EAAAwE,GAEA,QAAAM,EAAA,EAAoB9E,EAAAwE,EAAAhE,OAAwBR,IAC5C,CACA,IAAAoE,EAAAI,EAAAH,WAAArE,GACA,MAAAoE,KAAA,GAIA,MAAAA,KAAA,GAIA,OAAAA,KAAA,IAMA,MAJAU,EAAA,GAAAA,EAAAV,EAAA,QAJAU,EAAA,GAAAA,EAAAV,EAAA,QAJAU,EAAA,GAAAA,EAAAV,EAAA,GAeA,OAAA3D,EAAAT,EAAA8E,KAiNAG,EAAAjG,EAAA,SAAAkG,EAAAC,GAEA,OAAAA,EAAAC,KAAAF,KAGAG,EAAAnG,EAAA,SAAAoG,EAAAC,EAAAC,GACA,OAAAA,EAAAC,MAAAH,EAAAC,KAoMA,SAAAG,EAAAC,GAEA,OAASnE,EAAA,EAAAvC,EAAA0G,GAGTD,EAAA,SAAAE,GACA,wBAAAA,EACAC,EAAA,SAAAD,IAEA,WAAAA,KAAA,eAAAA,OACAE,GAAAF,IAEAG,SAAAH,MAAA,EAEAC,EAAA,SAAAD,GADAE,GAAAF,KAIAF,EAAA,SAAAE,GACA,yBAAAA,EACAE,GAAAF,GACAC,EAAA,SAAAD,KAGAF,EAAA,SAAAE,GACA,wBAAAA,EACAE,GAAAF,GACAC,EAAA,UAAAD,KAGAF,EAAA,SAAAE,GACA,OAAAE,GAAAE,EAAAJ,MAGAF,EAAA,SAAAE,GACA,wBAAAA,EACAE,GAAAF,GACAA,aAAAK,OACAH,GAAAF,EAAA,IACAC,EAAA,WAAAD,KA+DA,IAwDAM,EAAAlH,EAAA,SAAA2G,EAAAC,GAEA,OAAAO,EAAAR,EAAAS,EAAAR,MAGA,SAAAO,EAAAR,EAAAC,GAEA,OAAAD,EAAAnE,GAEA,OACA,OAAAmE,EAAA1G,EAAA2G,GAEA,OACA,cAAAA,EACAE,GAAAH,EAAAxG,GACA0G,EAAA,OAAAD,GAEA,OACA,OAAAS,EAAAT,GAIAU,EAAAX,EAAA1G,EAAA2G,EAAA3C,GAFA4C,EAAA,SAAAD,GAIA,OACA,OAAAS,EAAAT,GAIAU,EAAAX,EAAA1G,EAAA2G,EAAAW,GAFAV,EAAA,WAAAD,GAIA,OACA,IAAAY,EAAAb,EAAAtG,EACA,qBAAAuG,GAAA,OAAAA,KAAAY,KAAAZ,GAEA,OAAAC,EAAA,iCAAAW,EAAA,IAAAZ,GAEA,IAAA1F,EAAAiG,EAAAR,EAAA1G,EAAA2G,EAAAY,IACA,OAAAC,GAAAvG,KAAAwG,GAAAjH,EAAAkH,GAAAH,EAAAtG,EAAApB,IAEA,OACA,IAAA8H,EAAAjB,EAAApG,EACA,OAAA8G,EAAAT,GAIAgB,EAAAhB,EAAApF,QAIAN,EAAAiG,EAAAR,EAAA1G,EAAA2G,EAAAgB,IACAH,GAAAvG,KAAAwG,GAAAjH,EAAAoH,GAAAD,EAAA1G,EAAApB,KAHA+G,EAAA,8BAAAe,EAAA,iBAAAhB,EAAApF,OAAA,WAAAoF,GAJAC,EAAA,WAAAD,GASA,OACA,qBAAAA,GAAA,OAAAA,GAAAS,EAAAT,GAEA,OAAAC,EAAA,YAAAD,GAGA,IAAAkB,EAAAjE,EAEA,QAAAtB,KAAAqE,EAEA,GAAAA,EAAAmB,eAAAxF,GACA,CAEA,GADArB,EAAAiG,EAAAR,EAAA1G,EAAA2G,EAAArE,KACAkF,GAAAvG,GAEA,OAAAwG,GAAAjH,EAAAkH,GAAApF,EAAArB,EAAApB,IAEAgI,EAAAnE,EAAAlC,EAAAc,EAAArB,EAAApB,GAAAgI,GAGA,OAAAhB,GAAAkB,GAAAF,IAEA,OAGA,IAFA,IAAAG,EAAAtB,EAAA5G,EACAmI,EAAAvB,EAAAwB,EACA/G,EAAA,EAAkBA,EAAA8G,EAAA1G,OAAqBJ,IACvC,CAEA,GADAF,EAAAiG,EAAAe,EAAA9G,GAAAwF,IACAa,GAAAvG,GAEA,OAAAA,EAEA+G,IAAA/G,EAAApB,GAEA,OAAAgH,GAAAmB,GAEA,QAEA,OADA/G,EAAAiG,EAAAR,EAAA1G,EAAA2G,GACAa,GAAAvG,GAEAiG,EAAAR,EAAAyB,EAAAlH,EAAApB,GAAA8G,GADA1F,EAGA,QAEA,IADA,IAAAmH,EAAAxE,EACAyE,EAAA3B,EAAAwB,EAA6BG,EAAArI,EAAQqI,IAAArI,EACrC,CAEA,GADAiB,EAAAiG,EAAAmB,EAAAxI,EAAA8G,GACAa,GAAAvG,GAEA,OAAAA,EAEAmH,EAAA1E,EAAAzC,EAAApB,EAAAuI,GAEA,OAAAX,GAAAa,GAAAP,GAAAK,KAEA,OACA,OAAAX,GAAAjH,EAAA+H,GAAA7B,EAAA7G,EAAAkH,EAAAJ,KAEA,OACA,OAAAE,GAAAH,EAAA7G,IAIA,SAAAwH,EAAAX,EAAAC,EAAA6B,GAIA,IAFA,IAAAC,EAAA9B,EAAApF,OACAmH,EAAAxH,MAAAuH,GACAtH,EAAA,EAAgBA,EAAAsH,EAAStH,IACzB,CACA,IAAAF,EAAAiG,EAAAR,EAAAC,EAAAxF,IACA,IAAAqG,GAAAvG,GAEA,OAAAwG,GAAAjH,EAAAoH,GAAAzG,EAAAF,EAAApB,IAEA6I,EAAAvH,GAAAF,EAAApB,EAEA,OAAAgH,GAAA2B,EAAAE,IAGA,SAAAtB,EAAAT,GAEA,OAAAzF,MAAAyH,QAAAhC,IAAA,oBAAAiC,UAAAjC,aAAAiC,SAGA,SAAAtB,EAAAoB,GAEA,OAAAlI,EAAAqI,GAAAH,EAAAnH,OAAA,SAAAJ,GAAiE,OAAAuH,EAAAvH,KAGjE,SAAAyF,EAAAkC,EAAAnC,GAEA,OAAAc,GAAAjH,EAAA+H,GAAA,aAAAO,EAAA/B,EAAAJ,KAMA,SAAAoC,EAAAlH,EAAAC,GAEA,GAAAD,IAAAC,EAEA,SAGA,GAAAD,EAAAU,IAAAT,EAAAS,EAEA,SAGA,OAAAV,EAAAU,GAEA,OACA,OACA,OAAAV,EAAAhC,IAAAiC,EAAAjC,EAEA,OACA,OAAAgC,EAAA7B,IAAA8B,EAAA9B,EAEA,OACA,OAAA6B,EAAA3B,IAAA4B,EAAA5B,EAEA,OACA,OACA,OACA,OAAA6I,EAAAlH,EAAA7B,EAAA8B,EAAA9B,GAEA,OACA,OAAA6B,EAAAzB,IAAA0B,EAAA1B,GAAA2I,EAAAlH,EAAA7B,EAAA8B,EAAA9B,GAEA,OACA,OAAA6B,EAAAvB,IAAAwB,EAAAxB,GAAAyI,EAAAlH,EAAA7B,EAAA8B,EAAA9B,GAEA,OACA,OAAA6B,EAAA/B,IAAAgC,EAAAhC,GAAAkJ,EAAAnH,EAAAqG,EAAApG,EAAAoG,GAEA,QACA,OAAArG,EAAAsG,IAAArG,EAAAqG,GAAAY,EAAAlH,EAAA7B,EAAA8B,EAAA9B,GAEA,QACA,OAAAgJ,EAAAnH,EAAAqG,EAAApG,EAAAoG,IAIA,SAAAc,EAAAC,EAAAC,GAEA,IAAAT,EAAAQ,EAAA1H,OACA,GAAAkH,IAAAS,EAAA3H,OAEA,SAEA,QAAAJ,EAAA,EAAgBA,EAAAsH,EAAStH,IAEzB,IAAA4H,EAAAE,EAAA9H,GAAA+H,EAAA/H,IAEA,SAGA,SAcA,SAAA4F,EAAAJ,GAA4B,OAAAA,EAC5B,SAAAQ,EAAAR,GAA8B,OAAAA,EA0B9B,SAAAwC,EAAAxC,GAEA,OACApE,EAAA,EACA1C,EAAA8G,GAYA,SAAAyC,EAAAC,GAEA,OACA9G,EAAA,EACAvC,EAAAqJ,EACAnJ,EAAA,MA3BA6G,EAAA,MA+BA,IAAAuC,GAAAvJ,EAAA,SAAAsJ,EAAAE,GAEA,OACAhH,EAAA,EACAvC,EAAAqJ,EACAjJ,EAAAmJ,KAwBAC,GAAA,EAEA,SAAAC,GAAAF,GAEA,IAAAG,GACAnH,EAAA,EACAjC,EAAAkJ,KACA1J,EAAAyJ,EACArB,EAAA,KACAC,MAKA,OAFAwB,GAAAD,GAEAA,EAGA,SAAAE,GAAAL,GAEA,OAAAH,EAAA,SAAAC,GACAA,EAAAF,EAAAM,GAAAF,OAIA,SAAAM,GAAAH,EAAAI,GAEAJ,EAAAvB,EAAA9F,KAAAyH,GACAH,GAAAD,GAGA,IAAAK,GAAAhK,EAAA,SAAA2J,EAAAI,GAEA,OAAAV,EAAA,SAAAC,GACAQ,GAAAH,EAAAI,GACAT,EAAAF,EA7rCA,QA8tCAa,IAAA,EACAC,MAGA,SAAAN,GAAAD,GAGA,GADAO,GAAA5H,KAAAqH,IACAM,GAAA,CAKA,IADAA,IAAA,EACAN,EAAAO,GAAAC,SAEAC,GAAAT,GAEAM,IAAA,GAIA,SAAAG,GAAAT,GAEA,KAAAA,EAAA5J,GACA,CACA,IAAAsK,EAAAV,EAAA5J,EAAAyC,EACA,OAAA6H,GAAA,IAAAA,EACA,CACA,KAAAV,EAAAxB,GAAAwB,EAAAxB,EAAA3F,IAAA6H,GAEAV,EAAAxB,EAAAwB,EAAAxB,EAAA/G,EAEA,IAAAuI,EAAAxB,EAEA,OAEAwB,EAAA5J,EAAA4J,EAAAxB,EAAAlI,EAAA0J,EAAA5J,EAAAD,GACA6J,EAAAxB,EAAAwB,EAAAxB,EAAA/G,MAEA,QAAAiJ,EAMA,YAJAV,EAAA5J,EAAAI,EAAAwJ,EAAA5J,EAAAE,EAAA,SAAAqK,GACAX,EAAA5J,EAAAuK,EACAV,GAAAD,MAIA,OAAAU,EACA,CACA,OAAAV,EAAAvB,EAAA5G,OAEA,OAEAmI,EAAA5J,EAAA4J,EAAA5J,EAAAE,EAAA0J,EAAAvB,EAAA+B,cAIAR,EAAAxB,GACA3F,EAAA,IAAA6H,EAAA,IACApK,EAAA0J,EAAA5J,EAAAE,EACAmB,EAAAuI,EAAAxB,GAEAwB,EAAA5J,EAAA4J,EAAA5J,EAAAM,IAqFA,IAAAkK,MAyBA,SAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,OACA5K,EAAAwK,EACAtK,EAAAuK,EACArK,EAAAsK,EACApK,EAAAqK,EACA7K,EAAA8K,GAKA,SAAAC,GAAAC,EAAAC,GAEA,IAAAC,GACA9C,EAAA6C,EACA5C,OAAA8C,GAGAR,EAAAK,EAAA5K,EACAwK,EAAAI,EAAA1K,EACAuK,EAAAG,EAAAxK,EACAsK,EAAAE,EAAAhL,EAmBA,OAAAkL,EAAA7C,EAAAsB,GAAAjJ,EAAA8I,GAjBA,SAAA4B,EAAAC,GAEA,OAAA3K,EAAA8I,GAAA4B,GAhRA3I,EAAA,EACAvC,EA+QA,SAAA8J,GAEA,IAAAnD,EAAAmD,EAAAjK,EAEA,WAAAiK,EAAAvH,EAEA9B,EAAAiK,EAAAM,EAAArE,EAAAwE,GAGAR,GAAAC,EACAlK,EAAA+J,EAAAO,EAAArE,EAAAxF,EAAAwF,EAAAyE,EAAAD,GACA1K,EAAAgK,EAAAO,EAAAL,EAAAhE,EAAAxF,EAAAwF,EAAAyE,EAAAD,OAIAL,EAAA9K,IAQA,IA2UAqL,GA3UAC,GAAAvL,EAAA,SAAAiL,EAAAlB,GAEA,OAAAV,EAAA,SAAAC,GAEA2B,EAAA9C,EAAA4B,GACAT,EAAAF,EA/7CA,QAo8CAoC,GAAAxL,EAAA,SAAAiL,EAAAlB,GAEA,OAAAtJ,EAAAuJ,GAAAiB,EAAA7C,GACA5F,EAAA,EACA1C,EAAAiK,MASA,SAAA0B,GAAAC,GAEA,gBAAA9E,GAEA,OACApE,EAAA,EACAmJ,EAAAD,EACAE,EAAAhF,IAMA,SAAAiF,GAAAC,GAEA,OACAtJ,EAAA,EACAuJ,EAAAD,GAmBA,SAAAE,GAAAC,EAAAC,EAAAC,GAEA,IAAAC,KAIA,QAAAV,KAHAW,IAAA,EAAAH,EAAAE,EAAA,MACAC,IAAA,EAAAF,EAAAC,EAAA,MAEAH,EAEAnC,GAAAmC,EAAAP,IACAlJ,EAAA,KACA1C,EAAAsM,EAAAV,KAA4BtK,EAAAyC,EAAAwH,EAAAxH,KAM5B,SAAAwI,GAAAC,EAAAC,EAAAH,EAAAI,GAEA,OAAAD,EAAA/J,GAEA,OACA,IAAAkJ,EAAAa,EAAAZ,EACAc,EAqBA,SAAAH,EAAAZ,EAAAc,GAeA,OAAA/L,EAJA6L,EACA/B,GAAAmB,GAAAnL,EACAgK,GAAAmB,GAAA3L,EAXA,SAAA+B,GAEA,QAAAwG,EAAAkE,EAA0BlE,EAAMA,IAAAoE,EAEhC5K,EAAAwG,EAAAqE,EAAA7K,GAEA,OAAAA,GA7BAyK,EAAAX,GAAAgB,CAAAN,EAAAZ,EAAAc,GAEA,YADAJ,EAAAV,GAuCA,SAAAY,EAAAO,EAAAC,GAQA,OANAA,MAAuB1L,EAAAyC,EAAAwH,EAAAxH,GAEvByI,EACAQ,EAAA1L,EAAAuC,EAAAkJ,EAAAC,EAAA1L,GACA0L,EAAAzB,EAAA1H,EAAAkJ,EAAAC,EAAAzB,GAEAyB,EA/CAC,CAAAT,EAAAG,EAAAL,EAAAV,KAGA,OACA,QAAAI,EAAAS,EAAAR,EAAyBD,EAAA7L,EAAQ6L,IAAA7L,EAEjCoM,GAAAC,EAAAR,EAAAhM,EAAAsM,EAAAI,GAEA,OAEA,OAKA,YAJAH,GAAAC,EAAAC,EAAAS,EAAAZ,GACAO,EAAAJ,EAAA1J,EACA6J,EAAAF,KA8OA,IAAAS,GAAA,qBAAAC,qBAGA,SAAAC,GAAAC,EAAAC,GAEAD,EAAAE,YAAAD,GA2BA,SAAAE,GAAA/H,GAEA,OACAhD,EAAA,EACA1C,EAAA0F,GASA,IAwBAgI,GAxBAxN,EAAA,SAAAyN,EAAAC,GAEA,OAAA1N,EAAA,SAAA2N,EAAAC,GAEA,QAAAC,KAAAC,EAAA,EAA2CF,EAAA3N,EAAW2N,IAAA3N,EACtD,CACA,IAAA8N,EAAAH,EAAA9N,EACAgO,GAAAC,EAAA9N,GAAA,EACA4N,EAAAvL,KAAAyL,GAIA,OAFAD,GAAAD,EAAArM,QAGAgB,EAAA,EACArC,EAAAuN,EACArN,EAAA2N,GAAAL,GACApN,EAAAsN,EACA9N,EAAA0N,EACAxN,EAAA6N,MAMAG,MAAA/C,GAOAlL,EAAA,SAAAyN,EAAAC,GAEA,OAAA1N,EAAA,SAAA2N,EAAAC,GAEA,QAAAC,KAAAC,EAAA,EAA2CF,EAAA3N,EAAW2N,IAAA3N,EACtD,CACA,IAAA8N,EAAAH,EAAA9N,EACAgO,GAAAC,EAAA9N,KAAA,EACA4N,EAAAvL,KAAAyL,GAIA,OAFAD,GAAAD,EAAArM,QAGAgB,EAAA,EACArC,EAAAuN,EACArN,EAAA2N,GAAAL,GACApN,EAAAsN,EACA9N,EAAA0N,EACAxN,EAAA6N,MAMAI,MAAAhD,GAgDA,IA0aAiD,GA7WAC,GAAApO,EAAA,SAAAuC,EAAA8L,GAEA,OACA7L,EAAA,KACAK,EAAAN,EACAyK,EAAAqB,KAWAC,GAAAtO,EAAA,SAAAuC,EAAAqE,GAEA,OACApE,EAAA,KACAK,EAAAN,EACAyK,EAAApG,KAGA2H,GAAAvO,EAAA,SAAAuC,EAAAqE,GAEA,OACApE,EAAA,KACAK,EAAAN,EACAyK,EAAApG,KAgHA,SAAAoH,GAAAL,GAEA,QAAAa,KAAqBb,EAAA1N,EAAY0N,IAAA1N,EACjC,CACA,IAAAwO,EAAAd,EAAA7N,EAEA4N,EAAAe,EAAAjM,EACAD,EAAAkM,EAAA5L,EACA+D,EAAA6H,EAAAzB,EAEA,UAAAU,EAAA,CASA,IAAAgB,EAAAF,EAAAd,KAAAc,EAAAd,OACA,OAAAA,GAAA,UAAAnL,EACAoM,GAAAD,EAAAnM,EAAAqE,GACA8H,EAAAnM,GAAAqE,MAVA,cAAArE,EACAoM,GAAAH,EAAAjM,EAAA6E,EAAAR,IACA4H,EAAAjM,GAAA6E,EAAAR,GAWA,OAAA4H,EAGA,SAAAG,GAAAC,EAAArM,EAAAsM,GAEA,IAAAC,EAAAF,EAAArM,GACAqM,EAAArM,GAAAuM,IAAA,IAAAD,IAQA,SAAAE,GAAAC,EAAAC,GAEA,IAAAvB,EAAAsB,EAAAxM,EAEA,OAAAkL,EAEA,OAAAqB,GAAAC,EAAArD,IAAAqD,EAAArD,EAAAqD,EAAAjD,KAAAkD,GAGA,OAAAvB,EAEA,OAAAT,GAAAiC,eAAAF,EAAAlP,GAGA,OAAA4N,EACA,CAIA,IAHA,IAAAyB,EAAAH,EAAArD,EACAyD,EAAAJ,EAAA3D,EAEA,IAAA8D,EAAA3M,GAEA,kBAAA4M,EACAA,KAAAD,EAAA9D,GACA+D,EAAA9M,KAAA6M,EAAA9D,GAEA8D,IAAAxD,EAGA,IAAA0D,GAAsBhE,EAAA+D,EAAAzC,EAAAsC,GAGtB,OAFAK,EAAAP,GAAAI,EAAAE,IACAE,mBAAAF,EACAC,EAGA,OAAA5B,EAIA,OADA8B,GADAF,EAAAN,EAAA5G,EAAA4G,EAAA7G,GACA8G,EAAAD,EAAA3O,GACAiP,EAKA,IAAAA,EAAAN,EAAAjP,EACAkN,GAAAwC,gBAAAT,EAAAjP,EAAAiP,EAAA7O,GACA8M,GAAAyC,cAAAV,EAAA7O,GAEAmL,IAAA,KAAA0D,EAAA7O,GAEAmP,EAAAK,iBAAA,QAAArE,GAAAgE,IAGAE,GAAAF,EAAAL,EAAAD,EAAA3O,GAEA,QAAAwN,EAAAmB,EAAAzO,EAAAa,EAAA,EAAgCA,EAAAyM,EAAArM,OAAiBJ,IAEjD+L,GAAAmC,EAAAP,GAAA,IAAArB,EAAAG,EAAAzM,GAAAyM,EAAAzM,GAAAnB,EAAAgP,IAGA,OAAAK,EAQA,SAAAE,GAAAF,EAAAL,EAAAT,GAEA,QAAAjM,KAAAiM,EACA,CACA,IAAA5H,EAAA4H,EAAAjM,GAEA,OAAAA,EACAqN,GAAAN,EAAA1I,GAEA,OAAArE,EACAsN,GAAAP,EAAAL,EAAArI,GAEA,OAAArE,EACAuN,GAAAR,EAAA1I,GAEA,OAAArE,EACAwN,GAAAT,EAAA1I,IAEA,UAAArE,GAAA,YAAAA,GAAA+M,EAAA/M,KAAAqE,KAAA0I,EAAA/M,GAAAqE,IASA,SAAAgJ,GAAAN,EAAAU,GAEA,IAAAC,EAAAX,EAAAY,MAEA,QAAA3N,KAAAyN,EAEAC,EAAA1N,GAAAyN,EAAAzN,GASA,SAAAuN,GAAAR,EAAAa,GAEA,QAAA5N,KAAA4N,EACA,CACA,IAAAvJ,EAAAuJ,EAAA5N,GACA,qBAAAqE,EACA0I,EAAAc,aAAA7N,EAAAqE,GACA0I,EAAAe,gBAAA9N,IASA,SAAAwN,GAAAT,EAAAgB,GAEA,QAAA/N,KAAA+N,EACA,CACA,IAAAtO,EAAAsO,EAAA/N,GACAkL,EAAAzL,EAAAjC,EACA6G,EAAA5E,EAAAgL,EAEA,qBAAApG,EACA0I,EAAAiB,eAAA9C,EAAAlL,EAAAqE,GACA0I,EAAAkB,kBAAA/C,EAAAlL,IASA,SAAAsN,GAAAP,EAAAL,EAAAwB,GAEA,IAAAC,EAAApB,EAAAqB,QAAArB,EAAAqB,UAEA,QAAApO,KAAAkO,EACA,CACA,IAAAG,EAAAH,EAAAlO,GACAsO,EAAAH,EAAAnO,GAEA,GAAAqO,EAAA,CAOA,GAAAC,EACA,CAEA,GADAA,EAAAnE,EACAlK,IAAAoO,EAAApO,EACA,CACAqO,EAAAnE,EAAAkE,EACA,SAEAtB,EAAAwB,oBAAAvO,EAAAsO,GAGAA,EAAAE,GAAA9B,EAAA2B,GACAtB,EAAAK,iBAAApN,EAAAsO,EACA1C,KACO6C,QAAAC,GAAAL,GAAA,IAEPF,EAAAnO,GAAAsO,OArBAvB,EAAAwB,oBAAAvO,EAAAsO,GACAH,EAAAnO,QAAA2I,GA+BA,IAEAgG,OAAAvB,iBAAA,SAAAwB,OAAAC,kBAA4D,WAC5DC,IAAA,WAAmBlD,IAAA,MAGnB,MAAA5N,IAOA,SAAAwQ,GAAA9B,EAAAqC,GAEA,SAAAhI,EAAAiI,GAEA,IAAAlD,EAAA/E,EAAAoD,EACAxL,EAAAiG,EAAAkH,EAAAvO,EAAAyR,GAEA,GAAA9J,GAAAvG,GAAA,CAsBA,IAjBA,IAeAkO,EAfA1B,EAAAuD,GAAA5C,GAOAzH,EAAA1F,EAAApB,EACA0R,EAAA9D,IAAA,EAAA9G,EAAA9G,EAAA8G,EAAA6K,EAAA7K,EACA8K,EAAA,GAAAhE,EAAA9G,EAAA3G,EAAA,GAAAyN,GAAA9G,EAAA+K,GACAC,GACAF,GAAAH,EAAAG,mBACA,GAAAhE,EAAA9G,EAAA3G,EAAA,GAAAyN,GAAA9G,EAAAiL,KAAAN,EAAAO,iBACA7C,GAIAG,EAAAwC,EAAAvG,GACA,CACA,sBAAA+D,EAEAoC,EAAApC,EAAAoC,QAIA,QAAApQ,EAAAgO,EAAA5N,OAA+BJ,KAE/BoQ,EAAApC,EAAAhO,GAAAoQ,GAGAI,IAAAjF,EAEAiF,EAAAJ,EAAAE,IAKA,OAFApI,EAAAoD,EAAA4E,EAEAhI,EAGA,SAAAyI,GAAAjQ,EAAAC,GAEA,OAAAD,EAAAU,GAAAT,EAAAS,GAAAwG,EAAAlH,EAAAhC,EAAAiC,EAAAjC,GAyBA,SAAAkS,GAAAC,EAAAlJ,EAAAnB,EAAAsK,GAEA,IAAAC,GACA3P,EAAAuG,EACAqJ,EAAAxK,EACAyK,EAAAH,EACAI,OAAApH,EACAqH,OAAArH,GAGA,OADA+G,EAAA3P,KAAA6P,GACAA,EAIA,SAAAK,GAAA1Q,EAAAC,EAAAkQ,EAAArK,GAEA,GAAA9F,IAAAC,EAAA,CAKA,IAAA0Q,EAAA3Q,EAAAU,EACAkQ,EAAA3Q,EAAAS,EAIA,GAAAiQ,IAAAC,EACA,CACA,OAAAD,GAAA,IAAAC,EAQA,YADAV,GAAAC,EAAA,EAAArK,EAAA7F,GALAA,EAg0BA,SAAA4Q,GAKA,IAHA,IAAAC,EAAAD,EAAApS,EACAmI,EAAAkK,EAAApR,OACAqM,EAAA1M,MAAAuH,GACAtH,EAAA,EAAgBA,EAAAsH,EAAStH,IAEzByM,EAAAzM,GAAAwR,EAAAxR,GAAAnB,EAGA,OACAuC,EAAA,EACArC,EAAAwS,EAAAxS,EACAE,EAAAsS,EAAAtS,EACAE,EAAAsN,EACA9N,EAAA4S,EAAA5S,EACAE,EAAA0S,EAAA1S,GAh1BA4S,CAAA9Q,GACA2Q,EAAA,EAUA,OAAAA,GAEA,OAKA,IAJA,IAAAI,EAAAhR,EAAA8J,EACAmH,EAAAhR,EAAA6J,EACAxK,EAAA0R,EAAAtR,OACAwR,EAAA5R,IAAA2R,EAAAvR,OACAwR,GAAA5R,KAEA4R,EAAAF,EAAA1R,KAAA2R,EAAA3R,GAEA,GAAA4R,EAGA,YADAjR,EAAA4J,EAAA7J,EAAA6J,GAGA5J,EAAA4J,EAAA5J,EAAAgK,IACA,IAAAkH,KAGA,OAFAT,GAAA1Q,EAAA6J,EAAA5J,EAAA4J,EAAAsH,EAAA,QACAA,EAAAzR,OAAA,GAAAwQ,GAAAC,EAAA,EAAArK,EAAAqL,IAGA,OAOA,IALA,IAAAC,EAAApR,EAAAuJ,EACA8H,EAAApR,EAAAsJ,EACA+H,GAAA,EAEAC,EAAAvR,EAAA6J,EACA,IAAA0H,EAAA7Q,GAEA4Q,GAAA,EAEA,kBAAAF,EACAA,KAAAG,EAAAhI,GACA6H,EAAA5Q,KAAA+Q,EAAAhI,GAEAgI,IAAA1H,EAIA,IADA,IAAA2H,EAAAvR,EAAA4J,EACA,IAAA2H,EAAA9Q,GAEA4Q,GAAA,EAEA,kBAAAD,EACAA,KAAAG,EAAAjI,GACA8H,EAAA7Q,KAAAgR,EAAAjI,GAEAiI,IAAA3H,EAKA,OAAAyH,GAAAF,EAAA1R,SAAA2R,EAAA3R,YAEAwQ,GAAAC,EAAA,EAAArK,EAAA7F,KAKAqR,EA0CA,SAAAG,EAAAC,GAEA,QAAApS,EAAA,EAAgBA,EAAAmS,EAAA/R,OAAeJ,IAE/B,GAAAmS,EAAAnS,KAAAoS,EAAApS,GAEA,SAIA,SApDAqS,CAAAP,EAAAC,GAAAD,IAAAC,IAEAnB,GAAAC,EAAA,EAAArK,EAAAuL,QAIAX,GAAAa,EAAAC,EAAArB,EAAArK,EAAA,IAGA,OAKA,YAJA9F,EAAAhC,IAAAiC,EAAAjC,GAEAkS,GAAAC,EAAA,EAAArK,EAAA7F,EAAAjC,IAIA,OAEA,YADA4T,GAAA5R,EAAAC,EAAAkQ,EAAArK,EAAA+L,IAGA,OAEA,YADAD,GAAA5R,EAAAC,EAAAkQ,EAAArK,EAAAgM,IAGA,OACA,GAAA9R,EAAAsG,IAAArG,EAAAqG,EAGA,YADA4J,GAAAC,EAAA,EAAArK,EAAA7F,GAIA,IAAA8R,EAAAC,GAAAhS,EAAAzB,EAAA0B,EAAA1B,GACAwT,GAAA7B,GAAAC,EAAA,EAAArK,EAAAiM,GAEA,IAAA1B,EAAApQ,EAAAX,EAAAU,EAAAqG,EAAApG,EAAAoG,GAGA,YAFAgK,GAAAH,GAAAC,EAAA,EAAArK,EAAAuK,MAoBA,SAAAuB,GAAA5R,EAAAC,EAAAkQ,EAAArK,EAAAmM,GAIA,GAAAjS,EAAA3B,IAAA4B,EAAA5B,GAAA2B,EAAA/B,IAAAgC,EAAAhC,EAAA,CAMA,IAAA8T,EAAAC,GAAAhS,EAAAzB,EAAA0B,EAAA1B,GACAwT,GAAA7B,GAAAC,EAAA,EAAArK,EAAAiM,GAEAE,EAAAjS,EAAAC,EAAAkQ,EAAArK,QAPAoK,GAAAC,EAAA,EAAArK,EAAA7F,GAkBA,SAAA+R,GAAAhS,EAAAC,EAAAiS,GAEA,IAAAC,EAGA,QAAAC,KAAApS,EAEA,UAAAoS,GAAA,OAAAA,GAAA,OAAAA,GAAA,OAAAA,EAYA,GAAAA,KAAAnS,EAAA,CAkBA,IAAAoS,EAAArS,EAAAoS,GACAE,EAAArS,EAAAmS,GAGAC,IAAAC,GAAA,UAAAF,GAAA,YAAAA,GACA,OAAAF,GAAAjC,GAAAoC,EAAAC,MAKAH,SACAC,GAAAE,QA3BAH,SACAC,GACAF,EAGA,OAAAA,EACA,GAEA,OAAAA,GAAA,OAAAA,OACA9I,GAEKnL,EAAA+B,EAAAoS,GAAAnU,EAAAiN,OAAA9B,GARL,kBAAApJ,EAAAoS,GAAA,YAjBA,CAEA,IAAAG,EAAAP,GAAAhS,EAAAoS,GAAAnS,EAAAmS,OAA6DA,GAC7DG,KAEAJ,SACAC,GAAAG,GAuCA,QAAAC,KAAAvS,EAEAuS,KAAAxS,KAEAmS,SACAK,GAAAvS,EAAAuS,IAIA,OAAAL,EAQA,SAAAN,GAAAY,EAAAC,EAAAvC,EAAArK,GAEA,IAAA6M,EAAAF,EAAAhU,EACAmU,EAAAF,EAAAjU,EAEAoU,EAAAF,EAAAjT,OACAoT,EAAAF,EAAAlT,OAIAmT,EAAAC,EAEA5C,GAAAC,EAAA,EAAArK,GACA6J,EAAAmD,EACAxT,EAAAuT,EAAAC,IAGAD,EAAAC,GAEA5C,GAAAC,EAAA,EAAArK,GACA6J,EAAAkD,EACApU,EAAAmU,IAMA,QAAAG,EAAAF,EAAAC,EAAAD,EAAAC,EAAAxT,EAAA,EAAoDA,EAAAyT,EAAYzT,IAChE,CACA,IAAA0T,EAAAL,EAAArT,GACAoR,GAAAsC,EAAAJ,EAAAtT,GAAA6Q,IAAArK,GACAA,GAAAkN,EAAA7U,GAAA,GASA,SAAA2T,GAAAW,EAAAC,EAAAvC,EAAA8C,GAiBA,IAfA,IAAAC,KAEAC,KACAC,KAGAT,EAAAF,EAAAhU,EACAmU,EAAAF,EAAAjU,EACAoU,EAAAF,EAAAjT,OACAoT,EAAAF,EAAAlT,OACA2T,EAAA,EACAC,EAAA,EAEAxN,EAAAmN,EAEAI,EAAAR,GAAAS,EAAAR,GACA,CACA,IAGAV,GAHApS,EAAA2S,EAAAU,IAGArV,EACAwU,GAHAvS,EAAA2S,EAAAU,IAGAtV,EACAuV,EAAAvT,EAAA7B,EACAqV,EAAAvT,EAAA9B,EAEAsV,OAAArK,EACAsK,OAAAtK,EAIA,GAAAgJ,IAAAI,EAAA,CAaA,IAAAmB,EAAAhB,EAAAU,EAAA,GACAO,EAAAhB,EAAAU,EAAA,GAEA,GAAAK,EACA,CACA,IAAAE,EAAAF,EAAA3V,EACA8V,EAAAH,EAAAxV,EACAuV,EAAAlB,IAAAqB,EAGA,GAAAD,EACA,CACA,IAAAG,EAAAH,EAAA5V,EACAgW,EAAAJ,EAAAzV,EACAsV,EAAArB,IAAA2B,EAKA,GAAAN,GAAAC,EAGAhD,GAAA6C,EAAAS,EAAAd,IADApN,GAEAmO,GAAAd,EAAAD,EAAAd,EAAAoB,EAAAF,EAAAF,GACAtN,GAAAyN,EAAApV,GAAA,EAGA+V,GAAAf,EAAAD,EAAAd,EAAA0B,IADAhO,GAEAA,GAAAgO,EAAA3V,GAAA,EAEAkV,GAAA,EACAC,GAAA,OAKA,GAAAG,EAEA3N,IACAmO,GAAAd,EAAAD,EAAAV,EAAAgB,EAAAF,EAAAF,GACA1C,GAAA6C,EAAAS,EAAAd,EAAApN,GACAA,GAAAyN,EAAApV,GAAA,EAEAkV,GAAA,EACAC,GAAA,OAKA,GAAAI,EAGAQ,GAAAf,EAAAD,EAAAd,EAAAmB,IADAzN,GAEAA,GAAAyN,EAAApV,GAAA,EAGAuS,GAAAoD,EAAAN,EAAAN,IADApN,GAEAA,GAAAgO,EAAA3V,GAAA,EAEAkV,GAAA,EACAC,GAAA,MAXA,CAgBA,IAAAK,GAAAE,IAAAE,EAgBA,MAbAG,GAAAf,EAAAD,EAAAd,EAAAmB,IADAzN,GAEAmO,GAAAd,EAAAD,EAAAV,EAAAgB,EAAAF,EAAAF,GACAtN,GAAAyN,EAAApV,GAAA,EAGAuS,GAAAoD,EAAAE,EAAAd,IADApN,GAEAA,GAAAgO,EAAA3V,GAAA,EAEAkV,GAAA,EACAC,GAAA,QAvFA5C,GAAA6C,EAAAC,EAAAN,IADApN,GAEAA,GAAAyN,EAAApV,GAAA,EAEAkV,IACAC,IA4FA,KAAAD,EAAAR,GACA,CAEA,IAAA7S,EAEAkU,GAAAf,EAAAD,GAFAlT,EAAA2S,EAAAU,IAEArV,EADAuV,EAAAvT,EAAA7B,IAFA2H,GAIAA,GAAAyN,EAAApV,GAAA,EACAkV,IAGA,KAAAC,EAAAR,GACA,CACA,IACA7S,EADAkU,QAEAF,GAAAd,EAAAD,GADAjT,EAAA2S,EAAAU,IACAtV,EAAAiC,EAAA9B,OAAAiL,EAAA+K,GACAb,KAGAJ,EAAAxT,OAAA,GAAA0T,EAAA1T,OAAA,GAAAyU,IAEAjE,GAAAC,EAAA,EAAA8C,GACAmB,EAAAlB,EACAlT,EAAAoT,EACAnT,EAAAkU,IAUA,IAAAE,GAAA,WAGA,SAAAJ,GAAAd,EAAAD,EAAAzS,EAAA6T,EAAAhB,EAAAF,GAEA,IAAAzG,EAAAwG,EAAA1S,GAGA,IAAAkM,EAYA,OAHAyG,EAAA5S,MAAgB8P,EAAAgD,EAAAiB,EAPhB5H,GACAtO,EAAA,EACAmW,EAAAF,EACAhE,EAAAgD,EACA/C,OAAAnH,UAIA+J,EAAA1S,GAAAkM,GAMA,OAAAA,EAAAtO,EACA,CACA+U,EAAA5S,MAAgB8P,EAAAgD,EAAAiB,EAAA5H,IAEhBA,EAAAtO,EAAA,EACA,IAAA8S,KAQA,OAPAT,GAAA/D,EAAA6H,EAAAF,EAAAnD,EAAAxE,EAAA2D,GACA3D,EAAA2D,EAAAgD,OACA3G,EAAA4D,KACA6D,EAAAjD,EACAoD,EAAA5H,IAOAsH,GAAAd,EAAAD,EAAAzS,EAAA4T,GAAAC,EAAAhB,EAAAF,GAIA,SAAAc,GAAAf,EAAAD,EAAAzS,EAAA6T,EAAAxO,GAEA,IAAA6G,EAAAwG,EAAA1S,GAGA,GAAAkM,EAAA,CAeA,OAAAA,EAAAtO,EACA,CACAsO,EAAAtO,EAAA,EACA,IAAA8S,KAQA,OAPAT,GAAA4D,EAAA3H,EAAA6H,EAAArD,EAAArL,QAEAoK,GAAAgD,EAAA,EAAApN,GACAsO,EAAAjD,EACAoD,EAAA5H,IAOAuH,GAAAf,EAAAD,EAAAzS,EAAA4T,GAAAC,EAAAxO,OA9BA,CAEA,IAAAuK,EAAAH,GAAAgD,EAAA,EAAApN,OAAAsD,GAEA+J,EAAA1S,IACApC,EAAA,EACAmW,EAAAF,EACAhE,EAAAxK,EACAyK,EAAAF,IAyIA,SAAAoE,GAAAC,EAAAC,EAAAxE,EAAAhD,GAEA,WAAAgD,EAAAzQ,OAEAgV,GA1GA,SAAAE,EAAApH,EAAAN,EAAAiD,EAAAhD,IAOA,SAAA0H,EAAArH,EAAAN,EAAAiD,EAAA7Q,EAAAwV,EAAAC,EAAA5H,GAKA,IAHA,IAAAkD,EAAAF,EAAA7Q,GACAwG,EAAAuK,EAAAC,EAEAxK,IAAAgP,GACA,CACA,IAAAE,EAAA3E,EAAA3P,EAEA,OAAAsU,EAEAJ,EAAApH,EAAAN,EAAArD,EAAAwG,EAAAE,EAAApD,QAEA,OAAA6H,EAEA3E,EAAAG,EAAAhD,EACA6C,EAAAI,EAAAtD,GAEAgE,EAAAd,EAAAE,EAAA6D,GACA1U,OAAA,GAEAmV,EAAArH,EAAAN,EAAAiE,EAAA,EAAA2D,EAAAC,EAAA5H,QAGA,OAAA6H,EACA,CACA3E,EAAAG,EAAAhD,EACA6C,EAAAI,EAAAtD,EAEA,IAIAgE,EAJAf,EAAAC,EAAAE,EACAH,IAEAA,EAAAmE,EAAAhE,EAAA/C,GACA2D,EAAAf,EAAAgE,GACA1U,OAAA,GAEAmV,EAAArH,EAAAN,EAAAiE,EAAA,EAAA2D,EAAAC,EAAA5H,SAMAkD,EAAAG,EAAAhD,EACA6C,EAAAI,EAAAtD,EAKA,KAAAkD,EAAAF,IAFA7Q,MAEAwG,EAAAuK,EAAAC,GAAAyE,EAEA,OAAAzV,EAIA,IAAAsM,EAAAsB,EAAAxM,EAEA,OAAAkL,EACA,CAGA,IAFA,IAAAyB,EAAAH,EAAArD,EAEA,IAAAwD,EAAA3M,GAEA2M,IAAAxD,EAGA,OAAAgL,EAAArH,EAAAH,EAAA8C,EAAA7Q,EAAAwV,EAAA,EAAAC,EAAAvH,EAAAC,oBAOA,IAFA,IAAAwH,EAAA/H,EAAAzO,EACAyW,EAAA1H,EAAA0H,WACA3L,EAAA,EAAgBA,EAAA0L,EAAAvV,OAAkB6J,IAClC,CACAuL,IACA,IAAAK,EAAA,IAAAvJ,EAAAqJ,EAAA1L,GAAA0L,EAAA1L,GAAApL,EACAiX,EAAAN,GAAAK,EAAAhX,GAAA,GACA,GAAA2W,GAAAhP,MAAAsP,MAGA/E,EAAAF,EADA7Q,EAAAuV,EAAAK,EAAA3L,GAAA4L,EAAAhF,EAAA7Q,EAAAwV,EAAAM,EAAAjI,OACArH,EAAAuK,EAAAC,GAAAyE,GAEA,OAAAzV,EAGAwV,EAAAM,EAEA,OAAA9V,EA5FAuV,CAAArH,EAAAN,EAAAiD,EAAA,IAAAjD,EAAA/O,EAAAgP,GA2GAyH,CAAAF,EAAAC,EAAAxE,EAAAhD,GACAkI,GAAAX,EAAAvE,IAGA,SAAAkF,GAAAX,EAAAvE,GAEA,QAAA7Q,EAAA,EAAgBA,EAAA6Q,EAAAzQ,OAAoBJ,IACpC,CACA,IAAA+Q,EAAAF,EAAA7Q,GACAgW,EAAAjF,EAAAG,EACA+E,EAAAC,GAAAF,EAAAjF,GACAiF,IAAAZ,IAEAA,EAAAa,GAGA,OAAAb,EAGA,SAAAc,GAAAhI,EAAA6C,GAEA,OAAAA,EAAA3P,GAEA,OACA,OAsEA,SAAA8M,GAEA,IAAAiI,EAAAjI,EAAAiI,WACAF,EAAAtI,GAzEAoD,EAAAE,EAAAF,EAAAI,GAoFA,OATA8E,EAAA9H,qBAEA8H,EAAA9H,mBAAAD,EAAAC,oBAGAgI,GAAAF,IAAA/H,GAEAiI,EAAAC,aAAAH,EAAA/H,GAEA+H,EApFAI,CAAAnI,GAEA,OAEA,OADAE,GAAAF,EAAA6C,EAAAI,EAAAJ,EAAAE,GACA/C,EAEA,OAEA,OADAA,EAAAoI,YAAA,EAAApI,EAAA9N,OAAA2Q,EAAAE,GACA/C,EAEA,OACA,OAAA6H,GAAA7H,EAAA6C,EAAAE,GAEA,OASA,OARA/C,EAAAC,mBAEAD,EAAAC,mBAAAlE,EAAA8G,EAAAE,EAIA/C,EAAAC,oBAAkClE,EAAA8G,EAAAE,EAAA1F,EAAAwF,EAAAI,GAElCjD,EAEA,OAEA,IADA,IAAA4C,EAAAC,EAAAE,EACAjR,EAAA,EAAkBA,EAAA8Q,EAAA9Q,EAAYA,IAE9BkO,EAAAqI,YAAArI,EAAA0H,WAAA9E,EAAAT,IAEA,OAAAnC,EAEA,OAKA,IAJA,IACAzB,GADAqE,EAAAC,EAAAE,GACA9R,EAEAqX,EAAAtI,EAAA0H,WADA5V,EAAA8Q,EAAAT,GAESrQ,EAAAyM,EAAArM,OAAiBJ,IAE1BkO,EAAAuI,aAAA9I,GAAAlB,EAAAzM,GAAA+Q,EAAAI,GAAAqF,GAEA,OAAAtI,EAEA,OAEA,KADA4C,EAAAC,EAAAE,GAIA,OADA/C,EAAAiI,WAAAI,YAAArI,GACAA,EAEA,IAAAb,EAAAyD,EAAAmE,EAMA,MALA,qBAAA5H,EAAA2D,GAEA9C,EAAAiI,WAAAI,YAAArI,GAEAb,EAAA4D,EAAA8E,GAAA7H,EAAA4C,EAAAgE,GACA5G,EAEA,OACA,OA6BA,SAAAA,EAAA6C,GAEA,IAAAD,EAAAC,EAAAE,EAGAyF,EA2BA,SAAA7B,EAAA9D,GAEA,GAAA8D,EAAA,CAMA,IADA,IAAA6B,EAAA7K,GAAA8K,yBACA3W,EAAA,EAAgBA,EAAA6U,EAAAzU,OAAuBJ,IACvC,CACA,IACAqN,EADAwH,EAAA7U,GACAiV,EACAlJ,GAAA2K,EAAA,IAAArJ,EAAAtO,EACAsO,EAAA4D,EACAtD,GAAAN,EAAA6H,EAAAnE,EAAAI,IAGA,OAAAuF,GA5CAE,CAAA9F,EAAAnQ,EAAAoQ,GAGA7C,EAAA6H,GAAA7H,EAAA4C,EAAAgE,GAIA,IADA,IAAAhB,EAAAhD,EAAApQ,EACAV,EAAA,EAAgBA,EAAA8T,EAAA1T,OAAoBJ,IACpC,CACA,IAAA6W,EAAA/C,EAAA9T,GACAqN,EAAAwJ,EAAA5B,EACA6B,EAAA,IAAAzJ,EAAAtO,EACAsO,EAAA4D,EACAtD,GAAAN,EAAA6H,EAAAnE,EAAAI,GACAjD,EAAAuI,aAAAK,EAAA5I,EAAA0H,WAAAiB,EAAA7F,IASA,OALA0F,GAEA3K,GAAAmC,EAAAwI,GAGAxI,EAzDA6I,CAAA7I,EAAA6C,GAEA,OACA,OAAAA,EAAAE,EAAA/C,GAEA,QACA5N,EAAA,KAiJA,IAAA0W,GAAAhY,EAAA,SAAAiY,EAAAC,EAAAC,EAAAC,GAEA,OA39DA,SAAAF,EAAAE,EAAA/N,EAAAgO,EAAAC,EAAAC,GAEA,IAAAzX,EAAAT,EAAAyG,EAAAoR,EAAAtR,EAAAwR,IAAA,WAAAtN,IACAzD,GAAAvG,IAAAQ,EAAA,GACA,IAAAuK,KAEA2M,GADA1X,EAAAuJ,EAAAvJ,EAAApB,IACAA,EACA+Y,EAAAF,EAAA3N,EAAA4N,GACAE,EAuCA,SAAA7M,EAAAjB,GAEA,IAAA8N,EAGA,QAAAvW,KAAAgI,GACA,CACA,IAAAwO,EAAAxO,GAAAhI,GAEAwW,EAAAjZ,KAEAgZ,SACAvW,GAAAwW,EAAAjZ,EAAAyC,EAAAyI,IAGAiB,EAAA1J,GAAAuI,GAAAiO,EAAA/N,GAGA,OAAA8N,EAzDAE,CAAA/M,EAAAjB,GAEA,SAAAA,EAAAjB,EAAAkP,GAGAJ,EAAAD,GADA1X,EAAAT,EAAAgY,EAAA1O,EAAA6O,IACA9Y,EAAAmZ,GACAjN,GAAAC,EAAA/K,EAAAjB,EAAAyY,EAAAE,IAKA,OAFA5M,GAAAC,EAAA/K,EAAAjB,EAAAyY,EAAAE,IAEAE,GAAiBA,YAw8DjBI,CACAZ,EACAE,EACAH,EAAAc,GACAd,EAAAe,GACAf,EAAAgB,GACA,SAAArO,EAAAsO,GACA,IAAAC,EAAAlB,EAAAmB,GAEAlK,EAAAkJ,EAAA,KAKAiB,EArFA,SAAAC,EAAAxB,GAIA,OAAAA,EAAAyB,SAEA,OAAApM,GAAA2K,EAAA0B,aAMA,OAAA1B,EAAAyB,SAEA,OAAApM,GAAA,IAQA,IAFA,IAAAsM,EAAAhW,EACAsM,EAAA+H,EAAA4B,WACA1Y,EAAA+O,EAAA3O,OAA2BJ,KAC3B,CACA,IAAA2Y,EAAA5J,EAAA/O,GAGAyY,EAAAlW,EAAAlD,EAAA8N,GAFAwL,EAAAC,KACAD,EAAAnT,OACAiT,GAGA,IAAAnM,EAAAwK,EAAA+B,QAAAC,cACAtM,EAAA/J,EACAgK,EAAAqK,EAAAlB,WAEA,IAAA5V,EAAAyM,EAAArM,OAA0BJ,KAE1BwM,EAAAjK,EAAA+V,EAAA7L,EAAAzM,IAAAwM,GAEA,OAAAlN,EAAA8M,GAAAE,EAAAmM,EAAAjM,GA+CA8L,CAAApK,GAEA,OA+DA,SAAAsJ,EAAAuB,GAEAA,EAAAvB,GAEA,IAAAxN,EAAA,EAEA,SAAAgP,IAEAhP,EAAA,IAAAA,EACA,GACAiP,GAAAD,GAAAD,EAAAvB,GAAA,GAGA,gBAAA0B,EAAAC,GAEA3B,EAAA0B,EAEAC,GACAJ,EAAAvB,GACA,IAAAxN,MAAA,KAEA,IAAAA,GAAAiP,GAAAD,GACAhP,EAAA,IArFAoP,CAAAlB,EAAA,SAAAV,GAEA,IAAA6B,EAAAlB,EAAAX,GACA3G,EAv5BA,SAAAnQ,EAAAC,GAEA,IAAAkQ,KAEA,OADAO,GAAA1Q,EAAAC,EAAAkQ,EAAA,GACAA,EAm5BAyI,CAAAjB,EAAAgB,GACAnL,EAAAiH,GAAAjH,EAAAmK,EAAAxH,EAAAjH,GACAyO,EAAAgB,QAoDAJ,IAJA,qBAAAM,sBACAA,qBAIA,qBAAAC,sBACAA,sBACA,SAAAtR,GAAwB,OAAAuR,WAAAvR,EAAA,UAiHxB,qBAAA4D,mBACA,qBAAAgE,eA2PA,IAmvCA4J,GAhhBA3V,GAnuBA4V,GAAA/a,EAAA,SAAAgb,EAAAxR,GAEA,OAAAH,EAAA,WAEA,IAAA4R,EAAAC,YAAA,WAAmCxR,GAAAF,IAA6BwR,GAChE,kBAAqBG,cAAAF,QAuCrBG,IAAwC5Y,EAAA,GACxC6Y,IAAsC7Y,EAAA,GAUtC8Y,GAAA,SAAAxZ,GACA,OAAAA,GAGAkB,GAAA,EACAF,GAAA,EAsBAyY,GAAAvX,EAIAjB,GAAA,EACAyY,GAAAtb,EACA,SAAAe,EAAAwa,EAAAnJ,GAEA,QACA,QAAAA,EAAA9P,EACA,OAAAiZ,EAEA,IAEAC,EAAApJ,EAAAjS,EAEAsb,EAAA1a,EACA2a,EAAAlb,EACAO,EANAqR,EAAArS,EACAqS,EAAAnS,EAQAO,EAAA8a,GAAAva,EAAAwa,EANAnJ,EAAA/R,IAQAU,EAAA0a,EACAF,EAAAG,EACAtJ,EAHAoJ,KAQAjZ,GAAA,SAAAoZ,GACA,OAAAnb,EACA8a,GACAtb,EACA,SAAAqC,EAAAqE,EAAAkF,GACA,OAAArL,EACA8a,GACA9Z,EAAAc,EAAAqE,GACAkF,KAEAjI,EACAgY,IAgBAC,IAAuCC,GAjFvC,EAiFuCha,EAAA8B,GACvCmY,GAAAhc,EACA,SAAAic,EAAAC,GACA,OACAC,GAAAF,EACAG,EAAA,EACAC,EAAAH,EACApa,GAjGAwa,EAiGAJ,EAhGAI,EACAxa,GAgGAC,EAAA+Z,IAlGA,IAAAQ,IAsGAC,GAAAvc,EACA,SAAAD,EAAAuc,GACA,IAAA1Q,EAAA0Q,EACA,OACAE,EAAA5Q,EAAA4Q,EACA1a,EAAA/B,EAAA6L,EAAA9J,GACA2a,EAAA7Q,EAAA6Q,EACAC,EAAA9Q,EAAA8Q,KAGAC,GAAA3c,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAIV2c,GAAA,SAAAN,GAGA,OAAA7b,EAAAkc,GAFAL,EAAAxc,EACAwc,EAAArc,IAGA4c,GAAAxY,EAEAyY,GAAA5c,EACA,SAAAe,EAAAwa,EAAA3P,GAEA,QACA,IAAAA,EAAA7L,EACA,OAAAwb,EAEA,IACAjY,EAAAsI,EAAA7L,EACA0b,EAAA1a,EACA2a,EAAAnb,EAAAQ,EAHA6K,EAAAhM,EAGA2b,GAEAxa,EAAA0a,EACAF,EAAAG,EACA9P,EAHAtI,KAQAwE,GAAA,SAAA8D,GACA,OAAApL,EAAAoc,GAAAvB,GAAA1X,EAAAiI,IAEAiR,GAAA3c,EACA,SAAA4c,EAAAvB,EAAAwB,EAAA1b,GACA,GAAAA,EAAAtB,EAEG,CACH,IAAAH,EAAAyB,EAAAzB,EACAod,EAAA3b,EAAAtB,EACA,GAAAid,EAAAjd,EAEI,CACJ,IAAAA,EAAAid,EAAApd,EACAqd,EAAAD,EAAAjd,EACA,GAAAkd,EAAAld,EAKK,CACL,IAAAE,EAAAgd,EAAArd,EACAsd,EAAAD,EAAAld,EACA,GAAAmd,EAAAnd,EAQM,CACN,IACAod,EAAAD,EAAAnd,EAMA,OAAAQ,EACAuc,EACAld,EACAW,EACAuc,EACA/c,EACAQ,EACAuc,EACA7c,EACAM,EAAAuc,EAhBAI,EAAAtd,EAEAmd,EAAA,IAAAvc,EACAoc,GACAE,EACAvB,EACAzT,GAAAqV,IAAA1c,EAAAoc,GAAAC,EAAAvB,EAAAwB,EAAA,EAAAI,OAdA,OAAA5c,EACAuc,EACAld,EACAW,EACAuc,EACA/c,EACAQ,EAAAuc,EAAA7c,EAAAsb,KAdA,OAAAhb,EACAuc,EACAld,EACAW,EAAAuc,EAAA/c,EAAAwb,IARA,OAAAhb,EAAAuc,EAAAld,EAAA2b,GALA,OAAAA,IAgDA6B,GAAApd,EACA,SAAA8c,EAAAvB,EAAAla,GACA,OAAAZ,EAAAoc,GAAAC,EAAAvB,EAAA,EAAAla,KAEAgc,GAAArd,EACA,SAAAH,EAAAyd,EAAAha,GACA,IAAA8Y,EAAAvc,EAAAyd,GACA,OAAAlB,EAAA9Z,EAIAgB,EAFA/C,EAAA8a,GADAe,EAAAxc,EACA0D,KAaAia,GARAzd,EACA,SAAAD,EAAAyD,GACA,OAAA9C,EACA4c,GACAC,GAAAxd,GACA8D,EACAL,IAEAka,CAAApC,IAIAqC,GAAA3d,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAEV2d,GAAA5d,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAeV4d,GAAAvC,GACAwC,GAAA9d,EACA,SAAAD,EAAA+B,GACA,OAAA/B,EAAA+B,KAEAic,GAAA,SAAAje,GACA,OAAS0C,EAAA,EAAA1C,MAETke,IAA8Bxb,EAAA,GAC9Byb,GAAAje,EACA,SAAAke,EAAAC,GACA,OAAAA,EAAA3b,GACA,OACA,OAAAwb,GACA,OAEA,OAAAD,GACAtd,EACAmd,GACAC,GAJAM,EAAAre,GAKAoe,IACA,OAEA,OAAAH,GACAtd,EAAAkd,GAFAQ,EAAAre,EAEAoe,IACA,OACA,OAAAH,IAjDSvb,EAAA,EAAA1C,EAkDToe,IACA,OACA,OAAAH,IAzCSvb,EAAA,EAAA1C,EA0CToe,IACA,OACA,OAAAH,IAzCSvb,EAAA,EAAA1C,EA0CToe,IACA,OACA,OAAAH,IAzCSvb,EAAA,EAAA1C,EA0CToe,IACA,OACA,OAAAH,IAzCSvb,EAAA,EAAA1C,EA0CToe,IACA,QACA,OAAAF,MAGAI,GAAApe,EACA,SAAAD,EAAAuc,GAGA,OAAA7b,EAAAV,EAFAuc,EAAAxc,EACAwc,EAAArc,KAGAoe,GAAA,SAAAC,GACA,WAAAA,EAAA9b,GAMA+b,GAAAve,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAOVue,GAAAte,EACA,SAAAiI,EAAApI,EAAA+B,GACA,OAAAqG,EACApI,EAAA+B,MAGA2c,GAn4HA,SAAAC,GAA4B,OAAAA,GAo4H5BC,GAAA3e,EACA,SAAAmF,EAAA2G,GACA,OAAApL,EACA4c,GACAtd,EACA,SAAA8B,EAAA0B,GACA,OAAA2B,EAAArD,GAAArB,EAAA8a,GAAAzZ,EAAA0B,OAEAK,EACAiI,KAEA8S,GAAA5e,EACA,SAAAD,EAAAyD,GACA,OAAA9C,EACA4c,GACAtd,EACA,SAAA8B,EAAA2Z,GACA,OAAAhb,EACA8a,GACAxb,EAAA+B,GACA2Z,KAEA5X,EACAL,KAEAqb,GAAA,SAAAvC,GAEA,OADAA,EAAArc,GAGA6e,GAAA9e,EACA,SAAA+e,EAAAjT,GAWA,OAAApL,EACA4c,GAXAtd,EACA,SAAA8B,EAAAwa,GACA,IAAA0C,EAAA1C,EAAAxc,EACAmf,EAAA3C,EAAArc,EACA,OAAA8e,EAAAjd,GAAAL,EACAhB,EAAA8a,GAAAzZ,EAAAkd,GACAC,GAAAxd,EACAud,EACAve,EAAA8a,GAAAzZ,EAAAmd,MAKAxd,EAAAoC,KACAiI,KAEAoT,GAAAlf,EACA,SAAAmf,EAAArT,GACA,IAAAsT,EAAApf,EACA,SAAAqf,EAAAC,GACA,GAAAD,EAAApf,EAEK,CACL,IAAAsf,EAAAF,EAAAvf,EACA0f,EAAAH,EAAApf,EACAwf,EAAAhf,EACAqe,GACAK,EAAAI,GACAC,GAGA,OAAA/e,EACA2e,EAFAK,EAAAxf,EAIAQ,EACA8a,GACA9Z,EAAA8d,EAPAE,EAAA3f,GAQAwf,IAhBA,OAAAtX,GAAAsX,KAmBA,OAAA7e,EAAA2e,EAAAtT,EAAAjI,KA2DA6b,GAAA1f,EACA,SAAAwD,EAAAC,GACA,OAAAA,EAAAxD,EAGAS,EAAA4c,GAAA/B,GAAA9X,EAAAD,GAFAA,IASAmc,GAAA,SAAAnc,GACA,OAAA9C,EACAoc,GACA9c,EACA,SAAAsc,EAAAlb,GACA,OAAAA,EAAA,IAEA,EACAoC,IAEAoc,GAAAxb,EAEAyb,GAAA3f,EACA,SAAA4f,EAAAC,EAAAjU,GAEA,QACA,GAAApJ,EAAAod,EAAAC,IAAA,EASA,OAAAjU,EARA,IAAAkU,EAAAF,EACAG,EAAAF,EAAA,EACAG,EAAAzf,EAAA8a,GAAAwE,EAAAjU,GACAgU,EAAAE,EACAD,EAAAE,EACAnU,EAAAoU,KAOAC,GAAAngB,EACA,SAAA8f,EAAAC,GACA,OAAArf,EAAAmf,GAAAC,EAAAC,EAAAlc,KAEAuc,GAAApgB,EACA,SAAAD,EAAAyD,GACA,OAAA9C,EACAkf,GACA7f,EACAU,EACA0f,GACA,EACAR,GAAAnc,GAAA,GACAA,KAuBA6c,GAAA9D,GArBA,SAAA+D,GACA,OAAA7C,IAjDA8C,EAoDA9f,EACA2f,GACApgB,EACA,SAAA+B,EAAAgD,GACA,OAAAtE,EACA2f,GACApgB,EACA,SAAA8B,EAAAkD,GACA,OAAAvD,EACAmb,GACAnb,EAAAK,EAAAC,IACAiD,KAEAD,KAEAiD,GAAAsY,IApIAE,EAkEA9f,EAAA4c,GAAAoC,GAAA7b,EAAA0c,GAjEAE,EAAAzgB,EACA,SAAA0gB,EAAAC,GACA,IAAAC,EAAAnf,EAAAif,EAAAC,GACA,WAAAC,EAAA9gB,EAAA0C,GAAA,IAAAoe,EAAA3gB,EAAAuC,GAGAX,EAFA+e,EAAA9gB,IACA8gB,EAAA3gB,EAAAH,KAMA+gB,EAAApgB,EACAke,GACAle,EAAA+d,GAAAH,GAAAQ,IACA2B,GACAM,EAAArgB,EACAme,GACA,SAAAmC,GACA,IAEAC,EAAAvf,EAFAsf,EAAAjhB,EACAihB,EAAA9gB,GAEA,OAAA+gB,EAAA/gB,MAAA+gB,EAAA/gB,MAMA8d,GACAtd,EAAA8d,GANAyC,EAAAlhB,EACAA,EACAkhB,EAAA/gB,EACAH,EACAA,IAIAke,IAGAvd,EACAye,GACAlf,EACA,SAAAsc,EAAAmD,GAGA,OAAAhf,EAAAggB,EAFAnE,EAAArc,EACAwf,EAAAxf,KAGA4gB,IACAI,EAAAxgB,EACAke,GACAle,EACA+d,GACA/d,EAAA+d,GAAAC,GAAAJ,IACAQ,IACA2B,GACAjd,EACA9C,EACAme,GACAR,GAAAH,IACAgD,GACAH,KAvDA,IAAAN,EACAC,EAWAI,EAIAC,EA2BAG,EAsBAV,IAsEAW,IAAwC1e,EAAA,IAIxC2e,GAAAnhB,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAEVmhB,GAAAlhB,EACA,SAAAJ,EAAAG,EAAAE,GACA,OAAUqC,EAAA,EAAA1C,IAAAG,IAAAE,OAGVkhB,GAAArhB,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAEVqhB,GAAAlhB,EACA,SAAA2E,EAAAC,EAAAuc,EAAAC,GACA,OAAUC,GAAAzc,EAAA0c,GAAAF,EAAAG,GAAAJ,EAAAK,GAAA7c,KAEV8c,IAAwCrf,EAAA,GACxCsf,GAAA9hB,EACA,SAAAqS,EAAAvQ,GACA,OAAArB,EACA4gB,GACAQ,GACAlhB,EAAA2gB,GAAAjP,EAAAuP,GAAAvP,EAAAoP,GAAA3f,EAAAuQ,EAAAlS,MAEA4hB,GAAAzc,EACA0c,GAAAhiB,EACA,SAAAmF,EAAA8c,GACA,gBAAA5P,GACA,IAAA6P,EAAAxhB,EAAAqhB,GAAA5c,EAAAkN,EAAApS,EAAAoS,EAAAvS,GACA,OAAA+B,EAAAqgB,GAAA,GAAAzhB,EACA0gB,IACA,EACA1gB,EAAAqhB,GAAAzP,EAAA4P,IAAApgB,EAAAqgB,GAAA,GAAAxhB,EACA0gB,IACA,EACA,GACKK,GAAA,EAAAthB,EAAAkS,EAAAlS,EAAAE,EAAAgS,EAAAhS,EAAAJ,EAAAoS,EAAApS,EAAA,EAAA2hB,GAAAvP,EAAAuP,GAAA,EAAA9hB,EAAAuS,EAAAvS,IAAwDY,EAC7D0gB,IACA,EACA,GACKK,GAAApP,EAAAoP,GAAA,EAAAthB,EAAAkS,EAAAlS,EAAAE,EAAAgS,EAAAhS,EAAAJ,EAAAiiB,EAAAN,GAAAvP,EAAAuP,GAAA9hB,EAAAuS,EAAAvS,OAGLqiB,GAAA,SAAAhd,GACA,OAAA1E,EAAAuhB,GAAA7c,EAAA+b,KAEAkB,GAAApiB,EACA,SAAAF,GACA,OAAAA,IAGAuiB,GAAAniB,EACA,SAAAe,EAAAqb,EAAAmD,GACA,IAAA6C,EAAAhG,EACAiG,EAAA9C,EACA,gBAAA+C,GACA,IAAAzB,EAAAuB,EAAAE,GACA,OAAAzB,EAAAve,EAGA,OAAA/B,EAAA0gB,GAFAJ,EAAAjhB,EACAgC,EAAAif,EAAA9gB,GAGA,IAAAwiB,EAAA1B,EAAAjhB,EACAA,EAAAihB,EAAA9gB,EAEA+gB,EAAAuB,EADAxB,EAAA5gB,GAEA,OAAA6gB,EAAAxe,EAAA,CACA,IAAAkgB,EAAA1B,EAAAlhB,EACAgC,EAAAkf,EAAA/gB,EACA,OAAAQ,EAAA0gB,GAAAsB,GAAAC,EAAA5gB,GAEA4gB,EAAA1B,EAAAlhB,EAAA,IAEA6iB,EAAA3B,EAAA7gB,EACA,OAAAO,EACA0gB,GACAqB,GAAAC,EACAjiB,EAAAQ,EAAAnB,EALAkhB,EAAA/gB,GAMA0iB,MASAC,GAJA5iB,EACA,SAAA6iB,EAAAC,GACA,OAAApiB,EAAA2hB,GAAAD,GAAAS,EAAAC,KAQAC,GALA,SAAAjjB,GACA,gBAAAuS,GACA,OAAA3R,EAAA0gB,IAAA,EAAAthB,EAAAuS,KAIA2Q,GAAAviB,EACAmiB,GACAG,GAAA,GACAZ,GACA,SAAAhiB,GACA,aAAAA,KAGA8iB,GAtjIA,SAAAC,GAEA,IAAA9d,EAAA8d,EAAA7d,WAAA,GACA,aAAAD,KAAA,MAIAA,EAFA,MAAAA,EAAA,OAAA8d,EAAA7d,WAAA,gBAkjIA8d,GAAA,SAAAC,GACA,IAAAhe,EAAA6d,GAAAG,GACA,OAAAhe,GAAA,QAAAA,GAUAie,GAAA,SAAAD,GACA,OATA,SAAAA,GACA,IAAAhe,EAAA6d,GAAAG,GACA,WAAAhe,MAAA,IAOAke,CAAAF,IALA,SAAAA,GACA,IAAAhe,EAAA6d,GAAAG,GACA,OAAAhe,GAAA,QAAAA,EAGAme,CAAAH,IAAAD,GAAAC,IAGAI,GAAAljB,EACA,SAAA6E,EAAAnE,EAAA+D,EAAAC,EAAAwd,GAEA,QACA,IAAAN,EAAAxhB,EAAAqhB,GAAA5c,EAAAnE,EAAAwhB,EAAA1iB,GACA,GAAA+B,EAAAqgB,GAAA,GACA,OAAAxhB,EACA0gB,GACA1e,EAAA8f,EAAAviB,EAAAe,GAAA,EACA,GACMygB,GAAAzc,EAAA7E,EAAAqiB,EAAAriB,EAAAE,EAAAmiB,EAAAniB,EAAAJ,EAAAe,EAAA4gB,GAAA7c,EAAAjF,EAAA0iB,EAAA1iB,IAEN+B,EAAAqgB,GAAA,IAMA/c,EALAA,EAMAnE,GALA,EAMA+D,GALA,EAMAC,EALA,EAMAwd,EALAA,IAaArd,EALAA,EAMAnE,EALAkhB,EAMAnd,EALAA,EAMAC,GALA,EAMAwd,EALAA,MAoBAiB,GAAAzjB,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAWVyjB,GAAA7e,EAoBA8e,GAAA,SAAAnd,GACA,OApBA,SAAA8V,GACA,IAAA9V,EAAA8V,EAAAxc,EACAmiB,EAAA3F,EAAArc,EACA2jB,IANA,KAMApd,GACA,gBAAA6L,GACA,IAAAoN,EAAA7e,EAAA8iB,GAAAld,EAAA6L,EAAApS,EAAAoS,EAAAuP,GAAAvP,EAAAoP,GAAApP,EAAAvS,GACAoiB,EAAAzC,EAAA3f,EACA+jB,EAAApE,EAAAxf,EACA6jB,EAAArE,EAAAtf,EACA,OAAA0B,EAAAqgB,GAAA,GAAAzhB,EACA0gB,IACA,EACA1gB,EAAAqhB,GAAAzP,EAAA4P,IAAAvhB,EACA0gB,GACAwC,EACA,GACInC,GAAAqC,EAAA3jB,EAAAkS,EAAAlS,EAAAE,EAAAgS,EAAAhS,EAAAJ,EAAAiiB,EAAAN,GAAAiC,EAAA/jB,EAAAuS,EAAAvS,KAIJikB,CA9BA,SAAAvd,GACA,OAAA/F,EACAgjB,GACAjd,GATShE,EAAA,EAAA1C,EAUT0G,IA2BAwd,CAAAxd,KAEAyd,GAAAxjB,EACAmiB,GACAniB,EACAmiB,GACAniB,EACAmiB,GACAG,GAAA,GACAY,GAAA,uBArDAxe,GAuDA,SAAAhF,GACA,OAAAkjB,GAAAljB,IAAA,MAAAA,GAvDA,SAAAkS,GACA,OAAAzR,EAAA4iB,GAAAre,GAAAkN,EAAApS,EAAAoS,EAAAuP,GAAAvP,EAAAoP,GAAApP,MAwDA2Q,IAEAkB,GAAA5I,GAEA6I,GAAA7I,GACA8I,GAAAhkB,EACA,SAAAuM,EAAA0X,EAAAC,EAAAC,GACA,OAAU/H,EAAA8H,EAAAxiB,EAAAyiB,EAAA9H,EAAA9P,EAAA+P,EAAA2H,KAEVG,GAAA,SAAA1Y,GACA,OAAAA,EAAA7L,EAGA8d,GAFAjS,EAAAhM,GAIAke,IAGAyG,GAAAzkB,EACA,SAAA0kB,EAAAC,GACA,OAAAA,EAAAniB,EAIAkiB,EAHAC,EAAA7kB,IAMA8kB,GAAA5kB,EACA,SAAA6kB,EAAAvE,GACA,IAAA+D,EAAA1E,GACAlf,EACAgkB,GACA5gB,EACA2gB,GAAAlE,KACAgE,EAAA3E,GAAAW,GACA,OAAA3f,EACAyjB,GACAS,EACAV,GAAAE,GACAH,GAAAI,GACAhE,KAGAwE,IAAsCtiB,EAAA,GACtCkF,GAAA,SAAA5H,GACA,OAAS0C,EAAA,EAAA1C,MAETgH,GAAA,SAAAhH,GACA,OAAS0C,EAAA,EAAA1C,MAETilB,GAAAnf,EACAof,GAAAhf,EACAif,GAAA5e,EAEA6e,GAAA,SAAA5I,GAEA,OADAA,EAAAxc,GAGAqlB,GAAAnlB,EACA,SAAAkiB,EAAA7P,GACA,OAAUoP,GAAApP,EAAAoP,IAAAS,EAAA7P,EAAApS,GAAAE,EAAAkS,EAAAlS,EAAAE,EAAAgS,EAAAhS,EAAAJ,EAAAiiB,EAAAN,GAAAvP,EAAAuP,GAAA9hB,EAAAuS,EAAAvS,KAEVslB,GAAAzf,EACA0f,GAAA3f,EACA4f,GAAAtlB,EACA,SAAAgB,EAAAukB,GACA,GAAA7kB,EAAA2kB,GAAA,IAAArkB,EAAAukB,IAAA7kB,EAAA2kB,GAAA,GAAArkB,EAAAukB,GAAA,CACA,IAAAC,EAAAxkB,EAAA,EACAykB,EAAA/kB,EAAA2kB,GAAA,GAAAG,EAAAD,IAAA7kB,EAAA2kB,GAAA,GAAAG,EAAAD,GAAAC,EAAA,EAAAA,EACAtD,EAAAzhB,EAAA2kB,GAAAK,EAAAF,GACA,OAAA1jB,EAAA4jB,EAAAvD,QAEA,OAAAlhB,IAGA0kB,GAAA1lB,EACA,SAAAgB,EAAAukB,GACA,OAAA9kB,EACA6kB,GADA5kB,EAAA2kB,GAAA,GAAArkB,EAAAukB,GAEA9kB,EAAA2kB,GAAApkB,EAAA,EAAAukB,GACAvkB,EAAAukB,KAEAI,GAAArlB,EACA,SAAAslB,EAAAvX,EAAAwX,EAAAvJ,EAAAjK,GACA,IAAAyT,EAAAxJ,EAAAxc,EACA+C,EAAAyZ,EAAArc,EACA,OAAAoO,EAAA7L,EAEA,OAAA/B,EACA0gB,IACA,EACA1gB,EAAAqhB,GAAAzP,EAJAhE,EAAAvO,IAMA,IAAAimB,EAAA1X,EAAAvO,EACA,OAAA+B,EAAAgkB,EAAAC,GAAArlB,EACA0gB,GACAze,EAAA2P,EAAApS,EAAA4lB,GAAA,EACAplB,EAAAqhB,GAAAzP,EAAAuT,IAAAllB,EACA0gB,IACA,EACA2E,EAAAljB,GACApC,EAAA0kB,GAAAW,EAAAzT,MAGA2T,GAAA5lB,EACA,SAAA2E,EAAAC,EAAAlD,EAAAmkB,GACA,OAAAxlB,EACA4gB,GACAQ,GACAlhB,EAAA2gB,GAAAvc,EAAAC,EAAAlD,EAAAmkB,MAEAC,GAAA1lB,EACA,SAAAolB,EAAA3D,EAAAkE,EAAAC,EAAAC,EAAAhU,GACA,IAAAiU,EAAAD,EAAAvmB,EACAymB,EAAA9lB,EAAAilB,GAAAY,EAAAjU,EAAAvS,GACA,GAAAymB,EAAA,EACA,OAAA9lB,EACA0gB,IACA,EACAxgB,EAAAqlB,GAAA3T,EAAAuP,GAAAvP,EAAAoP,IAAA8E,EAAAlU,EAAApS,GAAA2lB,EAAAvT,EAAAlS,IAEA,GAAA0B,EAAAwQ,EAAApS,EAAAsmB,GACA,OAAA9lB,EACA0gB,IACA,EACA1gB,EAAAqhB,GAAAzP,EAAA4P,IAEA,GAAApgB,EAAAykB,EAAAC,GACA,OAAA3lB,EAAA+kB,GAAAC,EAAAO,EAAA9T,EAAApS,EAAAomB,EAAAhU,GAEA,OAAA+T,EAAA5jB,EAEA,OAAA/B,EACA0gB,IACA,EACA1gB,EAAAqhB,GAAAzP,EAAAuT,IAEA,IAAAG,EAAAK,EAAAtmB,EACA2f,EAh+HA,SAAApN,GAGA,OAAAA,EAAA7Q,QAAA,UAAAglB,KAAAnU,GAEA,OAAA2L,GAEA,IAAAnb,GAAAwP,EAEA,OAAAxP,MAAAkb,GAAAlb,GAAAmb,GAu9HAyI,CACA/lB,EAAAukB,GAAA5S,EAAApS,EAAAsmB,EAAAlU,EAAAvS,IACA,WAAA2f,EAAAjd,EACA/B,EACA0gB,IACA,EACA1gB,EAAAqhB,GAAAzP,EAAAuT,IAGAllB,EACA0gB,IACA,EACA2E,EAJAtG,EAAA3f,GAKAW,EAAA0kB,GAAAoB,EAAAlU,MA+DAqU,GAAAjmB,EAbAT,EACA,SAAAiiB,EAAA2D,GACA,OA7CAzlB,GA+CAwmB,GAAAjf,GAAAke,GACAgB,GAAA3E,EACA4E,GAAAnf,GAAAke,GACAkB,GAAApf,GAAAke,GACAmB,GAAAjgB,GAAAwU,IACA0L,GAAApB,EACAqB,GAAAvf,GAAAke,IApDA,SAAAvT,GACA,GAAA3R,EAAA2kB,GAAA,GAAAhT,EAAApS,EAAAoS,EAAAvS,GAAA,CACA,IAAAonB,EAAA7U,EAAApS,EAAA,EACAknB,EAAAD,EAAA,EACA,OAAAxmB,EAAA2kB,GAAA,IAAA6B,EAAA7U,EAAAvS,GAAAc,EACA+kB,GACAxlB,EAAA6mB,GACA7mB,EAAA2mB,GACAK,EACA1mB,EAAAukB,GAAAmC,EAAA9U,EAAAvS,GACAuS,GAAA3R,EAAA2kB,GAAA,IAAA6B,EAAA7U,EAAAvS,GAAAc,EACA+kB,GACAxlB,EAAA6mB,GACA7mB,EAAA8mB,GACAE,EACAzmB,EAAAqkB,GAAA,EAAAoC,EAAA9U,EAAAvS,GACAuS,GAAA3R,EAAA2kB,GAAA,GAAA6B,EAAA7U,EAAAvS,GAAAc,EACA+kB,GACAxlB,EAAA6mB,GACA7mB,EAAAwmB,GACAQ,EACAzmB,EAAAqkB,GAAA,EAAAoC,EAAA9U,EAAAvS,GACAuS,GAAAxR,EACAqlB,GACA/lB,EAAA6mB,GACA7mB,EAAAymB,GACAzmB,EAAA4mB,GACA5mB,EAAA0mB,GACAplB,EAAAylB,EAAA,GACA7U,GAEA,OAAAxR,EACAqlB,GACA/lB,EAAA6mB,GACA7mB,EAAAymB,GACAzmB,EAAA4mB,GACA5mB,EAAA0mB,GACAnmB,EAAAqkB,GAAA,GAAA1S,EAAApS,EAAAoS,EAAAvS,GACAuS,IAvCA,IAAAlS,IAwDA2kB,OAKAsC,GAJApnB,EACA,SAAAqnB,EAAAC,GACA,OAAA5mB,EAAA2hB,GAAAvE,GAAAuJ,EAAAC,KAGAC,GAAA9mB,EACA2mB,GACA3mB,EACAmiB,GACAG,GAAAzH,IACAqI,GAAA,UACAljB,EAAAmiB,GAAA8D,GAAA1D,KACAwE,GAAA,SAAA1nB,GACA,OAAS0C,EAAA,EAAA1C,MAET2nB,GAAA,SAAA3nB,GACA,OAAS0C,EAAA,EAAA1C,MAuBT4nB,GArBA1nB,EACA,SAAAiB,EAAAqb,GACA,IAAAqL,EAAArL,EACA,gBAAAkG,GACA,IAAA/C,EAAAkI,EAAAnF,GACA,GAAA/C,EAAAjd,EAYA,OAAA/B,EAAA0gB,GAFA1B,EAAA3f,EACA2f,EAAAxf,GAVA,IAEA2nB,EAAAnI,EAAAtf,EACA,OAAAO,EACA0gB,GAJA3B,EAAA3f,EAMAmB,EALAwe,EAAAxf,GAMA2nB,MAeAC,GAAA,SAAAC,GACA,OAAAA,EAAAtlB,GANSA,EAAA,EAAA1C,EAUTgoB,EAAAhoB,IAPS0C,EAAA,EAAA1C,EAITgoB,EAAAhoB,IAOAioB,GAAA3nB,EACA,SAAAuM,EAAAvB,EAAA9B,EAAAkZ,GAEA,QACA,IAEA/C,EAFAnW,EAAA8B,EAEAuc,CAAAnF,GACA,GAAA/C,EAAAjd,EAsBA,OAFAigB,EAAAhD,EAAA3f,EAEAW,EAAA0gB,GAAAxU,GAAA8V,EADAhD,EAAAxf,GApBA,IAAAwiB,EAAAhD,EAAA3f,EACAgoB,EAAArI,EAAAxf,EACA2nB,EAAAnI,EAAAtf,EACA,GAAA2nB,EAAAtlB,EAaA,OAAA9B,EAAA0gB,GAAAzU,GAAA8V,EADAqF,EAAAhoB,EACA8nB,GAPAjb,EAJAA,GAAA8V,EAKArX,EANA0c,EAAAhoB,EAOAwJ,EAJAA,EAKAkZ,EAJAoF,KAiBAI,GAAAhoB,EACA,SAAAoL,EAAA9B,GACA,gBAAA+I,GACA,OAAA1R,EAAAonB,IAAA,EAAA3c,EAAA9B,EAAA+I,MAGA4V,GAAAjoB,EACA,SAAAoL,EAAA9B,GACA,OAAA7I,EACAunB,GACA5c,EACA,SAAAiH,GACA,OAAA5R,EACAinB,GACAG,GACAve,EAAA+I,QAGA6V,GAAAloB,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAEVkoB,GAAAjoB,EACA,SAAAsiB,EAAAjW,EAAA6b,GACAC,EACA,QACA,GAAAD,EAAAnoB,EAEI,CACJ,IACAqoB,EAAAF,EAAAnoB,EACAwf,GAAAkI,EAFAS,EAAAtoB,GAEA0iB,GACA,GAAA/C,EAAAjd,EAGK,CACL,IAAAslB,EAEAhmB,GAFAgmB,EAAArI,GAEAxf,EACA,GAFA6nB,EAAAhoB,EAGA,OAAAgoB,EAKAtF,EAHAA,EAIAjW,EAHA9L,EAAAynB,GAAA3b,EAAAzK,GAIAsmB,EAHAE,EAIA,SAAAD,EAdA,OADA5I,EANA,OAAAhf,EAAA0gB,IAAA,EAAA5U,MAgCAgc,GALA,SAAAH,GACA,gBAAA/V,GACA,OAAA3R,EAAAynB,GAAA9V,EAAAwP,GAAAuG,KAIAI,GAAA,SAAA1N,GAqBA,OAAAra,EAAAwnB,GAAApkB,EApBA,SAAA4X,GACA,OAAA8M,GACAtkB,GAEAxD,EACA2mB,GACArE,GACA,SAAAjjB,GACA,OAAA2nB,GACAhnB,EAAA8a,GAAAzb,EAAA2b,MAEAX,GACAra,EACAinB,GACAtF,GACAoF,GACAxf,GAAAyT,KACAsH,GAAA,UAUA0F,GAAA,SAAA3oB,GACA,OAAS0C,EAAA,EAAA1C,MAaT4oB,GAAA1oB,EACA,SAAAD,EAAA4kB,GACA,OAAAA,EAAAniB,EAKAwb,GAHAD,GACAhe,EAFA4kB,EAAA7kB,MAqCA6oB,GA7BA3oB,EACA,SAAAsJ,EAAAgT,GACA,IAAAgG,EAAAhG,EACA,gBAAAkG,GACA,IAAA/C,EAAA6C,EAAAE,GACA,OAAA/C,EAAAjd,EAGA,OAAA/B,EAAA0gB,GAFA1B,EAAA3f,EACAgC,EAAA2d,EAAAxf,GAGA,IAAAwiB,EAAAhD,EAAA3f,EAEA8nB,EAAAnI,EAAAtf,EAGA6gB,EAFA1X,EAFAmW,EAAAxf,EAIAsiB,CAAAqF,GACA,OAAA5G,EAAAxe,EAAA,CACA,IAAAkgB,EAAA1B,EAAAlhB,EACAgC,EAAAkf,EAAA/gB,EACA,OAAAQ,EAAA0gB,GAAAsB,GAAAC,EAAA5gB,GAKA,OAHA4gB,EAAA1B,EAAAlhB,EAGAY,EAAA0gB,GAAAqB,GAAAC,EAFA1B,EAAA/gB,EACA+gB,EAAA7gB,MAOAyoB,GAAA5oB,EACA,SAAAiB,EAAAqb,GACA,IAAAqL,EAAArL,EACA,gBAAAkG,GACA,IAAA/C,EAAAkI,EAAAnF,GACA,OAAA/C,EAAAjd,EAGA,OAAA/B,EAAA0gB,GAFA1B,EAAA3f,EACA2f,EAAAxf,GAGA,IACAH,EAAA2f,EAAAxf,EACA2nB,EAAAnI,EAAAtf,EACA,OAAAO,EACA0gB,GAJA3B,EAAA3f,EAMAW,EACAQ,EACAP,EAAAukB,GAAAzC,EAAAviB,EAAA2nB,EAAA3nB,EAAAuiB,EAAA1iB,GACAA,GACA8nB,MAuBAiB,GAAApoB,EACAkoB,GACA,SAAAtoB,GACA,OAAAI,EACAgkB,IAhBA3iB,GAFSU,EAAA,GAAA1C,EAmBT,mBAhBA,SAAAuS,GACA,OAAA5R,EACA0gB,IACA,EACA1gB,EAAAqhB,GAAAzP,EAAAvQ,MAaArB,EACAioB,GACA3F,GA/1IA,SAAAvc,GAMA,IAJA,IAAAV,EAAA,EACAgjB,EAAAtiB,EAAAnB,WAAA,GACAiB,EAAA,IAAAwiB,GAAA,IAAAA,EAAA,IAEA1nB,EAAAkF,EAAoBlF,EAAAoF,EAAAhF,SAAgBJ,EACpC,CACA,IAAAgE,EAAAoB,EAAAnB,WAAAjE,GACA,GAAAgE,EAAA,OAAAA,EAEA,OAAA4Y,GAEAlY,EAAA,GAAAA,EAAAV,EAAA,GAGA,OAAAhE,GAAAkF,EACA0X,GACAD,GAAA,IAAA+K,GAAAhjB,KA80IAijB,CAAA1oB,KAbA,IARAyB,IAPAgZ,GA+BAra,EACAmiB,GACAG,GAAA,GACAZ,GAAAgB,KAjCA1iB,EAAAmoB,GAAAxG,GAAAtH,MAmGAkO,GAAAR,GAjEAD,GACAtkB,GAEAxD,EACAmiB,GACAG,IAjHwCvgB,EAAA,IAkHxCmhB,GAAA,OACAljB,EACAmiB,GACAG,IApH4CvgB,EAAA,IAqH5CmhB,GAAA,OACAljB,EACA2mB,GACArE,GA5HA,SAAAjjB,GACA,OAAS0C,EAAA,EAAA1C,OA4HTW,EACAmiB,GACA8D,GACAvE,GACA,SAAAhiB,GACA,YAAAA,MAEAM,EACAmiB,GACAG,GACA0F,GAAA,IACA9E,GAAA,OACAljB,EACAmiB,GACAG,GACA0F,GAAA,IACA9E,GAAA,OACAljB,EACAmiB,GACAG,GACA0F,GAAA,IACA9E,GAAA,OACAljB,EACAmiB,GACAG,GACA0F,GAAA,IACA9E,GAAA,OACAljB,EACAmiB,GACAG,IA9J4CvgB,EAAA,IA+J5CmhB,GAAA,OACAljB,EACAmiB,GACAG,IAxJ6CvgB,EAAA,IAyJ7CmhB,GAAA,OACAljB,EACAmiB,GACAG,IA3J8CvgB,EAAA,IA4J9CmhB,GAAA,OACAljB,EACAmiB,GACAG,IAjKyCvgB,EAAA,IAkKzCmhB,GAAA,OACAljB,EACA2mB,GACA3mB,EACAmiB,GACAG,GApKA,SAAAjjB,GACA,OAAS0C,EAAA,EAAA1C,OAoKT6jB,GAAA,MACAkF,QA2BAI,GAAAxoB,EAxBAT,EACA,SAAA8a,EAAAoO,GAqBA,OAAAzoB,EAAAwnB,GAAApkB,EApBA,SAAA4X,GACA,OAAA8M,GACAtkB,GAEAxD,EACA2mB,GACArE,GACA,SAAAjjB,GACA,OAAA2nB,GACAhnB,EAAA8a,GAAAzb,EAAA2b,MAEAhb,EAAAmiB,GAAA9H,EAAAoO,IACAzoB,EACAinB,GACAtF,GACAoF,GACAxf,GAAAyT,KACAsH,GAAA,WAKAiG,GAAAhG,IACAmG,GAAA1oB,EACA2mB,GACA3mB,EACA2mB,GACA3mB,EACAmiB,GACAG,GAAA6B,IACAX,IACAsD,IACA0B,IACAG,GAAA3oB,EACA2mB,GACA3mB,EACAmiB,GACAG,GAAAzH,IACA0H,IACAwF,GAAAW,KACAE,GAAArpB,EACA,SAAAD,EAAAmB,GACA,OAAAA,EAAAsB,EAKAkF,GACA3H,EAFAmB,EAAApB,IAFAgH,GADA5F,EAAApB,KAQAwpB,GAAA,WACA,+BAEAC,GAAArpB,EACA,SAAA6E,EAAAC,EAAAuc,GACA,OAAUE,GAAAzc,EAAA2c,GAAAJ,EAAAK,GAAA7c,KAEVykB,GAAA,SAAA7c,GACA,OAAAjM,EAAA6oB,GAAA5c,EAAAiV,GAAAjV,EAAA8U,GAAA9U,EAAAgV,KAEA8H,GAAAzpB,EACA,SAAAuM,EAAAT,GACA4d,EACA,OACA,OAAAnd,EAAA/J,GACA,OACA,OAAAsJ,EACA,OACA,IACAhK,EAAAyK,EAAAtM,EAGAsM,EAJAA,EAAAzM,EAKAgM,EAFArL,EAAA8a,GAAAzZ,EAAAgK,GAGA,SAAA4d,EACA,QACA,IACAC,EAAApd,EAAAtM,EAGAsM,EAJAA,EAAAzM,EAKAgM,EAFArL,EAAAgpB,GAAAE,EAAA7d,GAGA,SAAA4d,KAIAE,GAAA5pB,EACA,SAAAsc,EAAAiJ,GACA,IACA9F,EADAnD,GAEImF,GAAA,EAAAthB,EAAA0D,EAAAxD,EAAA,EAAAJ,EAAA,EAAA2hB,GAAA,EAAA9hB,EAAAylB,IACJ,OAAA9F,EAAAjd,EAKAkF,GACAjH,EAAAgpB,GAFAhK,EAAAxf,EAEA4D,IAJAiD,GADA2Y,EAAAxf,KAQA4pB,GAAA7pB,EACA,SAAA8a,EAAAgP,GACA,IAAAxN,EAAA7b,EAAAmpB,GAAA9O,EAAAgP,GACA,OAAAxN,EAAA9Z,EAKAkF,GACAjH,EAAAme,GAAA4K,GAFAlN,EAAAxc,IAFAgH,GADAwV,EAAAxc,KAgCAiqB,GAAAtpB,EACA+d,GACA4B,GAAApE,IAZA,SAAAgO,GACA,IATA9oB,EASA+oB,EAfA,SAAAD,GACA,OAAAvpB,EACA4oB,GACAC,GACA7oB,EAAAopB,GAAAT,GAAAY,IAWAE,CAAAF,GACA,OAAAvpB,EACAgkB,GACA5gB,EACApD,EACAioB,GACA9J,GAAAyB,KAfAnf,EAgBA+oB,GAfAznB,EAIAwb,GAFAD,GADA7c,EAAApB,OAqBA2H,GAAA,SAAAvG,GACA,OAAAA,EAAAsB,GAOA2nB,GAAA/pB,EACA,SAAAN,EAAAG,EAAAE,EAAAE,GACA,OAAUmC,EAAA,EAAA1C,IAAAG,IAAAE,IAAAE,OAEV+pB,GAAA9lB,EAEA+lB,GAAArqB,EACA,SAAA6F,EAAAykB,GACA,OAAA3lB,EAAA2lB,GAAA3lB,EAAAkB,KAGA0kB,GAAAH,GACA3pB,EAAA4pB,GAAA,EAbA,KAcAG,MACAC,GAAA9pB,EAAAwpB,GAAA,EAAAI,GAAAC,OAOAE,GAAArpB,EACAspB,GAAA3qB,EACA,SAAA4qB,EAAAnP,GAEA,QACA,IAAAa,EAAA7b,EAAAiqB,GA3BA,GA2BAE,GAEAC,EAAAvO,EAAArc,EACA6qB,EAAArqB,EACA8a,IAXS/Y,EAAA,EAAA1C,EAQTwc,EAAAxc,GAKA2b,GACA,IAAAoP,EAAA5qB,EACA,OAAA+H,GAAA8iB,GAIAF,EAFAC,EAGApP,EAFAqP,KAOAC,GAAA/qB,EACA,SAAAgrB,EAAAC,GAEA,QACA,IAAAC,EAAAd,GAAAa,EAjDA,IAkDA,OAAAC,EACA,OAAAzqB,EAAAiqB,GAnDA,GAmDAM,GAAAlrB,EAIAkrB,EAFAvqB,EAAAkqB,GAAAK,EAAAnnB,GAGAonB,EAFAC,KAOAC,GAAA1mB,EACA2mB,GAAAprB,EACA,SAAA8B,EAAAC,GACA,OAAAW,EAAAZ,EAAAC,GAAA,EAAAD,EAAAC,IAGAspB,GA9zLA,SAAA1iB,GAEA,OAAAA,EAAAnH,QA6zLA8pB,GAAAtrB,EACA,SAAAurB,EAAAC,GACA,GAAAA,EAAAjrB,EAOG,CACH,IAAAkrB,EA9EA,GA8EAD,EAAAjrB,EACA8B,EAAA8oB,GACA1qB,EAAA4pB,GAhFA,GAgFAoB,EAAA,IACAC,EAAAH,EAAAvjB,GAAAwjB,EAAApjB,GAAAojB,EAAApjB,EACAujB,EAAAlrB,EAAAsqB,GAAAW,EAAAF,EAAAjrB,GACA,OAAAI,EACAwpB,GACAkB,GAAAG,EAAArjB,GAAAsjB,EACAhrB,EAAA2qB,GAAA,EAAA/oB,EAAAkoB,IACAoB,EACAH,EAAArjB,GAjBA,OAAAxH,EACAwpB,GACAkB,GAAAG,EAAArjB,GACAoiB,GACAC,GACAgB,EAAArjB,KAgBAyjB,GAAA9qB,EACA+qB,GAAAvrB,EACA,SAAA0c,EAAA8O,EAAApjB,EAAAsiB,EAAAe,GAEA,QACA,GAAAD,EAAA,EACA,OAAArrB,EACA6qB,IACA,GACMljB,EAAA4iB,EAAAzqB,EAAAmI,EArGN,GAqGM,EAAAP,EAAA4jB,IAEN,IAAAC,GAtFSxpB,EAAA,EAAA1C,EAuFTY,EAAAkrB,GAxGA,GAwGAE,EAAA9O,IAMAA,EALAA,EAMA8O,GA/GA,GAgHApjB,EALAA,EAMAsiB,EALAvqB,EAAA8a,GAAAyQ,EAAAhB,GAMAe,EALAA,KAWAjjB,GAAA9I,EACA,SAAA0I,EAAAsU,GACA,GAAAtU,EAAA,EAEG,CACH,IAAAujB,EAAAvjB,EA7HA,GAgIA,OAAA9H,EAAAirB,GAAA7O,EADAtU,EAAAujB,EA/HA,GAgIAvjB,EAAA7E,EAFAnD,EAAAkrB,GAAAK,EAAAvjB,EAAAujB,EAAAjP,IAHA,OAAAyN,KAQAjiB,GAAAxI,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAEV0H,GAAA3H,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAEV4H,GAAA7H,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAEVsI,GAAA,SAAAzI,GACA,OAAS0C,EAAA,EAAA1C,MAMTosB,GA9tJA,SAAA5B,GAEA,OAAAA,EAAA,IA6tJA6B,GAAAnsB,EACA,SAAAkG,EAAAkmB,GACA,OAAA3rB,EACAwF,EACAC,EAlxKA,SAAA1C,GAEA,QAAAW,KAAmBX,EAAAvD,EAAMuD,IAAAvD,EAEzBkE,EAAA7B,KAAAkB,EAAA1D,GAEA,OAAAqE,EA6wKAkoB,CAAAD,MAuHAE,GADAzgB,GACAhI,GACA0oB,GAAA9qB,GAEA+qB,EAAAzC,GA9RA,4sxBA+RApe,EAAA0P,IAEAiR,IACAG,GAAA,SAAA3sB,GACA,OAAS0C,EAAA,EAAA1C,MAET4sB,GAAA1sB,EACA,SAAAD,EAAAuc,GACA,IACAva,EAAAua,EAAArc,EACA,OAAAQ,EACAkc,GACA5c,EAJAuc,EAAAxc,GAKAiC,KAEA4qB,GAAA3sB,EACA,SAAAD,EAAAuc,GAGA,OAAA7b,EACAkc,GAHAL,EAAAxc,EAKAC,EAJAuc,EAAArc,MAMA2sB,GAAA5sB,EACA,SAAA6sB,EAAA3O,GACA,OAAA2O,GACA,OACA,OAAApsB,EACAksB,GACA9P,GAAA,GACAqB,GACA,OACA,OAAAzd,EACAksB,GACA,SAAA5qB,GACA,OAAAA,EAAA,GAEAmc,GACA,OACA,OAAAzd,EACAisB,GACA,SAAA5qB,GACA,OAAAA,EAAA,GAEAoc,GACA,QACA,OAAAzd,EACAisB,GACA7P,GAAA,GACAqB,MAGA4O,GAAA5sB,EACA,SAAAJ,EAAAG,EAAAE,GACA,OAAUqC,EAAA,EAAA1C,IAAAG,IAAAE,OAEV4sB,GAAA/sB,EACA,SAAAD,EAAAuc,GAIA,OAAA5b,EACAosB,GAJAxQ,EAAAxc,EACAwc,EAAArc,EAMAF,EALAuc,EAAAnc,MAcA6sB,GAAAhtB,EACA,SAAAD,EAAAuc,GAEA,OAAAnZ,EADAmZ,GAIAva,EAAAhC,EAJAuc,EAIAva,OAGAkrB,GAAAD,GACApO,GAjBA,SAAAsO,GAEA,OAAAzsB,EACAssB,GACAH,GAHAM,EAAAjtB,GAIAitB,MA0BAC,GAAA,SAAA7Q,GAEA,OANA,SAAAA,GAEA,OADAA,EACAE,EAIA4Q,CADA9Q,EAAAD,IAOAgR,GAAA,SAAA/Q,GAEA,OANA,SAAAA,GAEA,OADAA,EACAI,EAIA4Q,CADAhR,EAAAD,IAGAkR,GAAAvtB,EACA,SAAAwtB,EAAA1hB,GAEA,QACA,IAAAA,EAAA7L,EACA,SAEA,IACAuD,EAAAsI,EAAA7L,EACA,GAAAutB,EAFA1hB,EAAAhM,GAGA,SAIA0tB,EAFAA,EAGA1hB,EAFAtI,KAQAiqB,GAAAztB,EACA,SAAA8B,EAAA0B,GACA,OAAA/C,EACA8sB,GACA,SAAAztB,GACA,OAAA+B,EAAA/B,EAAAgC,IAEA0B,KAEAkqB,GAAAxtB,EACA,SAAAoc,EAAAmD,EAAAsB,GACA,IACA3Y,EAAAqX,EAEA1d,EAAAgf,EAAA9gB,EACA,OAAAQ,EACAgtB,GAHA1M,EAAAjhB,EAKAW,EAAA0f,GAAA,EAPA7D,EAOA,KAAA7b,EACAgtB,GACA1rB,EACAtB,EAAA0f,GAAA,EAAA/X,EAAA,MAEAulB,GAAA,SAAArR,GAEA,OADAA,EAAAnc,GAGAytB,GAAA5tB,EACA,SAAAqkB,EAAAC,GACA,OAAA0I,GACArO,GACAle,EACA+d,GACA/d,EAAAitB,GAAArJ,EAAAC,GACAqJ,QAeAE,GAAA,SAAAhB,GACA,OAAAA,GACA,OACA,SACA,OACA,SACA,OACA,SACA,QACA,WAGAiB,GAAA,SAAAjB,GACA,OAAAA,GACA,OACA,SACA,OACA,SACA,OACA,SACA,QACA,WAGAkB,GAAA,SAAAlB,GACA,OAAAA,GACA,OACA,SACA,OACA,SACA,OACA,SACA,QACA,WAuBAmB,GAAA9tB,EACA,SAAAge,EAAA2O,EAAAvQ,GACA,IAAA2R,EAAA3R,EAAAP,GACAmS,EAAA5R,EAAAva,EAEA,OACAga,GAAAkS,EARA,EASAlsB,EAAAtB,EAAA8a,GAHA7a,EAAAosB,GAAAmB,EAAApB,EAAA3O,GAGAgQ,MAGAC,GAAAjuB,EACA,SAAAge,EAAA2O,EAAAqB,GACA,OAAAxtB,EACAoc,GACAkR,GAAA9P,GACAgQ,EAnCA,SAAArB,GACA,OAAAA,GACA,OACA,OAAA5oB,GACA,QACA,OACA,OAAAA,GACA,QACA,OACA,OAAAA,GACA,QACA,QACA,OAAAA,GACA,SAuBAmqB,CAAAvB,MAEAwB,GAAAruB,EACA,SAAAsuB,EAAAhQ,GACA,OAAAA,EAAA9b,EAKA8b,EAFA7d,EAAAmd,GAFAU,EAAAxe,EAEAwuB,EADAhQ,EAAAre,KAMAsuB,GAAAtqB,GACA,UACAuqB,GAAAxuB,EACA,SAAAke,EAAAgQ,GACA,OAAAxtB,EACAoc,GACAkR,GAAA9P,GACAgQ,EACAK,MAEAE,GAAA,SAAAnS,GAEA,OADAA,EAAAva,GAGA2sB,GAAAjuB,EAAA+d,GAAAmB,GAAA8O,IACAE,GAAA3uB,EACA,SAAAD,EAAAuc,GAGA,OAAAnZ,EAFAmZ,GAKAva,EAAAtB,EAAAme,GAAA7e,EALAuc,EACAva,OAOA6sB,GAAA5uB,EACA,SAAAD,EAAAuc,GACA,IAEA4B,EAAA5B,EAAAnc,EACA,OAAAO,EACAosB,GAJAxQ,EAAAxc,EAMAC,EALAuc,EAAArc,GAMAie,KAEA2Q,GAAA7uB,EACA,SAAA8uB,EAAAxS,GAEA,OAAAza,EAAAitB,EADAxS,EAAAnc,KAGA4uB,GAAA7uB,EACA,SAAAH,EAAAmuB,EAAAhQ,GACA,OAAAzd,EACAkuB,GACA,SAAAzB,GACA,OAAAzsB,EAAAouB,GAAA3Q,EAAAgP,GAAAntB,EAAAmtB,MAEAgB,KAEAc,GAAAhvB,EACA,SAAAsc,EAAAmD,GAIA,OAAAtc,EAFAsc,GAKA1d,EAAAwB,EALAkc,EACA1d,EAFAua,EAMAva,OAGAktB,GAAA,SAAA3S,GAEA,OADAA,EAAArc,GAGAivB,GAAAlvB,EACA,SAAAkuB,EAAAhQ,GACA,OAAAzd,EACAusB,GACArO,GACAkQ,GAAA3Q,IACAgQ,KAEAiB,GAAAnvB,EACA,SAAAkuB,EAAAkB,GACA,OAAA3uB,EACAusB,GACArO,GACA,SAAArC,GAEA,OAAA7b,EAAAgtB,GADAnR,EAAAnc,EACAivB,KAEAlB,KAEAmB,GAAArvB,EACA,SAAAkuB,EAAAhQ,GACA,OAAAzd,EACAusB,GACArO,GACAle,EACA+d,GACAC,GACAoQ,GAAA3Q,KACAgQ,KAEAoB,GAAApvB,EACA,SAAA2C,EAAAiJ,EAAAyjB,GACAC,EACA,QACA,GAAA3sB,EAAA,EAEI,CACJ,GAAAiJ,EAAA7L,EAEK,CACL,IAAA6B,EAAAgK,EAAAhM,EAKA+C,GAHA,EAIAiJ,EALAA,EAAA7L,EAMAsvB,EAHA9uB,EAAA8a,GAAAzZ,EAAAytB,GAIA,SAAAC,EAVA,OAAAD,EAHA,OAAAA,KAkBAE,GAAAzvB,EACA,SAAA6C,EAAAiJ,GACA,OAAA9D,GACAtH,EAAA4uB,GAAAzsB,EAAAiJ,EAAAjI,MAEA6rB,GAAAxvB,EACA,SAAA+c,EAAApa,EAAAiJ,GACA,GAAAjJ,EAAA,EAEG,CACH,IAAAyZ,EAAA7a,EAAAoB,EAAAiJ,GACA6jB,EACA,QACAC,EACA,QACA,IAAAtT,EAAArc,IACA,OAAA6L,EAEA,IAAAwQ,EAAArc,MAgEO,CACP,OAAAqc,EAAAxc,EACA,MAAA6vB,EAEA,MAAAC,EAnEA,OAAAtT,EAAAxc,GACA,OACA,MAAA6vB,EACA,OACA,IAAA5O,EAAAzE,EAAArc,EAIA,OAAAgE,GAHA8c,EAAAjhB,EACAihB,EAAA9gB,EACAH,IAGA,OACA,GAAAwc,EAAArc,QAAA,CACA,IAAA4vB,EAAAvT,EAAArc,EAEA6vB,EAAAD,EAAA5vB,EAIA,OAAAgE,GALA4rB,EAAA/vB,EAEAgwB,EAAAhwB,EACAgwB,EAAA7vB,EACAH,IAIA,MAAA8vB,EAEA,QACA,GAAAtT,EAAArc,SAAAqc,EAAArc,UAAA,CACA,IAAA2gB,EAAAtE,EAAArc,EAEA8vB,EAAAnP,EAAA3gB,EAEA+vB,EAAAD,EAAA9vB,EAEAgwB,EAAAD,EAAA/vB,EAEA8D,EAAAksB,EAAAhwB,EACA,OAAAQ,EACA8a,GATAqF,EAAA9gB,EAWAW,EACA8a,GAVAwU,EAAAjwB,EAYAW,EACA8a,GAXAyU,EAAAlwB,EAaAW,EACA8a,GAZA0U,EAAAnwB,EAEAmd,EAAA,IAYAxc,EAAAgvB,GAAA5sB,EAAA,EAAAkB,GAYArD,EAAAgvB,GAAAzS,EAAA,EAAApa,EAAA,EAAAkB,OAEA,MAAA6rB,GAYA,OAAA9jB,EAIA,OAAA7H,GAFAqY,EAAArc,EACAH,IAtFA,OAAA+D,IA2FAqsB,GAAAlwB,EACA,SAAA6C,EAAAiJ,GACA,OAAApL,EAAAgvB,GAAA,EAAA7sB,EAAAiJ,KAEAqkB,GAAA,SAAAttB,GACA,OAAAmqB,GACAkD,GAAArtB,KAWAutB,GAAAlwB,EACA,SAAAoe,EAAA4P,EAAA3J,GACA,OAAAjG,EAAA9b,GACA,OACA,IAAAK,EAAAyb,EAAAxe,EAEAuwB,EAAA3B,GACAjuB,EAAAyuB,GAAAhB,EAFAhQ,EAAAI,EAAAre,IAEA4C,EAAA,EACA,GAAAwtB,EAAA,EAkBK,CACL,IAAAC,EAAA7vB,EACA4tB,GACAK,GACAjuB,EAAAyuB,GAAAhB,EAAAhQ,IACAI,GACA,OAAA7c,EACAhB,EAAA4uB,GAAAnB,EAAAhQ,GACAzd,EACA8a,GACA+U,EACA7vB,EACAke,GACA,SAAA3R,GACA,OAAAnL,EAAAmL,EAAAsR,IAEAiG,KAjCA,OAAA9iB,EACAhB,EACA+tB,GACAtQ,EACAzd,EACAuuB,GACAvuB,EACA0vB,GACAE,EACA5vB,EAAAyuB,GAAAhB,EAAAhQ,IACAzd,EAAA4uB,GAAAnB,EAAAhQ,KACAzd,EACAke,GACA,SAAA3R,GACA,OAAAnL,EAAAmL,EAAAsR,IAEAiG,IAmBA,OACA,IACAgM,EAAA9vB,EACAme,GACAqQ,GACAR,GACAhuB,EAAAyuB,GAAAhB,EALAhQ,EAAAI,EAAAxe,KAaA,OAAA2B,GAPA+uB,EASA/vB,EAAA4uB,GAAAnB,EAAAhQ,GARAqS,EA1DAtwB,EA0DAS,EACAoc,GACAqR,GAAAjQ,GACAsS,EACAD,GAJAC,GASAjM,GACA,OAEA,OAAA9iB,EACAhB,EAAA4uB,GAAAnB,EAFAhQ,EAAAI,EAAAxe,GAGAykB,GACA,OACA,IAAArG,EAAAI,EAAAxe,EACA,OAAA2B,EACAf,EACAquB,GACAH,GAAAb,IACAG,EACAhQ,GACAqG,GACA,OAEA,OADArG,EAAAI,EAAAxe,EACA2B,EACAf,EACAquB,GACAH,GAAAf,IACAK,EACAhQ,GACAqG,GACA,OAEA,OADArG,EAAAI,EAAAxe,EACA2B,EACAf,EACAquB,GACAH,GAAAd,IACAI,EACAhQ,GACAqG,GACA,OAGA,OADArG,EAAAI,EAAAre,EACAwB,EACAf,EACAquB,GACAH,GACAxM,GANA9D,EAAAxe,IAOAouB,EACAhQ,GACAqG,GACA,QACA,IAAAkM,EAAAnS,EAAAxe,EACA4wB,EAAApS,EAAAre,EACA0wB,EAAAlwB,EACAkuB,GACA5B,GACA3K,GAAAsO,IACAjwB,EAAAyuB,GAAAhB,EAAAuC,IACAG,EAAAnwB,EACAkuB,GACA5B,GACA3K,GAAAqO,IACAhwB,EAAAyuB,GAAAhB,EAAAwC,IACA,OAAAjvB,EACAhB,EACAuuB,GACA2B,EACAlwB,EACAuuB,GACA4B,EACAnwB,EACA0uB,GACAjB,EACAjqB,GACAwsB,EAAAC,OACAnM,GA/EA,IAAAiM,IAkFAK,GAAA,SAAAC,GACA,IAniBAxU,EAmiBAyU,EAAAD,EAWA,OA5dA,SAAAA,GACA,IACA5C,EADA4C,EACA/uB,EACA,OAAAoB,EAFA2tB,GAKA/uB,EAAArB,EACAktB,GACAP,GAAAyD,GACA3D,GAAA2D,GACA5C,KAkdA8C,CA3iBA7tB,EAHAmZ,EAgjBA5b,EAAAoc,GAZA9c,EACA,SAAAse,EAAAhC,GACA,IAAArc,EAAAqc,EAGA2U,EAAAvwB,EAAA0vB,GAAA9R,EAFAre,EAAA8B,EACA9B,EAAA6B,GAEA,OAAAqB,EACAlD,GACK6B,EAAAmvB,EAAAhxB,EAAA8B,EAAAkvB,EAAAnxB,MAILgxB,EAAAC,EAAAjvB,IA1iBAC,EAAAkrB,GALA3Q,EACAva,OAgjBAmvB,GAAAhxB,EACA,SAAAJ,EAAAG,EAAAE,GACA,OAAUqC,EAAA,EAAA1C,IAAAG,IAAAE,OAEVgxB,GAAA,SAAA7S,GACA,OAAAA,EAAA9b,GAUA4uB,GAAA,SAAA9U,GAEA,OADAA,EAAAG,GAyBA4U,GAAArxB,EACA,SAAAke,EAAAI,GACA,OAAAA,EAAA9b,GACA,OAEA,OAAAX,EADAyc,EAAAre,EACAie,GACA,OACA,IACAoT,EAAAhT,EAAAre,EACA,OAAA4B,EAFAyc,EAAAxe,EAEAoe,IAAArc,EAAAyvB,EAAApT,GACA,OAGA,OAGA,OAEA,OAAArc,EADAyc,EAAAxe,EACAoe,GACA,OAEA,OAAArc,EADAyc,EAAAre,EACAie,GACA,OAGA,QAEA,OAAArc,EADAyc,EAAAxe,EACAoe,MAGAqT,GAAAvxB,EACA,SAAAukB,EAAArG,GACA,OAAAsG,GACA/jB,EACAke,GACA0S,GAAAnT,GACAqG,MAEAiN,GAAAxxB,EACA,SAAAke,EAAA4S,GACA,IAAA7wB,EAAA6wB,EACAvM,EAAAtkB,EAAA6B,EACA2vB,EAAAxxB,EAAAmc,EACAE,EAAA7b,EAAA8wB,GAAAhN,EAAArG,GACA,GAAA5B,EAAA9Z,GAAA8Z,EAAAxc,EAAA0C,EAuBA,OAAAsuB,EAtBA,IAAAxS,EAAAhC,EAAAxc,EAOA,OAAAqD,EACAlD,GAEAmc,EAAAqV,EA7DA,EA8DA3vB,EAAArB,EACA8a,GATA9a,EACAmd,GAHAU,EAAAxe,EAhDA,EAiDAwe,EAAAre,GAYAQ,EACAke,GACA,SAAA3R,GACA,OAAAnL,EAAAmL,EAAAsR,IAEAiG,QAMAmN,GAAA1xB,EACA,SAAAD,EAAA4xB,GACA,WAAAA,EAAAnvB,EAEAiqB,GACA1sB,EAFA4xB,EAAA7xB,IAIA6xB,IAGAC,GAAA5xB,EACA,SAAA+J,EAAA6O,GACA,OAAA7O,EAAAvH,GACA,OACA,OAAAf,EAAAmX,EAAA0T,IACA,OAEA,OAAA7qB,EACA0B,EACAyV,GAEAjN,EAAA8gB,GALA1iB,EAAAjK,KAOAwsB,IACA,OACA,OAAA7qB,EACA0B,EACAyV,GACOjN,EAAA0P,KACPiR,IACA,OACA,OAAA7qB,EACA0B,EACAyV,GAEAjN,EA/HA,SAAAgmB,GACA,OAAAA,EAAAnvB,EAAA,CACA,IAAAsuB,EAAAa,EAAA7xB,EACA2xB,EAAAX,EAAA1U,EACAF,EAAA4U,EAAAzU,EACA,OAXA5b,EAAA8sB,GAAA4D,GAWAL,EAZAhvB,GAYA2qB,GAAAqE,GAAApwB,EACAwwB,GACAJ,EACAM,GAAAlV,GACAuV,GAEA,OAAAE,EAoHAE,CACApxB,EAAAixB,GAAAb,GAAAjY,EAAAjN,MAEA2gB,IACA,QACA,OAcA7qB,EAdAsI,EAAAjK,EAAA0C,GAAAuH,EAAAjK,IAAA0C,EAcAoW,EAVAzV,EACAyV,GAEAjN,EAAAlL,EACAixB,GACAF,GARAznB,EAAAjK,IACAG,GAQA2Y,EAAAjN,KAIA2gB,OAQAwF,GAAA,SAAAH,GACA,OAAAA,EAAAnvB,GACA,OACA,SACA,OAEA,OADAmvB,EAAA7xB,EAAAsc,EAEA,QAEA,OADAuV,EAAAxxB,IAaA4xB,GAAA/xB,EACA,SAAAsc,EAAAmD,GACA,IAAAvJ,EAAAoG,EAEA7Y,EAAAhD,EAAA0f,GAAA,EADAV,EACA,GACAjc,EAAA/C,EAAA0f,GAAA,EAAAjK,EAAA,GACA,OAAAlO,GACAvH,EACAme,GACA,SAAA7c,GACA,OAAAtB,EACAme,GACA,SAAA9c,GACA,OAAA8a,GACAnb,EAAAK,EAAAC,KAEAyB,IAEAC,MAEAuuB,GAAA,SAAAlB,GACA,IAAA5C,EAAA4C,EAAA/uB,EACAwiB,EAAAuM,EAAAhvB,EAOAmwB,EAAAxxB,EACAsxB,GACA1E,GAAAyD,GACA3D,GAAA2D,IACA,OAAArwB,EACAme,GACAA,GAZA,SAAAV,GACA,OAAAzc,EACAgtB,GACAhuB,EAAAyuB,GAAAhB,EAAAhQ,IACAzd,EAAA8wB,GAAAhN,EAAArG,MASA+T,IAEAC,GAAA,SAAApyB,GACA,OAAS0C,EAAA,EAAA1C,MAITqyB,GAtpLA,SAAApoB,GAEA,OACAvH,EAAA,EACA1C,EAAAiK,IAmpLAkH,GAAA,SAAA5C,GACA,OAAAA,EAAA7L,GACA,OACA,SACA,OACA,SACA,OACA,SACA,QACA,WAGA4vB,GAAA5kB,GAAA,UACA6kB,GAAA7kB,GAAA,OAEA8kB,GADA/kB,GAKAglB,GAAAnkB,GACAokB,GAAAxyB,EACA,SAAAuR,EAAA5K,GACA,OAAAlG,EACA8xB,GACAhhB,GAPS/O,EAAA,EAAA1C,EAQT6G,MAEA8rB,GAAA,SAAA1oB,GACA,OAAAtJ,EACA+xB,GACA,QACAL,GAAApoB,KAEA2oB,GAAA1yB,EACA,SAAA4H,EAAAkpB,GACA,OAAArwB,EACA4xB,GACAxuB,EACAI,GAEAxD,EACA2xB,GACAnuB,GAEAwuB,GACAP,GAAApB,MAEA7sB,GAEAquB,GACA,cAAApG,GAAAtkB,YAKA+qB,GAAAlyB,EACA2xB,GACAnuB,GAEAwuB,IALmCjwB,EAAA,MAOnCyB,GAEAquB,GAAA,eAMAM,GAAA,SAAAtW,GAEA,OADAA,EAAAH,IAuDA0W,GAAA,SAAAhG,GACA,OAAAA,GACA,OACA,WACA,OACA,aACA,OACA,aACA,QACA,gBA8CAiG,GAAAtlB,GAAA,QACAulB,GAAAvlB,GAAA,SACAwlB,GAAAxlB,GAAA,MACAylB,GAAAzlB,GAAA,MACA0lB,GAAAlsB,EAQAmsB,GAPAnzB,EACA,SAAAuC,EAAAiD,GACA,OAAA/E,EACA6N,GACA/L,EACA2wB,GAAA1tB,KAEA4tB,CAAA,aAWAC,GAAA,SAAAC,GACA,IAAAC,EAAA,SAAArG,GACA,OAAAzsB,EACAqyB,GACA7uB,GAEAkvB,GACA,qBAAAN,GACA5D,GAAA/B,OAEArpB,IAEAiL,EAAA9O,EACA,SAAAkuB,EAAA5P,GACA,OAAA/a,EACA9C,EACAgkB,GACA5gB,EACApD,EACAioB,GACA,SAAA1b,GACA,OAAAvM,EACAme,GACA,SAAAvM,GACA,OAAA5Q,EAAA4Q,GAAA,IAnFA,SAAAiM,GACA,OAAAA,EAAA9b,GACA,OAEA,OAAAyB,GAEA,UACA,YAXAqY,EAOAgC,EAAAxe,EALAosB,GADA5P,MAYA,OACA,OAAArY,GACA,WACA,OACA,OAAAA,GACA,WACA,OACA,OAAAA,GACA,gBACA,OACA,OAAAA,GACA,iBACA,OAEA,OAAAA,GAEA,mBACA,oBAAA4uB,GAJAvU,EAAAxe,KAMA,OACA,OAAAmE,GACA,eACA,QACA,OAAAA,GACA,cArCA,IAAAqY,EAyFAkX,CAAAxmB,KAEAsR,IACAra,GAEAxC,EACA,eACAke,GAAAuO,GAAA,QAGAuF,EAAA,SAAAnX,GACA,IAvGAxc,EAuGAouB,EAAA5R,EAAAxc,EACAwe,EAAAhC,EAAArc,EACA,OAAAQ,EACAuyB,GACA/uB,GAnDA,SAAA6K,GACA,OAAAqkB,GACA1yB,EACA0rB,GACA,IACA1rB,EACAme,GACAsG,GACAzkB,EAAAke,GAAAE,GAAA/P,MA6CA4kB,CACAjzB,EAAAqO,EAAAof,EAAA5P,IACAmU,IA/GA3yB,EAgHAwe,GA/GS9b,EAAA,EAAA1C,SAiHTmE,GAEAxD,EACAqyB,GACAjvB,EACApD,EAAAme,GAAA2U,EAAArF,QASA,OAAAztB,EACAsyB,GACA9uB,GAEAkvB,GAAA,WAEA1yB,EAAAme,GAZA,SAAA+U,GACA,OAAAlzB,EACAwyB,GACApvB,EACApD,EAAAme,GAAA6U,EAAAE,KAQAL,KAEAM,GAAApmB,GAAA,MA8EAqmB,GAAAzqB,EACA0qB,GAAAD,GAAA,GACAE,GAAAxqB,GACAyqB,GAAAh0B,EACA,SAAAiB,EAAAgzB,GACA,OAAAxzB,EACAszB,GACA,SAAAj0B,GACA,OAAA+zB,GACA5yB,EAAAnB,KAEAm0B,KAEAC,GAAAh0B,EACA,SAAAe,EAAAgzB,EAAAE,GACA,OAAA1zB,EACAszB,GACA,SAAAj0B,GACA,OAAAW,EACAszB,GACA,SAAA9zB,GACA,OAAA4zB,GACApzB,EAAAQ,EAAAnB,EAAAG,KAEAk0B,IAEAF,KAEAG,GAAA,SAAAC,GACA,OAAA3zB,EACA4c,GACA4W,GAAA3Y,IACAsY,GAAAhwB,GACAwwB,IAEAC,GAAA/oB,GACAgpB,GAAAv0B,EACA,SAAAiL,EAAAqR,GACA,IAAA9S,EAAA8S,EACA,OAAAzS,GACApJ,EACAszB,GACAO,GAAArpB,GACAzB,MAwBAe,GAAA,KAAAC,GAAAspB,GAtBA5zB,EACA,SAAA+K,EAAAupB,GACA,OAAA/zB,EACAuzB,GACA,WACA,UAEAI,GACA3zB,EACAme,GACA2V,GAAAtpB,GACAupB,OAEAt0B,EACA,WACA,OAAA2zB,GAAA,KAEA7zB,EACA,SAAAoP,EAAAkN,GAEA,OAAA7b,EAAAuzB,GAAA5kB,EADAkN,MAIA7Q,GAAA,YAviGAgpB,GAyqGAC,GAAAtc,GAEAuc,GADA9oB,GACAhI,GACA+wB,GAAA50B,EACA,SAAAF,EAAAG,GACA,OAAUuC,EAAA,EAAA1C,IAAAG,OAEV40B,IAAyCryB,GAAA,GACzCsyB,GAAAD,GACAE,GAAA/0B,EACA,SAAAwM,EAAAwoB,GACA,OAAUC,GAAAD,EAAAE,GAAA1oB,KAEV2oB,GAAAtB,GACApzB,EAAAs0B,GAAAD,QAEAM,GAAA90B,EACA,SAAAR,EAAAG,EAAAE,EAAAE,EAAAE,GACA,OAAUiC,GAAA,EAAA1C,IAAAG,IAAAE,IAAAE,IAAAE,OAEV80B,GAAAzyB,EAEA0yB,GAAAh1B,EACA,SAAAi1B,EAAAhzB,EAAAqE,EAAA8U,EAAA8Z,GACA,QAAAA,EAAAhzB,GAAAgzB,EAAA11B,EA4BG,CACH,QAAA4b,EAAAlZ,GAAAkZ,EAAA5b,IAAA,IAAA4b,EAAArb,EAAAmC,GAAAkZ,EAAArb,EAAAP,EAmBA,OAAAc,EAAAw0B,GAAAG,EAAAhzB,EAAAqE,EAAA8U,EAAA8Z,GAlBA,IAGAC,EAAA/Z,EAAArb,EAOA,OADAq1B,EAAAha,EAAAnb,EACAK,EACAw0B,GACA,EAXA1Z,EAAAzb,EACAyb,EAAAvb,EAaAS,EAAAw0B,GAAA,EAVAK,EAAAx1B,EACAw1B,EAAAt1B,EACAs1B,EAAAp1B,EACAo1B,EAAAl1B,GAQAK,EAAAw0B,GAAA,EAAA7yB,EAAAqE,EAAA8uB,EAAAF,IA7CA,IAUAE,EATAC,EAAAH,EAAAv1B,EACA21B,EAAAJ,EAAAr1B,EACA01B,EAAAL,EAAAn1B,EACAy1B,EAAAN,EAAAj1B,EACA,WAAAmb,EAAAlZ,GAAAkZ,EAAA5b,EAcAc,EACAw0B,GACAG,EACAI,EACAC,EACAh1B,EAAAw0B,GAAA,EAAA7yB,EAAAqE,EAAA8U,EAAAma,GACAC,GAdAl1B,EACAw0B,GACA,EACA7yB,EACAqE,EACAhG,EAAAw0B,GAAA,EATA1Z,EAAAzb,EACAyb,EAAAvb,EACAub,EAAArb,EACAq1B,EAAAha,EAAAnb,GAOAK,EAAAw0B,GAAA,EAAAO,EAAAC,EAAAC,EAAAC,MAkCAC,GAAA71B,EACA,SAAAqC,EAAAqE,EAAAiV,GACA,QAAAA,EAAArZ,EACA,OAAA5B,EAAAw0B,GAAA,EAAA7yB,EAAAqE,EAAAiuB,OAEA,IAAAmB,EAAAna,EAAA/b,EACAm2B,EAAApa,EAAA5b,EACAi2B,EAAAra,EAAA1b,EACAg2B,EAAAta,EAAAxb,EACA+1B,EAAAva,EAAAtb,EAEA,OADAE,EAAA40B,GAAA9yB,EAAA0zB,IAEA,OACA,OAAAr1B,EACA00B,GACAU,EACAC,EACAC,EACAx1B,EAAAq1B,GAAAxzB,EAAAqE,EAAAuvB,GACAC,GACA,OACA,OAAAx1B,EAAAw0B,GAAAY,EAAAC,EAAArvB,EAAAuvB,EAAAC,GACA,QACA,OAAAx1B,EACA00B,GACAU,EACAC,EACAC,EACAC,EACAz1B,EAAAq1B,GAAAxzB,EAAAqE,EAAAwvB,OAIAC,GAAAn2B,EACA,SAAAqC,EAAAqE,EAAAiV,GACA,IAAAS,EAAA5b,EAAAq1B,GAAAxzB,EAAAqE,EAAAiV,GACA,WAAAS,EAAA9Z,GAAA8Z,EAAAxc,EAQAwc,EAFA1b,EAAAw0B,GAAA,EAJA9Y,EAAArc,EACAqc,EAAAnc,EACAmc,EAAAjc,EACAic,EAAA/b,KAOA+1B,GAAAp2B,EACA,SAAAe,EAAAwa,EAAAI,GAEA,QACA,QAAAA,EAAArZ,EACA,OAAAiZ,EAEA,IAGA+Z,EAAA3Z,EAAAtb,EACAob,EAAA1a,EACA2a,EAAAlb,EACAO,EANA4a,EAAA5b,EACA4b,EAAA1b,EAQAO,EAAA41B,GAAAr1B,EAAAwa,EAPAI,EAAAxb,IASAY,EAAA0a,EACAF,EAAAG,EACAC,EAHA2Z,KAQAe,GAAA/1B,EACA,SAAAg2B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAuCA7V,EAAAtgB,EACA41B,GAxCAp2B,EACA,SAAA42B,EAAAC,EAAAza,GACA0a,EACA,QACA,IAAAlrB,EAAAwQ,EAAAxc,EACAoB,EAAAob,EAAArc,EACA,GAAA6L,EAAA7L,EAIM,CACN,IAAA8gB,EAAAjV,EAAAhM,EACAm3B,EAAAlW,EAAAjhB,EACAo3B,EAAAnW,EAAA9gB,EACAk3B,EAAArrB,EAAA7L,EACA,GAAAyC,EAAAu0B,EAAAH,GAAA,GAMAA,EALAA,EAMAC,EALAA,EAMAza,EALA7a,EACA01B,EACAz2B,EAAA81B,EAAAS,EAAAC,EAAAh2B,IAIA,SAAA81B,EAEA,OAAAt0B,EAAAu0B,EAAAH,GAAA,EACAr1B,EACAqK,EACApL,EAAAg2B,EAAAI,EAAAC,EAAA71B,IAEAO,EACA01B,EACAx2B,EAAA81B,EAAAQ,EAAAC,EAAAH,EAAA71B,IA1BA,OAAAO,EACAqK,EACApL,EAAAg2B,EAAAI,EAAAC,EAAA71B,OAiCAO,EACAgB,GAAAk0B,GACAE,GACAD,GACAQ,EAAApW,EAAAlhB,EACAu3B,EAAArW,EAAA/gB,EACA,OAAAS,EACAoc,GACA9c,EACA,SAAA6vB,EAAA3uB,GAGA,OAAAR,EAAA81B,EAFA3G,EAAA/vB,EACA+vB,EAAA5vB,EACAiB,KAEAm2B,EACAD,KAGAE,GAAAt3B,EACA,SAAAu3B,EAAA1b,GACAxK,EACA,QACA,QAAAwK,EAAArZ,EACA,OAAAwb,GAEA,IACApX,EAAAiV,EAAA1b,EACAub,EAAAG,EAAAxb,EACAm1B,EAAA3Z,EAAAtb,EAEA,OADAE,EAAA40B,GAAAkC,EAJA1b,EAAA5b,IAMA,OAGAs3B,EAFAA,EAGA1b,EAFAH,EAGA,SAAArK,EACA,OACA,OAAA0M,GAAAnX,GACA,QAGA2wB,EAFAA,EAGA1b,EAFA2Z,EAGA,SAAAnkB,MAKAmmB,GAAAx3B,EACA,SAAAsc,EAAAlR,GACA,IAAA4P,EAAAsB,EAAAxc,EACAsP,EAAAkN,EAAArc,EACAwf,EAAAhf,EAAA62B,GAAAtc,EAAA5P,GACA,OACA1K,EACA21B,GACArb,EAHA,IAAAyE,EAAAjd,EAIAyB,GACAmL,IAOA3O,EAAA8a,GAAAnM,EAJAqQ,EAAA3f,GAFAsL,KAUAqsB,GAAAjsB,GACAksB,GAAA7tB,GAYA8tB,GAAA5c,GACA6c,GAAA13B,EACA,SAAA+K,EAAA4sB,EAAA7C,GACA,GAAA6C,EAAA53B,EAEG,CACH,IAAA+a,EAAA6c,EAAA/3B,EACAq3B,EAAAU,EAAA53B,EACA63B,EAAAJ,GACAj3B,EACAk3B,GACA3c,EACAva,EAAAg3B,GAAAxsB,EAAA+P,KAQA,OAAAva,EAAAszB,GAPA,SAAA9Y,GACA,OAAAva,EACAk3B,GACA3sB,EACAksB,EACAz2B,EAAA21B,GAAArb,EAAAC,EAAA+Z,KAEA8C,GAhBA,OAAAjE,GAAAmB,KAmBA+C,GAAA73B,EACA,SAAA+K,EAAA+sB,EAAA1b,GACA,IAAA0Y,EAAA1Y,EAAA2Y,GACAyB,EAAAx2B,EACA,SAAAu1B,EAAAxa,EAAA2F,GACA,IAx+LAjX,EA0+LAsuB,EAAArX,EAAAzgB,EACA,OAAA8C,EAHA2d,EAAA9gB,EACA8gB,EAAA3gB,EAKAQ,EACAszB,GACA,WACA,OAAAkE,IAj/LAtuB,EAm/LAsR,EAj/LA5R,EAAA,SAAAC,GACA,IAAAE,EAAAG,EAAA5J,EACA,IAAAyJ,EAAAhH,GAAAgH,EAAArJ,GAEAqJ,EAAArJ,IAGAwJ,EAAA5J,EAAA,KAEAuJ,EAAAF,EA5sCA,WAsrOA8uB,EAAAx3B,EAAAoc,GAAA0a,GAAA1C,GAAAkD,GAqBAvY,EAAA5e,EACA01B,GArBAr2B,EACA,SAAA8a,EAAAxO,EAAAqjB,GACA,IACAsI,EAAAtI,EAAA5vB,EACAg4B,EAAApI,EAAA1vB,EACA,OAAA8C,EACAxC,EAAA8a,GAAAP,EAJA6U,EAAA/vB,GAKAq4B,EACAF,KAEA73B,EACA,SAAA4a,EAAAxO,EAAAyO,EAAA+F,GACA,IAEAiX,EAAAjX,EAAA7gB,EACA,OAAA8C,EAHA+d,EAAAlhB,EAKAY,EAAA21B,GAAArb,EAAAC,EAJA+F,EAAA/gB,GAKAg4B,KAMAvB,EACAwB,EACAlD,EACA/xB,EACAY,EACAixB,GACAjB,GAAA,KACAuE,EAAA3Y,EAAA3f,EACAu4B,EAAA5Y,EAAAxf,EAEA,OAAAQ,EACAszB,GACA,SAAAuE,GACA,OAAAzE,GACApzB,EAAAs0B,GAAAmD,EAAAI,KAEA73B,EACAszB,GACA,WACA,OAAArzB,EAAAk3B,GAAA3sB,EAAAmtB,EAAAC,IAVA5Y,EAAAtf,MAgBAo4B,IAxhHA9D,GAuhHAnZ,GArhHAjS,EAAA,SAAAC,GAEAA,EAAAF,EAAAqrB,GAAA+D,KAAAC,YAyjHAluB,GAAA,KAAAC,GAAA2qB,GAAA4C,GApCA73B,EACA,SAAA+K,EAAA+P,EAAA5P,GACA,IAAAkR,EAAA7b,EAAA62B,GAAAtc,EAAA5P,EAAA8pB,IACA,OAAA5Y,EAAA9Z,EACA,OAAAqxB,GAAAzoB,GAEA,IAAAoB,EAAA8P,EAAAxc,EAaA,OAAAW,EACAszB,GACA,WACA,OAAAF,GAAAzoB,IAEA3K,EAAAszB,GAjBA,SAAA2E,GACA,OAAAtE,GACA3zB,EACAme,GACA,SAAAxP,GACA,OAAA3O,EACA6zB,GACArpB,EACAmE,EAAAspB,KAEAlsB,KAOA+rB,OAYA,EATAv4B,EACA,SAAAD,EAAAuc,GAGA,OAAA7b,EACAm0B,GAHAtY,EAAAxc,EAKAW,EAAA+d,GAAAze,EAJAuc,EAAArc,OAOA,IAxjLA04B,GAwjLAC,GAAAntB,GAAA,QACAotB,GAAA74B,EACA,SAAAgb,EAAA5L,GACA,OAAAwpB,GACAn4B,EAAAm0B,GAAA5Z,EAAA5L,MA5jLAupB,IA6kLkBG,MAAQruB,KAf1BiqB,IAEAvb,GAAA,WACA,OAAAoT,IAEAlT,GAAA,SAAAoG,GAEA,OA7hHA,IA4hHAA,EAAA9T,EA5hHAnJ,EA6hHA/B,EACAo4B,GACA,IACAzW,GAAAhH,KAAAuZ,IAEAvb,GAAAwY,GACApY,GA3rBA,SAAAZ,GACA,IAAA0D,EAAA1D,EAAAjN,EACA,OAAA2Q,EAAA9Z,GACA,OACA,OAAA/B,EACA4xB,GACAxuB,EACApD,EAAA2f,GAAAsS,GAAA9Z,EAAA4T,IACA,OACA,IAAAsE,EAAAxU,EAAAxc,EACA,OAAAW,EACA4xB,GACAxuB,EACAI,GAEAxD,EACAmzB,GACA/vB,EACAI,GAEAquB,GACA,WAAApG,GACA4F,GAAAlZ,EAAAjN,QAEAlL,EACAmzB,GACA/vB,EACAI,GAEAquB,GACA,QAAApG,GArWA,SAAA5P,GAEA,OADAA,EAKAyc,CACA3H,GA+VAN,EAjWAzU,SAmWAsW,GACAU,GACArB,GAAAlB,OAEA,QAEA,OADAA,EAAAxU,EAAAxc,EACAW,EACA4xB,GACAxuB,EACAI,GAEAxD,EACAmzB,GACA/vB,EACAI,GAEAquB,GACA,qBAAApG,GACA4F,GAAAlZ,EAAAjN,QAEAgnB,GA7NA,SAAA/Z,GACA,IAAA0D,EArBA,SAAA1D,GACA,IACAogB,EAAApgB,EAAA4T,EACAlQ,EAhBA,WACA,IAAAqV,EAeA/Y,EAfAjN,EACA,OAAAgmB,EAAAnvB,GACA,OACA,OAAAwb,GACA,OAGA,QAEA,OAAAD,GADA4T,EAAA7xB,IAOAm5B,GACA,OAAA3c,EAAA9Z,EACA,OAAAwb,GAEA,IAAA8S,EAAAxU,EAAAxc,EACA,OAAA0kB,GACA/jB,EACAke,GACA,SAAA1e,GACA,OAAA4B,EACA+wB,GAAA3yB,GAEA2yB,GAAA9B,GAlCA,IAoCAkI,IAIAE,CAAAtgB,GACA,OAAA0D,EAAA9Z,EAcA8vB,GAAA,IAZA7xB,EACA2xB,GACAnuB,GAEAwuB,GACAP,GANA5V,EAAAxc,MAQAmE,GAEAquB,GAAA,0BAiNA6G,CAAAvgB,GACAya,GACArB,GAAAlB,UAqoB0BsI,CAC1BjH,GAAA,GAD0BiH,CAC1B,KA5kLA35B,EAAA,IAMA,SAAA45B,EAAAC,EAAAX,GAEA,QAAA3e,KAAA2e,EAEA3e,KAAAsf,EACA,QAAAtf,EACAtY,EAAA,GACA23B,EAAAC,EAAAtf,GAAA2e,EAAA3e,IACAsf,EAAAtf,GAAA2e,EAAA3e,GAbAqf,CAAA55B,EAAA,IAAAk5B,IACAl5B,EAAA,IAAAk5B,GAv2EA,CAi7PyCY,sHCp6PvCroB,kDAEEA,0BAEAA,+BALJ,0DCRAsoB,iBACEthB,KAAMhL,kCD4HF,kBAAJusB,WACEA,mCAAmC,SAAAC,GACjCA","file":"static/js/main.3aba9f18.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.ag.M === region.ao.M)\n\t{\n\t\treturn 'on line ' + region.ag.M;\n\t}\n\treturn 'on lines ' + region.ag.M + ' through ' + region.ao.M;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\n\n// STRINGS\n\n\nvar _Parser_isSubString = F5(function(smallString, offset, row, col, bigString)\n{\n\tvar smallLength = smallString.length;\n\tvar isGood = offset + smallLength <= bigString.length;\n\n\tfor (var i = 0; isGood && i < smallLength; )\n\t{\n\t\tvar code = bigString.charCodeAt(offset);\n\t\tisGood =\n\t\t\tsmallString[i++] === bigString[offset++]\n\t\t\t&& (\n\t\t\t\tcode === 0x000A /* \\n */\n\t\t\t\t\t? ( row++, col=1 )\n\t\t\t\t\t: ( col++, (code & 0xF800) === 0xD800 ? smallString[i++] === bigString[offset++] : 1 )\n\t\t\t)\n\t}\n\n\treturn _Utils_Tuple3(isGood ? offset : -1, row, col);\n});\n\n\n\n// CHARS\n\n\nvar _Parser_isSubChar = F3(function(predicate, offset, string)\n{\n\treturn (\n\t\tstring.length <= offset\n\t\t\t? -1\n\t\t\t:\n\t\t(string.charCodeAt(offset) & 0xF800) === 0xD800\n\t\t\t? (predicate(_Utils_chr(string.substr(offset, 2))) ? offset + 2 : -1)\n\t\t\t:\n\t\t(predicate(_Utils_chr(string[offset]))\n\t\t\t? ((string[offset] === '\\n') ? -2 : (offset + 1))\n\t\t\t: -1\n\t\t)\n\t);\n});\n\n\nvar _Parser_isAsciiCode = F3(function(code, offset, string)\n{\n\treturn string.charCodeAt(offset) === code;\n});\n\n\n\n// NUMBERS\n\n\nvar _Parser_chompBase10 = F2(function(offset, string)\n{\n\tfor (; offset < string.length; offset++)\n\t{\n\t\tvar code = string.charCodeAt(offset);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn offset;\n\t\t}\n\t}\n\treturn offset;\n});\n\n\nvar _Parser_consumeBase = F3(function(base, offset, string)\n{\n\tfor (var total = 0; offset < string.length; offset++)\n\t{\n\t\tvar digit = string.charCodeAt(offset) - 0x30;\n\t\tif (digit < 0 || base <= digit) break;\n\t\ttotal = base * total + digit;\n\t}\n\treturn _Utils_Tuple2(offset, total);\n});\n\n\nvar _Parser_consumeBase16 = F2(function(offset, string)\n{\n\tfor (var total = 0; offset < string.length; offset++)\n\t{\n\t\tvar code = string.charCodeAt(offset);\n\t\tif (0x30 <= code && code <= 0x39)\n\t\t{\n\t\t\ttotal = 16 * total + code - 0x30;\n\t\t}\n\t\telse if (0x41 <= code && code <= 0x46)\n\t\t{\n\t\t\ttotal = 16 * total + code - 55;\n\t\t}\n\t\telse if (0x61 <= code && code <= 0x66)\n\t\t{\n\t\t\ttotal = 16 * total + code - 87;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn _Utils_Tuple2(offset, total);\n});\n\n\n\n// FIND STRING\n\n\nvar _Parser_findSubString = F5(function(smallString, offset, row, col, bigString)\n{\n\tvar newOffset = bigString.indexOf(smallString, offset);\n\tvar target = newOffset < 0 ? bigString.length : newOffset + smallString.length;\n\n\twhile (offset < target)\n\t{\n\t\tvar code = bigString.charCodeAt(offset++);\n\t\tcode === 0x000A /* \\n */\n\t\t\t? ( col=1, row++ )\n\t\t\t: ( col++, (code & 0xF800) === 0xD800 && offset++ )\n\t}\n\n\treturn _Utils_Tuple3(newOffset, row, col);\n});\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a8,\n\t\timpl.bi,\n\t\timpl.bg,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tv: func(record.v),\n\t\tah: record.ah,\n\t\taf: record.af\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.v;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.ah;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.af) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a8,\n\t\timpl.bi,\n\t\timpl.bg,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.bk;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.a8,\n\t\timpl.bi,\n\t\timpl.bg,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.P && impl.P(sendToApp)\n\t\t\tvar view = impl.bk;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.a_);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.bh) && (_VirtualDom_doc.title = title = doc.bh);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.bc;\n\tvar onUrlRequest = impl.bd;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tP: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aJ === next.aJ\n\t\t\t\t\t\t\t&& curr.av === next.av\n\t\t\t\t\t\t\t&& curr.aF.a === next.aF.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\ta8: function(flags)\n\t\t{\n\t\t\treturn A3(impl.a8, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tbk: impl.bk,\n\t\tbi: impl.bi,\n\t\tbg: impl.bg\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { a6: 'hidden', a$: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { a6: 'mozHidden', a$: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { a6: 'msHidden', a$: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { a6: 'webkitHidden', a$: 'webkitvisibilitychange' }\n\t\t: { a6: 'hidden', a$: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taQ: _Browser_getScene(),\n\t\taW: {\n\t\t\taa: _Browser_window.pageXOffset,\n\t\t\tab: _Browser_window.pageYOffset,\n\t\t\t_: _Browser_doc.documentElement.clientWidth,\n\t\t\tW: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\t_: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tW: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taQ: {\n\t\t\t\t_: node.scrollWidth,\n\t\t\t\tW: node.scrollHeight\n\t\t\t},\n\t\t\taW: {\n\t\t\t\taa: node.scrollLeft,\n\t\t\t\tab: node.scrollTop,\n\t\t\t\t_: node.clientWidth,\n\t\t\t\tW: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taQ: _Browser_getScene(),\n\t\t\taW: {\n\t\t\t\taa: x,\n\t\t\t\tab: y,\n\t\t\t\t_: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tW: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\ta1: {\n\t\t\t\taa: x + rect.left,\n\t\t\t\tab: y + rect.top,\n\t\t\t\t_: rect.width,\n\t\t\t\tW: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2(elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$True = 0;\nvar author$project$Game$isGameActive = function (game) {\n\tif (game.$ === 1) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar author$project$Main$AdvanceBoard = {$: 3};\nvar author$project$Game$NotStarted = {$: 0};\nvar author$project$Game$Board = elm$core$Basics$identity;\nvar author$project$Game$BoardId = elm$core$Basics$identity;\nvar author$project$Game$ClickCounter = elm$core$Basics$identity;\nvar author$project$Level$levelObstacles = function (_n0) {\n\tvar l = _n0;\n\treturn l.x;\n};\nvar author$project$Particle$Particles = elm$core$Basics$identity;\nvar author$project$Particle$ParticleId = elm$core$Basics$identity;\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar author$project$Particle$initialParticleId = 1;\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$LT = 0;\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$GT = 2;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar author$project$Particle$initial = {ae: author$project$Particle$initialParticleId, y: _List_Nil};\nvar author$project$Game$buildBoardFromLevel = F2(\n\tfunction (boardId, level) {\n\t\treturn {\n\t\t\tak: boardId,\n\t\t\tK: 0,\n\t\t\tL: level,\n\t\t\tx: author$project$Level$levelObstacles(level),\n\t\t\ty: author$project$Particle$initial\n\t\t};\n\t});\nvar author$project$Level$Level = elm$core$Basics$identity;\nvar author$project$Level$map = F2(\n\tfunction (f, _n0) {\n\t\tvar l = _n0;\n\t\treturn {\n\t\t\tW: l.W,\n\t\t\tx: f(l.x),\n\t\t\tY: l.Y,\n\t\t\t_: l._\n\t\t};\n\t});\nvar author$project$Coordinates$Coordinates = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar author$project$Coordinates$X = elm$core$Basics$identity;\nvar author$project$Coordinates$Y = elm$core$Basics$identity;\nvar author$project$Coordinates$coordinatesFromPair = function (_n0) {\n\tvar x = _n0.a;\n\tvar y = _n0.b;\n\treturn A2(author$project$Coordinates$Coordinates, x, y);\n};\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (!_n0.$) {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar author$project$LevelBuilder$catMaybes = elm$core$List$filterMap(elm$core$Basics$identity);\nvar author$project$Obstacle$BlackHole = function (a) {\n\treturn {$: 6, a: a};\n};\nvar author$project$Obstacle$ChangeDirection = F2(\n\tfunction (a, b) {\n\t\treturn {$: 5, a: a, b: b};\n\t});\nvar author$project$Obstacle$Cluster = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar author$project$Obstacle$Energizer = function (a) {\n\treturn {$: 7, a: a};\n};\nvar author$project$Obstacle$Mirror = function (a) {\n\treturn {$: 2, a: a};\n};\nvar author$project$Obstacle$MirrorLeft = function (a) {\n\treturn {$: 3, a: a};\n};\nvar author$project$Obstacle$MirrorRight = function (a) {\n\treturn {$: 4, a: a};\n};\nvar author$project$Obstacle$Size = elm$core$Basics$identity;\nvar author$project$Obstacle$buildSize = elm$core$Basics$identity;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar author$project$LevelBuilder$parseObstacle = F2(\n\tfunction (coordinates, parsedObstacle) {\n\t\tswitch (parsedObstacle.$) {\n\t\t\tcase 8:\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\tcase 0:\n\t\t\t\tvar size = parsedObstacle.a;\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA2(\n\t\t\t\t\t\tauthor$project$Obstacle$Cluster,\n\t\t\t\t\t\tauthor$project$Obstacle$buildSize(size),\n\t\t\t\t\t\tcoordinates));\n\t\t\tcase 1:\n\t\t\t\tvar direction = parsedObstacle.a;\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA2(author$project$Obstacle$ChangeDirection, direction, coordinates));\n\t\t\tcase 3:\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tauthor$project$Obstacle$BlackHole(coordinates));\n\t\t\tcase 4:\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tauthor$project$Obstacle$Energizer(coordinates));\n\t\t\tcase 5:\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tauthor$project$Obstacle$Mirror(coordinates));\n\t\t\tcase 6:\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tauthor$project$Obstacle$MirrorLeft(coordinates));\n\t\t\tcase 7:\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tauthor$project$Obstacle$MirrorRight(coordinates));\n\t\t\tdefault:\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar author$project$LevelBuilder$uncurry = F2(\n\tfunction (f, _n0) {\n\t\tvar a = _n0.a;\n\t\tvar b = _n0.b;\n\t\treturn A2(f, a, b);\n\t});\nvar author$project$LevelParser$isPortal = function (obstacle) {\n\tif (obstacle.$ === 2) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar author$project$Obstacle$Portal = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Basics$not = _Basics_not;\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$Tuple$second = function (_n0) {\n\tvar y = _n0.b;\n\treturn y;\n};\nvar elm$core$List$partition = F2(\n\tfunction (pred, list) {\n\t\tvar step = F2(\n\t\t\tfunction (x, _n0) {\n\t\t\t\tvar trues = _n0.a;\n\t\t\t\tvar falses = _n0.b;\n\t\t\t\treturn pred(x) ? _Utils_Tuple2(\n\t\t\t\t\tA2(elm$core$List$cons, x, trues),\n\t\t\t\t\tfalses) : _Utils_Tuple2(\n\t\t\t\t\ttrues,\n\t\t\t\t\tA2(elm$core$List$cons, x, falses));\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tstep,\n\t\t\t_Utils_Tuple2(_List_Nil, _List_Nil),\n\t\t\tlist);\n\t});\nvar elm_community$list_extra$List$Extra$gatherWith = F2(\n\tfunction (testFn, list) {\n\t\tvar helper = F2(\n\t\t\tfunction (scattered, gathered) {\n\t\t\t\tif (!scattered.b) {\n\t\t\t\t\treturn elm$core$List$reverse(gathered);\n\t\t\t\t} else {\n\t\t\t\t\tvar toGather = scattered.a;\n\t\t\t\t\tvar population = scattered.b;\n\t\t\t\t\tvar _n1 = A2(\n\t\t\t\t\t\telm$core$List$partition,\n\t\t\t\t\t\ttestFn(toGather),\n\t\t\t\t\t\tpopulation);\n\t\t\t\t\tvar gathering = _n1.a;\n\t\t\t\t\tvar remaining = _n1.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\thelper,\n\t\t\t\t\t\tremaining,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t_Utils_Tuple2(toGather, gathering),\n\t\t\t\t\t\t\tgathered));\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(helper, list, _List_Nil);\n\t});\nvar author$project$LevelBuilder$parseObstacles = function (allObstacles) {\n\tvar samePortals = F2(\n\t\tfunction (o1, o2) {\n\t\t\tvar _n7 = _Utils_Tuple2(o1, o2);\n\t\t\tif ((_n7.a.$ === 2) && (_n7.b.$ === 2)) {\n\t\t\t\tvar n1 = _n7.a.a;\n\t\t\t\tvar n2 = _n7.b.a;\n\t\t\t\treturn _Utils_eq(n1, n2);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\tvar portals = A2(\n\t\telm$core$List$filter,\n\t\tA2(elm$core$Basics$composeL, author$project$LevelParser$isPortal, elm$core$Tuple$second),\n\t\tallObstacles);\n\tvar portalObstacles = A2(\n\t\telm$core$List$map,\n\t\tfunction (_n2) {\n\t\t\tvar o = _n2.a;\n\t\t\tvar os = _n2.b;\n\t\t\tvar _n3 = _Utils_Tuple2(o, os);\n\t\t\tif (_n3.b.b && (!_n3.b.b.b)) {\n\t\t\t\tvar _n4 = _n3.a;\n\t\t\t\tvar c1 = _n4.a;\n\t\t\t\tvar _n5 = _n3.b;\n\t\t\t\tvar _n6 = _n5.a;\n\t\t\t\tvar c2 = _n6.a;\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA2(author$project$Obstacle$Portal, c1, c2));\n\t\t\t} else {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t}\n\t\t},\n\t\tA2(\n\t\t\telm_community$list_extra$List$Extra$gatherWith,\n\t\t\tF2(\n\t\t\t\tfunction (_n0, _n1) {\n\t\t\t\t\tvar o1 = _n0.b;\n\t\t\t\t\tvar o2 = _n1.b;\n\t\t\t\t\treturn A2(samePortals, o1, o2);\n\t\t\t\t}),\n\t\t\tportals));\n\tvar nonPortals = A2(\n\t\telm$core$List$filter,\n\t\tA2(\n\t\t\telm$core$Basics$composeL,\n\t\t\tA2(elm$core$Basics$composeL, elm$core$Basics$not, author$project$LevelParser$isPortal),\n\t\t\telm$core$Tuple$second),\n\t\tallObstacles);\n\treturn _Utils_ap(\n\t\tA2(\n\t\t\telm$core$List$map,\n\t\t\tauthor$project$LevelBuilder$uncurry(author$project$LevelBuilder$parseObstacle),\n\t\t\tnonPortals),\n\t\tportalObstacles);\n};\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar author$project$LevelBuilder$flattenAndParseObstacles = function (rows) {\n\treturn author$project$LevelBuilder$catMaybes(\n\t\tauthor$project$LevelBuilder$parseObstacles(\n\t\t\telm$core$List$concat(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$indexedMap,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (y, row) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$List$indexedMap,\n\t\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\t\tfunction (x, col) {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tauthor$project$Coordinates$coordinatesFromPair(\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(x, y)),\n\t\t\t\t\t\t\t\t\t\t\tcol);\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\trow);\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$List$reverse(rows)))));\n};\nvar author$project$LevelBuilder$parsedLevelToLevel = author$project$Level$map(author$project$LevelBuilder$flattenAndParseObstacles);\nvar elm$parser$Parser$UnexpectedChar = {$: 11};\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$parser$Parser$Advanced$Bad = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$parser$Parser$Advanced$Good = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar elm$parser$Parser$Advanced$Parser = elm$core$Basics$identity;\nvar elm$parser$Parser$Advanced$AddRight = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$parser$Parser$Advanced$DeadEnd = F4(\n\tfunction (row, col, problem, contextStack) {\n\t\treturn {am: col, a0: contextStack, aG: problem, aO: row};\n\t});\nvar elm$parser$Parser$Advanced$Empty = {$: 0};\nvar elm$parser$Parser$Advanced$fromState = F2(\n\tfunction (s, x) {\n\t\treturn A2(\n\t\t\telm$parser$Parser$Advanced$AddRight,\n\t\t\telm$parser$Parser$Advanced$Empty,\n\t\t\tA4(elm$parser$Parser$Advanced$DeadEnd, s.aO, s.am, x, s.c));\n\t});\nvar elm$parser$Parser$Advanced$isSubChar = _Parser_isSubChar;\nvar elm$parser$Parser$Advanced$chompIf = F2(\n\tfunction (isGood, expecting) {\n\t\treturn function (s) {\n\t\t\tvar newOffset = A3(elm$parser$Parser$Advanced$isSubChar, isGood, s.b, s.a);\n\t\t\treturn _Utils_eq(newOffset, -1) ? A2(\n\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\tfalse,\n\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, expecting)) : (_Utils_eq(newOffset, -2) ? A3(\n\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\ttrue,\n\t\t\t\t0,\n\t\t\t\t{am: 1, c: s.c, d: s.d, b: s.b + 1, aO: s.aO + 1, a: s.a}) : A3(\n\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\ttrue,\n\t\t\t\t0,\n\t\t\t\t{am: s.am + 1, c: s.c, d: s.d, b: newOffset, aO: s.aO, a: s.a}));\n\t\t};\n\t});\nvar elm$parser$Parser$chompIf = function (isGood) {\n\treturn A2(elm$parser$Parser$Advanced$chompIf, isGood, elm$parser$Parser$UnexpectedChar);\n};\nvar elm$core$Basics$always = F2(\n\tfunction (a, _n0) {\n\t\treturn a;\n\t});\nvar elm$core$Basics$or = _Basics_or;\nvar elm$parser$Parser$Advanced$map2 = F3(\n\tfunction (func, _n0, _n1) {\n\t\tvar parseA = _n0;\n\t\tvar parseB = _n1;\n\t\treturn function (s0) {\n\t\t\tvar _n2 = parseA(s0);\n\t\t\tif (_n2.$ === 1) {\n\t\t\t\tvar p = _n2.a;\n\t\t\t\tvar x = _n2.b;\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t} else {\n\t\t\t\tvar p1 = _n2.a;\n\t\t\t\tvar a = _n2.b;\n\t\t\t\tvar s1 = _n2.c;\n\t\t\t\tvar _n3 = parseB(s1);\n\t\t\t\tif (_n3.$ === 1) {\n\t\t\t\t\tvar p2 = _n3.a;\n\t\t\t\t\tvar x = _n3.b;\n\t\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p1 || p2, x);\n\t\t\t\t} else {\n\t\t\t\t\tvar p2 = _n3.a;\n\t\t\t\t\tvar b = _n3.b;\n\t\t\t\t\tvar s2 = _n3.c;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\t\t\tp1 || p2,\n\t\t\t\t\t\tA2(func, a, b),\n\t\t\t\t\t\ts2);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\nvar elm$parser$Parser$Advanced$ignorer = F2(\n\tfunction (keepParser, ignoreParser) {\n\t\treturn A3(elm$parser$Parser$Advanced$map2, elm$core$Basics$always, keepParser, ignoreParser);\n\t});\nvar elm$parser$Parser$ignorer = elm$parser$Parser$Advanced$ignorer;\nvar elm$parser$Parser$Advanced$succeed = function (a) {\n\treturn function (s) {\n\t\treturn A3(elm$parser$Parser$Advanced$Good, false, a, s);\n\t};\n};\nvar elm$parser$Parser$succeed = elm$parser$Parser$Advanced$succeed;\nvar author$project$LevelParser$newlineParser = A2(\n\telm$parser$Parser$ignorer,\n\telm$parser$Parser$succeed(0),\n\telm$parser$Parser$chompIf(\n\t\tfunction (c) {\n\t\t\treturn c === '\\n';\n\t\t}));\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$parser$Parser$Advanced$chompWhileHelp = F5(\n\tfunction (isGood, offset, row, col, s0) {\n\t\tchompWhileHelp:\n\t\twhile (true) {\n\t\t\tvar newOffset = A3(elm$parser$Parser$Advanced$isSubChar, isGood, offset, s0.a);\n\t\t\tif (_Utils_eq(newOffset, -1)) {\n\t\t\t\treturn A3(\n\t\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\t\t_Utils_cmp(s0.b, offset) < 0,\n\t\t\t\t\t0,\n\t\t\t\t\t{am: col, c: s0.c, d: s0.d, b: offset, aO: row, a: s0.a});\n\t\t\t} else {\n\t\t\t\tif (_Utils_eq(newOffset, -2)) {\n\t\t\t\t\tvar $temp$isGood = isGood,\n\t\t\t\t\t\t$temp$offset = offset + 1,\n\t\t\t\t\t\t$temp$row = row + 1,\n\t\t\t\t\t\t$temp$col = 1,\n\t\t\t\t\t\t$temp$s0 = s0;\n\t\t\t\t\tisGood = $temp$isGood;\n\t\t\t\t\toffset = $temp$offset;\n\t\t\t\t\trow = $temp$row;\n\t\t\t\t\tcol = $temp$col;\n\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\tcontinue chompWhileHelp;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isGood = isGood,\n\t\t\t\t\t\t$temp$offset = newOffset,\n\t\t\t\t\t\t$temp$row = row,\n\t\t\t\t\t\t$temp$col = col + 1,\n\t\t\t\t\t\t$temp$s0 = s0;\n\t\t\t\t\tisGood = $temp$isGood;\n\t\t\t\t\toffset = $temp$offset;\n\t\t\t\t\trow = $temp$row;\n\t\t\t\t\tcol = $temp$col;\n\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\tcontinue chompWhileHelp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$chompWhile = function (isGood) {\n\treturn function (s) {\n\t\treturn A5(elm$parser$Parser$Advanced$chompWhileHelp, isGood, s.b, s.aO, s.am, s);\n\t};\n};\nvar elm$parser$Parser$chompWhile = elm$parser$Parser$Advanced$chompWhile;\nvar elm$parser$Parser$Expecting = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$parser$Parser$Advanced$Token = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$parser$Parser$toToken = function (str) {\n\treturn A2(\n\t\telm$parser$Parser$Advanced$Token,\n\t\tstr,\n\t\telm$parser$Parser$Expecting(str));\n};\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$parser$Parser$Advanced$isSubString = _Parser_isSubString;\nvar elm$parser$Parser$Advanced$token = function (_n0) {\n\tvar str = _n0.a;\n\tvar expecting = _n0.b;\n\tvar progress = !elm$core$String$isEmpty(str);\n\treturn function (s) {\n\t\tvar _n1 = A5(elm$parser$Parser$Advanced$isSubString, str, s.b, s.aO, s.am, s.a);\n\t\tvar newOffset = _n1.a;\n\t\tvar newRow = _n1.b;\n\t\tvar newCol = _n1.c;\n\t\treturn _Utils_eq(newOffset, -1) ? A2(\n\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\tfalse,\n\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, expecting)) : A3(\n\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\tprogress,\n\t\t\t0,\n\t\t\t{am: newCol, c: s.c, d: s.d, b: newOffset, aO: newRow, a: s.a});\n\t};\n};\nvar elm$parser$Parser$token = function (str) {\n\treturn elm$parser$Parser$Advanced$token(\n\t\telm$parser$Parser$toToken(str));\n};\nvar author$project$LevelParser$animationParser = A2(\n\telm$parser$Parser$ignorer,\n\tA2(\n\t\telm$parser$Parser$ignorer,\n\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(0),\n\t\t\telm$parser$Parser$token('intro animation: ')),\n\t\telm$parser$Parser$chompWhile(\n\t\t\tfunction (c) {\n\t\t\t\treturn elm$core$Char$isAlphaNum(c) || (c === ' ');\n\t\t\t})),\n\tauthor$project$LevelParser$newlineParser);\nvar author$project$Coordinates$Height = elm$core$Basics$identity;\nvar author$project$Coordinates$buildHeight = elm$core$Basics$identity;\nvar author$project$Coordinates$Width = elm$core$Basics$identity;\nvar author$project$Coordinates$buildWidth = elm$core$Basics$identity;\nvar author$project$Level$buildLevel = F4(\n\tfunction (p, width, height, obstacles) {\n\t\treturn {W: height, x: obstacles, Y: p, _: width};\n\t});\nvar elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar author$project$LevelParser$buildLevel = F2(\n\tfunction (par, rows) {\n\t\tvar width = elm$core$List$length(\n\t\t\tA2(\n\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t_List_Nil,\n\t\t\t\telm$core$List$head(rows)));\n\t\tvar height = elm$core$List$length(rows);\n\t\treturn A4(\n\t\t\tauthor$project$Level$buildLevel,\n\t\t\tpar,\n\t\t\tauthor$project$Coordinates$buildWidth(width),\n\t\t\tauthor$project$Coordinates$buildHeight(height),\n\t\t\trows);\n\t});\nvar author$project$Level$Par = elm$core$Basics$identity;\nvar elm$parser$Parser$ExpectingInt = {$: 1};\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$parser$Parser$Advanced$consumeBase = _Parser_consumeBase;\nvar elm$parser$Parser$Advanced$consumeBase16 = _Parser_consumeBase16;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$toFloat = _String_toFloat;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$parser$Parser$Advanced$bumpOffset = F2(\n\tfunction (newOffset, s) {\n\t\treturn {am: s.am + (newOffset - s.b), c: s.c, d: s.d, b: newOffset, aO: s.aO, a: s.a};\n\t});\nvar elm$parser$Parser$Advanced$chompBase10 = _Parser_chompBase10;\nvar elm$parser$Parser$Advanced$isAsciiCode = _Parser_isAsciiCode;\nvar elm$parser$Parser$Advanced$consumeExp = F2(\n\tfunction (offset, src) {\n\t\tif (A3(elm$parser$Parser$Advanced$isAsciiCode, 101, offset, src) || A3(elm$parser$Parser$Advanced$isAsciiCode, 69, offset, src)) {\n\t\t\tvar eOffset = offset + 1;\n\t\t\tvar expOffset = (A3(elm$parser$Parser$Advanced$isAsciiCode, 43, eOffset, src) || A3(elm$parser$Parser$Advanced$isAsciiCode, 45, eOffset, src)) ? (eOffset + 1) : eOffset;\n\t\t\tvar newOffset = A2(elm$parser$Parser$Advanced$chompBase10, expOffset, src);\n\t\t\treturn _Utils_eq(expOffset, newOffset) ? (-newOffset) : newOffset;\n\t\t} else {\n\t\t\treturn offset;\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$consumeDotAndExp = F2(\n\tfunction (offset, src) {\n\t\treturn A3(elm$parser$Parser$Advanced$isAsciiCode, 46, offset, src) ? A2(\n\t\t\telm$parser$Parser$Advanced$consumeExp,\n\t\t\tA2(elm$parser$Parser$Advanced$chompBase10, offset + 1, src),\n\t\t\tsrc) : A2(elm$parser$Parser$Advanced$consumeExp, offset, src);\n\t});\nvar elm$parser$Parser$Advanced$finalizeInt = F5(\n\tfunction (invalid, handler, startOffset, _n0, s) {\n\t\tvar endOffset = _n0.a;\n\t\tvar n = _n0.b;\n\t\tif (handler.$ === 1) {\n\t\t\tvar x = handler.a;\n\t\t\treturn A2(\n\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\ttrue,\n\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, x));\n\t\t} else {\n\t\t\tvar toValue = handler.a;\n\t\t\treturn _Utils_eq(startOffset, endOffset) ? A2(\n\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\t_Utils_cmp(s.b, startOffset) < 0,\n\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, invalid)) : A3(\n\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\ttrue,\n\t\t\t\ttoValue(n),\n\t\t\t\tA2(elm$parser$Parser$Advanced$bumpOffset, endOffset, s));\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$fromInfo = F4(\n\tfunction (row, col, x, context) {\n\t\treturn A2(\n\t\t\telm$parser$Parser$Advanced$AddRight,\n\t\t\telm$parser$Parser$Advanced$Empty,\n\t\t\tA4(elm$parser$Parser$Advanced$DeadEnd, row, col, x, context));\n\t});\nvar elm$parser$Parser$Advanced$finalizeFloat = F6(\n\tfunction (invalid, expecting, intSettings, floatSettings, intPair, s) {\n\t\tvar intOffset = intPair.a;\n\t\tvar floatOffset = A2(elm$parser$Parser$Advanced$consumeDotAndExp, intOffset, s.a);\n\t\tif (floatOffset < 0) {\n\t\t\treturn A2(\n\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\ttrue,\n\t\t\t\tA4(elm$parser$Parser$Advanced$fromInfo, s.aO, s.am - (floatOffset + s.b), invalid, s.c));\n\t\t} else {\n\t\t\tif (_Utils_eq(s.b, floatOffset)) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\t\tfalse,\n\t\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, expecting));\n\t\t\t} else {\n\t\t\t\tif (_Utils_eq(intOffset, floatOffset)) {\n\t\t\t\t\treturn A5(elm$parser$Parser$Advanced$finalizeInt, invalid, intSettings, s.b, intPair, s);\n\t\t\t\t} else {\n\t\t\t\t\tif (floatSettings.$ === 1) {\n\t\t\t\t\t\tvar x = floatSettings.a;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, invalid));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar toValue = floatSettings.a;\n\t\t\t\t\t\tvar _n1 = elm$core$String$toFloat(\n\t\t\t\t\t\t\tA3(elm$core$String$slice, s.b, floatOffset, s.a));\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, invalid));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar n = _n1.a;\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\ttoValue(n),\n\t\t\t\t\t\t\t\tA2(elm$parser$Parser$Advanced$bumpOffset, floatOffset, s));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$number = function (c) {\n\treturn function (s) {\n\t\tif (A3(elm$parser$Parser$Advanced$isAsciiCode, 48, s.b, s.a)) {\n\t\t\tvar zeroOffset = s.b + 1;\n\t\t\tvar baseOffset = zeroOffset + 1;\n\t\t\treturn A3(elm$parser$Parser$Advanced$isAsciiCode, 120, zeroOffset, s.a) ? A5(\n\t\t\t\telm$parser$Parser$Advanced$finalizeInt,\n\t\t\t\tc.a9,\n\t\t\t\tc.au,\n\t\t\t\tbaseOffset,\n\t\t\t\tA2(elm$parser$Parser$Advanced$consumeBase16, baseOffset, s.a),\n\t\t\t\ts) : (A3(elm$parser$Parser$Advanced$isAsciiCode, 111, zeroOffset, s.a) ? A5(\n\t\t\t\telm$parser$Parser$Advanced$finalizeInt,\n\t\t\t\tc.a9,\n\t\t\t\tc.aC,\n\t\t\t\tbaseOffset,\n\t\t\t\tA3(elm$parser$Parser$Advanced$consumeBase, 8, baseOffset, s.a),\n\t\t\t\ts) : (A3(elm$parser$Parser$Advanced$isAsciiCode, 98, zeroOffset, s.a) ? A5(\n\t\t\t\telm$parser$Parser$Advanced$finalizeInt,\n\t\t\t\tc.a9,\n\t\t\t\tc.aj,\n\t\t\t\tbaseOffset,\n\t\t\t\tA3(elm$parser$Parser$Advanced$consumeBase, 2, baseOffset, s.a),\n\t\t\t\ts) : A6(\n\t\t\t\telm$parser$Parser$Advanced$finalizeFloat,\n\t\t\t\tc.a9,\n\t\t\t\tc.aq,\n\t\t\t\tc.ax,\n\t\t\t\tc.ar,\n\t\t\t\t_Utils_Tuple2(zeroOffset, 0),\n\t\t\t\ts)));\n\t\t} else {\n\t\t\treturn A6(\n\t\t\t\telm$parser$Parser$Advanced$finalizeFloat,\n\t\t\t\tc.a9,\n\t\t\t\tc.aq,\n\t\t\t\tc.ax,\n\t\t\t\tc.ar,\n\t\t\t\tA3(elm$parser$Parser$Advanced$consumeBase, 10, s.b, s.a),\n\t\t\t\ts);\n\t\t}\n\t};\n};\nvar elm$parser$Parser$Advanced$int = F2(\n\tfunction (expecting, invalid) {\n\t\treturn elm$parser$Parser$Advanced$number(\n\t\t\t{\n\t\t\t\taj: elm$core$Result$Err(invalid),\n\t\t\t\taq: expecting,\n\t\t\t\tar: elm$core$Result$Err(invalid),\n\t\t\t\tau: elm$core$Result$Err(invalid),\n\t\t\t\tax: elm$core$Result$Ok(elm$core$Basics$identity),\n\t\t\t\ta9: invalid,\n\t\t\t\taC: elm$core$Result$Err(invalid)\n\t\t\t});\n\t});\nvar elm$parser$Parser$int = A2(elm$parser$Parser$Advanced$int, elm$parser$Parser$ExpectingInt, elm$parser$Parser$ExpectingInt);\nvar elm$parser$Parser$Advanced$keeper = F2(\n\tfunction (parseFunc, parseArg) {\n\t\treturn A3(elm$parser$Parser$Advanced$map2, elm$core$Basics$apL, parseFunc, parseArg);\n\t});\nvar elm$parser$Parser$keeper = elm$parser$Parser$Advanced$keeper;\nvar author$project$LevelParser$parParser = A2(\n\telm$parser$Parser$keeper,\n\tA2(\n\t\telm$parser$Parser$ignorer,\n\t\telm$parser$Parser$succeed(elm$core$Basics$identity),\n\t\telm$parser$Parser$token('par: ')),\n\tA2(elm$parser$Parser$ignorer, elm$parser$Parser$int, author$project$LevelParser$newlineParser));\nvar elm$parser$Parser$Done = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$parser$Parser$Loop = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$parser$Parser$Advanced$map = F2(\n\tfunction (func, _n0) {\n\t\tvar parse = _n0;\n\t\treturn function (s0) {\n\t\t\tvar _n1 = parse(s0);\n\t\t\tif (!_n1.$) {\n\t\t\t\tvar p = _n1.a;\n\t\t\t\tvar a = _n1.b;\n\t\t\t\tvar s1 = _n1.c;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\t\tp,\n\t\t\t\t\tfunc(a),\n\t\t\t\t\ts1);\n\t\t\t} else {\n\t\t\t\tvar p = _n1.a;\n\t\t\t\tvar x = _n1.b;\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t}\n\t\t};\n\t});\nvar elm$parser$Parser$map = elm$parser$Parser$Advanced$map;\nvar elm$parser$Parser$Advanced$Done = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$parser$Parser$Advanced$Loop = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$parser$Parser$toAdvancedStep = function (step) {\n\tif (!step.$) {\n\t\tvar s = step.a;\n\t\treturn elm$parser$Parser$Advanced$Loop(s);\n\t} else {\n\t\tvar a = step.a;\n\t\treturn elm$parser$Parser$Advanced$Done(a);\n\t}\n};\nvar elm$parser$Parser$Advanced$loopHelp = F4(\n\tfunction (p, state, callback, s0) {\n\t\tloopHelp:\n\t\twhile (true) {\n\t\t\tvar _n0 = callback(state);\n\t\t\tvar parse = _n0;\n\t\t\tvar _n1 = parse(s0);\n\t\t\tif (!_n1.$) {\n\t\t\t\tvar p1 = _n1.a;\n\t\t\t\tvar step = _n1.b;\n\t\t\t\tvar s1 = _n1.c;\n\t\t\t\tif (!step.$) {\n\t\t\t\t\tvar newState = step.a;\n\t\t\t\t\tvar $temp$p = p || p1,\n\t\t\t\t\t\t$temp$state = newState,\n\t\t\t\t\t\t$temp$callback = callback,\n\t\t\t\t\t\t$temp$s0 = s1;\n\t\t\t\t\tp = $temp$p;\n\t\t\t\t\tstate = $temp$state;\n\t\t\t\t\tcallback = $temp$callback;\n\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\tcontinue loopHelp;\n\t\t\t\t} else {\n\t\t\t\t\tvar result = step.a;\n\t\t\t\t\treturn A3(elm$parser$Parser$Advanced$Good, p || p1, result, s1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar p1 = _n1.a;\n\t\t\t\tvar x = _n1.b;\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p || p1, x);\n\t\t\t}\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$loop = F2(\n\tfunction (state, callback) {\n\t\treturn function (s) {\n\t\t\treturn A4(elm$parser$Parser$Advanced$loopHelp, false, state, callback, s);\n\t\t};\n\t});\nvar elm$parser$Parser$loop = F2(\n\tfunction (state, callback) {\n\t\treturn A2(\n\t\t\telm$parser$Parser$Advanced$loop,\n\t\t\tstate,\n\t\t\tfunction (s) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$parser$Parser$map,\n\t\t\t\t\telm$parser$Parser$toAdvancedStep,\n\t\t\t\t\tcallback(s));\n\t\t\t});\n\t});\nvar elm$parser$Parser$Advanced$Append = F2(\n\tfunction (a, b) {\n\t\treturn {$: 2, a: a, b: b};\n\t});\nvar elm$parser$Parser$Advanced$oneOfHelp = F3(\n\tfunction (s0, bag, parsers) {\n\t\toneOfHelp:\n\t\twhile (true) {\n\t\t\tif (!parsers.b) {\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, false, bag);\n\t\t\t} else {\n\t\t\t\tvar parse = parsers.a;\n\t\t\t\tvar remainingParsers = parsers.b;\n\t\t\t\tvar _n1 = parse(s0);\n\t\t\t\tif (!_n1.$) {\n\t\t\t\t\tvar step = _n1;\n\t\t\t\t\treturn step;\n\t\t\t\t} else {\n\t\t\t\t\tvar step = _n1;\n\t\t\t\t\tvar p = step.a;\n\t\t\t\t\tvar x = step.b;\n\t\t\t\t\tif (p) {\n\t\t\t\t\t\treturn step;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$s0 = s0,\n\t\t\t\t\t\t\t$temp$bag = A2(elm$parser$Parser$Advanced$Append, bag, x),\n\t\t\t\t\t\t\t$temp$parsers = remainingParsers;\n\t\t\t\t\t\ts0 = $temp$s0;\n\t\t\t\t\t\tbag = $temp$bag;\n\t\t\t\t\t\tparsers = $temp$parsers;\n\t\t\t\t\t\tcontinue oneOfHelp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$oneOf = function (parsers) {\n\treturn function (s) {\n\t\treturn A3(elm$parser$Parser$Advanced$oneOfHelp, s, elm$parser$Parser$Advanced$Empty, parsers);\n\t};\n};\nvar elm$parser$Parser$oneOf = elm$parser$Parser$Advanced$oneOf;\nvar author$project$LevelParser$many = function (parser) {\n\tvar f = function (acc) {\n\t\treturn elm$parser$Parser$oneOf(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$parser$Parser$keeper,\n\t\t\t\t\telm$parser$Parser$succeed(\n\t\t\t\t\t\tfunction (a) {\n\t\t\t\t\t\t\treturn elm$parser$Parser$Loop(\n\t\t\t\t\t\t\t\tA2(elm$core$List$cons, a, acc));\n\t\t\t\t\t\t}),\n\t\t\t\t\tparser),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$parser$Parser$map,\n\t\t\t\t\telm$core$Basics$always(\n\t\t\t\t\t\telm$parser$Parser$Done(\n\t\t\t\t\t\t\telm$core$List$reverse(acc))),\n\t\t\t\t\telm$parser$Parser$succeed(0))\n\t\t\t\t]));\n\t};\n\treturn A2(elm$parser$Parser$loop, _List_Nil, f);\n};\nvar author$project$Direction$Down = 1;\nvar author$project$Direction$Left = 2;\nvar author$project$Direction$Right = 3;\nvar author$project$Direction$Up = 0;\nvar author$project$LevelParser$BlackHole = {$: 3};\nvar author$project$LevelParser$ChangeDirection = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$LevelParser$Cluster = function (a) {\n\treturn {$: 0, a: a};\n};\nvar author$project$LevelParser$Empty = {$: 8};\nvar author$project$LevelParser$Energizer = {$: 4};\nvar author$project$LevelParser$Mirror = {$: 5};\nvar author$project$LevelParser$MirrorLeft = {$: 6};\nvar author$project$LevelParser$MirrorRight = {$: 7};\nvar author$project$LevelParser$Portal = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar elm$core$String$toInt = _String_toInt;\nvar elm$parser$Parser$Advanced$andThen = F2(\n\tfunction (callback, _n0) {\n\t\tvar parseA = _n0;\n\t\treturn function (s0) {\n\t\t\tvar _n1 = parseA(s0);\n\t\t\tif (_n1.$ === 1) {\n\t\t\t\tvar p = _n1.a;\n\t\t\t\tvar x = _n1.b;\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t} else {\n\t\t\t\tvar p1 = _n1.a;\n\t\t\t\tvar a = _n1.b;\n\t\t\t\tvar s1 = _n1.c;\n\t\t\t\tvar _n2 = callback(a);\n\t\t\t\tvar parseB = _n2;\n\t\t\t\tvar _n3 = parseB(s1);\n\t\t\t\tif (_n3.$ === 1) {\n\t\t\t\t\tvar p2 = _n3.a;\n\t\t\t\t\tvar x = _n3.b;\n\t\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p1 || p2, x);\n\t\t\t\t} else {\n\t\t\t\t\tvar p2 = _n3.a;\n\t\t\t\t\tvar b = _n3.b;\n\t\t\t\t\tvar s2 = _n3.c;\n\t\t\t\t\treturn A3(elm$parser$Parser$Advanced$Good, p1 || p2, b, s2);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\nvar elm$parser$Parser$andThen = elm$parser$Parser$Advanced$andThen;\nvar elm$parser$Parser$Advanced$mapChompedString = F2(\n\tfunction (func, _n0) {\n\t\tvar parse = _n0;\n\t\treturn function (s0) {\n\t\t\tvar _n1 = parse(s0);\n\t\t\tif (_n1.$ === 1) {\n\t\t\t\tvar p = _n1.a;\n\t\t\t\tvar x = _n1.b;\n\t\t\t\treturn A2(elm$parser$Parser$Advanced$Bad, p, x);\n\t\t\t} else {\n\t\t\t\tvar p = _n1.a;\n\t\t\t\tvar a = _n1.b;\n\t\t\t\tvar s1 = _n1.c;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$parser$Parser$Advanced$Good,\n\t\t\t\t\tp,\n\t\t\t\t\tA2(\n\t\t\t\t\t\tfunc,\n\t\t\t\t\t\tA3(elm$core$String$slice, s0.b, s1.b, s0.a),\n\t\t\t\t\t\ta),\n\t\t\t\t\ts1);\n\t\t\t}\n\t\t};\n\t});\nvar elm$parser$Parser$Advanced$getChompedString = function (parser) {\n\treturn A2(elm$parser$Parser$Advanced$mapChompedString, elm$core$Basics$always, parser);\n};\nvar elm$parser$Parser$getChompedString = elm$parser$Parser$Advanced$getChompedString;\nvar elm$parser$Parser$Problem = function (a) {\n\treturn {$: 12, a: a};\n};\nvar elm$parser$Parser$Advanced$problem = function (x) {\n\treturn function (s) {\n\t\treturn A2(\n\t\t\telm$parser$Parser$Advanced$Bad,\n\t\t\tfalse,\n\t\t\tA2(elm$parser$Parser$Advanced$fromState, s, x));\n\t};\n};\nvar elm$parser$Parser$problem = function (msg) {\n\treturn elm$parser$Parser$Advanced$problem(\n\t\telm$parser$Parser$Problem(msg));\n};\nvar author$project$LevelParser$singleCharacterInt = A2(\n\telm$parser$Parser$andThen,\n\tfunction (d) {\n\t\treturn A2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\telm$parser$Parser$problem('unable to parse'),\n\t\t\tA2(\n\t\t\t\telm$core$Maybe$map,\n\t\t\t\telm$parser$Parser$succeed,\n\t\t\t\telm$core$String$toInt(d)));\n\t},\n\telm$parser$Parser$getChompedString(\n\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(0),\n\t\t\telm$parser$Parser$chompIf(elm$core$Char$isDigit))));\nvar author$project$LevelParser$obstacleParser = elm$parser$Parser$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$Empty),\n\t\t\telm$parser$Parser$token('- ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$Energizer),\n\t\t\telm$parser$Parser$token('e ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$keeper,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$Cluster),\n\t\t\tA2(\n\t\t\t\telm$parser$Parser$ignorer,\n\t\t\t\telm$parser$Parser$int,\n\t\t\t\telm$parser$Parser$chompIf(\n\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\treturn c === ' ';\n\t\t\t\t\t}))),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(\n\t\t\t\tauthor$project$LevelParser$ChangeDirection(1)),\n\t\t\telm$parser$Parser$token('d ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(\n\t\t\t\tauthor$project$LevelParser$ChangeDirection(0)),\n\t\t\telm$parser$Parser$token('u ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(\n\t\t\t\tauthor$project$LevelParser$ChangeDirection(3)),\n\t\t\telm$parser$Parser$token('r ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(\n\t\t\t\tauthor$project$LevelParser$ChangeDirection(2)),\n\t\t\telm$parser$Parser$token('l ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$BlackHole),\n\t\t\telm$parser$Parser$token('b ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$MirrorLeft),\n\t\t\telm$parser$Parser$token('mL')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$MirrorRight),\n\t\t\telm$parser$Parser$token('mR')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$Mirror),\n\t\t\telm$parser$Parser$token('m ')),\n\t\t\tA2(\n\t\t\telm$parser$Parser$keeper,\n\t\t\tA2(\n\t\t\t\telm$parser$Parser$ignorer,\n\t\t\t\telm$parser$Parser$succeed(author$project$LevelParser$Portal),\n\t\t\t\telm$parser$Parser$token('w')),\n\t\t\tauthor$project$LevelParser$singleCharacterInt)\n\t\t]));\nvar author$project$LevelParser$rowParser = author$project$LevelParser$many(author$project$LevelParser$obstacleParser);\nvar author$project$LevelParser$sepBy = F2(\n\tfunction (parser, separator) {\n\t\tvar f = function (acc) {\n\t\t\treturn elm$parser$Parser$oneOf(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$parser$Parser$keeper,\n\t\t\t\t\t\telm$parser$Parser$succeed(\n\t\t\t\t\t\t\tfunction (a) {\n\t\t\t\t\t\t\t\treturn elm$parser$Parser$Loop(\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$cons, a, acc));\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tA2(elm$parser$Parser$ignorer, parser, separator)),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$parser$Parser$map,\n\t\t\t\t\t\telm$core$Basics$always(\n\t\t\t\t\t\t\telm$parser$Parser$Done(\n\t\t\t\t\t\t\t\telm$core$List$reverse(acc))),\n\t\t\t\t\t\telm$parser$Parser$succeed(0))\n\t\t\t\t\t]));\n\t\t};\n\t\treturn A2(elm$parser$Parser$loop, _List_Nil, f);\n\t});\nvar author$project$LevelParser$rowsParser = A2(author$project$LevelParser$sepBy, author$project$LevelParser$rowParser, author$project$LevelParser$newlineParser);\nvar author$project$LevelParser$levelParser = A2(\n\telm$parser$Parser$keeper,\n\tA2(\n\t\telm$parser$Parser$keeper,\n\t\tA2(\n\t\t\telm$parser$Parser$ignorer,\n\t\t\telm$parser$Parser$succeed(author$project$LevelParser$buildLevel),\n\t\t\tauthor$project$LevelParser$animationParser),\n\t\tauthor$project$LevelParser$parParser),\n\tauthor$project$LevelParser$rowsParser);\nvar author$project$LevelParser$levelsParser = A2(\n\telm$parser$Parser$keeper,\n\tA2(\n\t\telm$parser$Parser$ignorer,\n\t\telm$parser$Parser$succeed(elm$core$Basics$identity),\n\t\tauthor$project$LevelParser$newlineParser),\n\tauthor$project$LevelParser$many(author$project$LevelParser$levelParser));\nvar elm$core$Result$mapError = F2(\n\tfunction (f, result) {\n\t\tif (!result.$) {\n\t\t\tvar v = result.a;\n\t\t\treturn elm$core$Result$Ok(v);\n\t\t} else {\n\t\t\tvar e = result.a;\n\t\t\treturn elm$core$Result$Err(\n\t\t\t\tf(e));\n\t\t}\n\t});\nvar elm$parser$Parser$deadEndsToString = function (deadEnds) {\n\treturn 'TODO deadEndsToString';\n};\nvar elm$parser$Parser$DeadEnd = F3(\n\tfunction (row, col, problem) {\n\t\treturn {am: col, aG: problem, aO: row};\n\t});\nvar elm$parser$Parser$problemToDeadEnd = function (p) {\n\treturn A3(elm$parser$Parser$DeadEnd, p.aO, p.am, p.aG);\n};\nvar elm$parser$Parser$Advanced$bagToList = F2(\n\tfunction (bag, list) {\n\t\tbagToList:\n\t\twhile (true) {\n\t\t\tswitch (bag.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn list;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar bag1 = bag.a;\n\t\t\t\t\tvar x = bag.b;\n\t\t\t\t\tvar $temp$bag = bag1,\n\t\t\t\t\t\t$temp$list = A2(elm$core$List$cons, x, list);\n\t\t\t\t\tbag = $temp$bag;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue bagToList;\n\t\t\t\tdefault:\n\t\t\t\t\tvar bag1 = bag.a;\n\t\t\t\t\tvar bag2 = bag.b;\n\t\t\t\t\tvar $temp$bag = bag1,\n\t\t\t\t\t\t$temp$list = A2(elm$parser$Parser$Advanced$bagToList, bag2, list);\n\t\t\t\t\tbag = $temp$bag;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue bagToList;\n\t\t\t}\n\t\t}\n\t});\nvar elm$parser$Parser$Advanced$run = F2(\n\tfunction (_n0, src) {\n\t\tvar parse = _n0;\n\t\tvar _n1 = parse(\n\t\t\t{am: 1, c: _List_Nil, d: 1, b: 0, aO: 1, a: src});\n\t\tif (!_n1.$) {\n\t\t\tvar value = _n1.b;\n\t\t\treturn elm$core$Result$Ok(value);\n\t\t} else {\n\t\t\tvar bag = _n1.b;\n\t\t\treturn elm$core$Result$Err(\n\t\t\t\tA2(elm$parser$Parser$Advanced$bagToList, bag, _List_Nil));\n\t\t}\n\t});\nvar elm$parser$Parser$run = F2(\n\tfunction (parser, source) {\n\t\tvar _n0 = A2(elm$parser$Parser$Advanced$run, parser, source);\n\t\tif (!_n0.$) {\n\t\t\tvar a = _n0.a;\n\t\t\treturn elm$core$Result$Ok(a);\n\t\t} else {\n\t\t\tvar problems = _n0.a;\n\t\t\treturn elm$core$Result$Err(\n\t\t\t\tA2(elm$core$List$map, elm$parser$Parser$problemToDeadEnd, problems));\n\t\t}\n\t});\nvar author$project$LevelParser$parseLevels = function (input) {\n\treturn A2(\n\t\telm$core$Result$mapError,\n\t\telm$parser$Parser$deadEndsToString,\n\t\tA2(elm$parser$Parser$run, author$project$LevelParser$levelsParser, input));\n};\nvar elm$core$Result$toMaybe = function (result) {\n\tif (!result.$) {\n\t\tvar v = result.a;\n\t\treturn elm$core$Maybe$Just(v);\n\t} else {\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n};\nvar author$project$Game$loadLevels = function (input) {\n\tvar parsedBoards = author$project$LevelParser$parseLevels(input);\n\treturn A2(\n\t\telm$core$Maybe$withDefault,\n\t\t_List_Nil,\n\t\tA2(\n\t\t\telm$core$Maybe$map,\n\t\t\telm$core$List$map(author$project$LevelBuilder$parsedLevelToLevel),\n\t\t\telm$core$Result$toMaybe(parsedBoards)));\n};\nvar author$project$Game$loadBoards = A2(\n\telm$core$Basics$composeL,\n\telm$core$List$indexedMap(author$project$Game$buildBoardFromLevel),\n\tauthor$project$Game$loadLevels);\nvar author$project$Levels$levels = '\\nintro animation: Tutorial 1\\npar: 10\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- 1 - 2 - 3 - 4 \\n- - - - - - - - \\n- 1 - 2 - 3 - 4 \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 2\\npar: 8\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- d - 2 - 3 - l \\n- - - - - - - - \\n- 1 - 2 - 3 - 4 \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 3\\npar: 8\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- m - 2 - 3 - 4 \\n- - - - - - - - \\n- 1 - 2 - 3 - m \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 4\\npar: 8\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- mR- 2 - 3 - 4 \\n- - - - - - - - \\n- 1 - 2 - 3 - mR\\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 5\\npar: 13\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- 1 - 2 - 3 - 4 \\n- b - b - b - b \\n- 1 - 2 - 3 - 4 \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 6\\npar: 8\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- 1 - 2 - 3 - e \\n- - - - - - - - \\n- e - 2 - 3 - 4 \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 7\\npar: 8\\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- 1 - 2 - 3 - w0\\n- - - - - - - - \\n- w0- 2 - 3 - 4 \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: Tutorial 8\\npar: 7\\n- - - - - - - - \\n- - - - - - - - \\n- d - 3 1 3 - l \\n- - - - - - - - \\n- 3 - 4 2 4 - 3 \\n- - - - - - - - \\n- r - 3 1 3 - u \\n- - - - - - - - \\nintro animation: Tutorial 9\\npar: 6\\n- - - - - - - - \\n- - - - - - - - \\n- d - 3 1 3 - w2\\n- - - - - - - - \\n- 3 - 4 2 4 - 3 \\n- - - - - - - - \\n- w2- 3 1 3 - u \\n- - - - - - - - \\nintro animation: None\\npar: 6\\n- - - - - - - d \\n- - - w0- 3 1 1 \\n- b - - - - - e \\n- - - 4 - 4 - - \\n- - - - - - - 2 \\n- b - 1 - e - - \\n- r - - - 3 - w0\\n- - - u - - - - \\nintro animation: None\\npar: 4\\nmR- 4 - - e - - \\ne - - 4 - - - 2 \\n- 3 - w0- 4 - - \\n- - - - - - - e \\ne 1 - m - - - - \\n- - - - - 3 - l \\n- - - - - - - - \\n- w0- - 2 2 - m \\nintro animation: None\\npar: 4\\n- - - - - - - - \\n- - - - - - - e \\n- - 4 - e - - l \\nd - - l 3 - l m \\n4 - b - - - 2 - \\n- r - - - - 4 - \\nmL4 - - - - 2 mL\\nm - - 3 - - 2 l \\nintro animation: None\\npar: 5\\nd - - - 4 - mL- \\n- - - - - - - - \\n- 2 - - e - - w0\\nr - - 4 - - 3 - \\n- - - - - - - - \\n- - - - - - 3 - \\nw0- - 3 - - - - \\n- - - - - - mR- \\nintro animation: None\\npar: 8\\n4 3 - - - - 3 4 \\n2 w0- - - - w12 \\n- - - - - - - - \\nmL- - 3 3 - - mR\\nmR- - 3 3 - - mL\\n- - - - - - - - \\n2 w1- - - - w02 \\n4 3 - - - - 3 4 \\nintro animation: None\\npar: 6\\n- - - - - - - 3 \\nm 3 - 2 - - - 3 \\n- - 3 e - 3 - 2 \\n- - - - - - - - \\n- 2 - mR- - - - \\n- - - - - - - - \\n- 3 - 3 - - - l \\n- - - - - - - - \\nintro animation: None\\npar: 5\\n- - - - - - - - \\n- - - mR2 - l - \\n- - - - - - - - \\n- 3 - 1 3 - 4 m \\n- 3 - 3 3 - - - \\n- - - 2 - - - - \\n- - - m - - - - \\n- - - - - - - - \\nintro animation: None\\npar: 4\\n- - - - - - - - \\n- mR1 3 1 2 - - \\n3 e 3 1 4 4 4 m \\n- mL1 3 1 2 - - \\n- - 3 3 - - - - \\n- - 4 4 - - - - \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: None\\npar: 7\\n- - - - - - - - \\n- - d 2 3 l - - \\n- - 3 2 2 3 - - \\n- - d 2 2 u - - \\n- - - - - - - - \\n- - 3 mRmL3 - - \\n- - - - - - - - \\n- - - - - - - - \\nintro animation: None\\npar: 4\\n- - - - - - - - \\n- 3 - - - mL- - \\n- - r - - - d - \\n- - 4 - - 4 - - \\n- 2 u - - l - - \\n- - - - - - - - \\n- - - 2 - - 3 - \\n- u - 3 - - l - \\nintro animation: None \\npar: 4\\n3 - - - - - mL- \\n- w2- 2 - - - mL\\n- - - - - - - - \\n- - - - - - - - \\n- - - w1- - - - \\n- 2 - - - - w2- \\n- - w1- - - - 4 \\nmL- 4 - e - - mR\\nintro animation: None\\npar: 4\\nm b b b b b b m \\nm 2 3 d - - mLm \\nm 1 1 mR- - - m \\nm - 3 - 3 3 u m \\nm mRu - 4 - w0m \\nm w0- - d l 3 m \\nm - - 4 3 3 u m \\nm b b b b b b m \\nintro animation: None \\npar: 5\\nmR- - 4 - - mL- \\n- - - - - - - - \\n3 - w2- 4 - w1- \\n- - r - - - - - \\n- w1- - - - - - \\n- - - 3 - w2- 4 \\n- - - - - - - - \\n- 3 - - - - - mR\\nintro animation: None\\npar: 5\\n- m mL- 4 - 3 m \\nb - 4 - 4 e - - \\nw02 - 3 - 4 2 l \\nd w13 - 3 - m - \\nr 2 - 3 - 3 - w1\\n- w0- 4 3 - 4 - \\nb m 2 e 3 3 2 - \\nb - 3 - m - - b \\nintro animation: None\\npar: 9\\nb 3 b - b - - b \\n- u 2 3 l 3 - 4 \\n2 - mL- 3 - - b \\nb - - - - - - - \\n- - - - - - - b \\nb - 3 - 2 4 - 4 \\n- 3 - mR- - - - \\nb r 3 b - b - b \\nintro animation: None\\npar: 6\\n- - - - - - - - \\nmR- - - 1 - - - \\n- - - - - - - - \\n1 - - - 3 - - - \\nmL- 2 - 3 - mL- \\n- - - - - - - - \\n- - 3 - mR- 3 3 \\n- - r - e - u 2 \\nintro animation: None\\npar: 7\\nb r - - - d b 3 \\nb - b b b r - u \\nb u l b b b b b \\nb b - b b b b b \\nb b u b b b b b \\n3 - - - 4 - 3 - \\n3 - 3 - mR- - - \\nr - 2 - - - 3 - \\nintro animation: None\\npar: 6\\nr - mL- - mR- l \\n- w02 b b 2 w1- \\n- 3 - 3 3 - 3 - \\n3 2 - - - - 2 3 \\n3 - - 3 3 - - 3 \\n3 - - - - - - 3 \\nw1- - 2 2 - - w0\\n- - - - - - - - \\nintro animation: None\\npar: 5\\n4 3 4 - - - - d \\n3 - - - - - d - \\n3 3 4 - - d - - \\n3 - - - - - - - \\n4 - - 4 - - - 4 \\nr - - - 3 - - 3 \\n- r - - - 3 - 3 \\n- - r - - - 3 4 \\nintro animation: None\\npar: 4\\n4 - - - - e - 4 \\n- - - - - - - - \\n- e 2 - - 3 2 - \\n- - - - - - - - \\n- - - - - - - - \\n- 2 3 - - 2 e - \\n- - - - - - - - \\n4 - e - - - - 4 \\nintro animation: None\\npar: 5\\nw0- mR- - mL- 3 \\n3 - - - 4 - - - \\nmL- - - - - - 4 \\n- 4 mL- - - mL- \\nmR- - - - mR- - \\ne - - 3 - - - - \\n4 - - 4 - - mR- \\n- - u - 4 - - w0\\nintro animation: None\\npar: 4\\nw03 4 3 4 3 4 3 \\n3 w3- - - - - 4 \\n4 - w2- - - - 3 \\n3 - - w1- - - 4 \\n4 - - - w3- - 3 \\n3 - - - - w0- 4 \\n4 - - - - - w13 \\n3 4 3 4 3 4 3 w2\\nintro animation: None\\npar: 6\\nr 4 - - 4 - 2 d \\n- r - d l - - - \\n3 - b - - b 3 - \\n- 3 b - 3 b - 4 \\n4 - b 4 - b 4 2 \\n- 4 b - - b - 4 \\nu 3 2 3 u - 4 - \\n- u 4 - 4 - - l \\nintro animation: None\\npar: 4\\n3 - 3 e 3 - - 4 \\n- 1 - 3 - 3 e - \\n3 e 1 - 3 - 3 - \\n- 3 - 1 e 3 - 4 \\n4 - 3 - 1 - 3 e \\n- 3 e 3 - 1 - 3 \\n- - 3 - 3 e 1 - \\ne - - 4 - 3 - 2 \\nintro animation: None\\npar: 5\\n4 - 4 - - 3 - 3 \\n- 3 - - - - 4 - \\n4 - 4 - - 3 - 3 \\n- - - e e - - - \\n- - - e e - - - \\n3 - 3 - - 4 - 4 \\n- 4 - - - - 3 - \\n3 - 3 - - 4 - 4 \\nintro animation: None\\npar: 6\\n2 3 3 e b - - - \\n- - - b e 3 2 2 \\n2 4 3 e b - - - \\n- - - e e 3 4 2 \\n2 3 3 e b - - - \\n- - - b e 3 2 2 \\n2 4 3 e b - - - \\n- - - b e 3 4 2 \\nintro animation: None\\npar: 5\\n4 mLw0- - - - 3 \\n- 3 mL- - - - 3 \\n3 4 e mLm - m m \\n- 3 b - mL- - - \\n2 4 e - 4 - - 3 \\n- 3 b - 3 - mL- \\n- 4 e - 3 - - mL\\n2 3 - - 3 w0- - \\nintro animation: None \\npar: 3\\n- - 4 - - - mL- \\nr 3 - - - - - - \\n- - - - - - - - \\n- w2- - - - 4 3 \\n- - - - - - - - \\nmL- - 4 - w2- 3 \\n- - - - - - - - \\n- - 3 - - 4 - mR\\nintro animation: None \\npar: 4\\nmR- e w1- e - mL\\n- - - - - - w24 \\n- - 3 - - 3 - mL\\n- - - - - - - - \\n4 - w2- - - - - \\n- - - - - 3 - mR\\n- 2 - w1- - 2 - \\nmL- - 1 - - - mR\\nintro animation: None \\npar: 5\\n- - 3 - - w1- - \\n- - - - - - - - \\nmR- - - - 3 - mL\\n- - - - - - - - \\n- - - - - - - - \\nu 4 - mLmR2 - - \\n- - - - - - - - \\n- - w13 3 b - 2 \\nintro animation: None \\npar: 6\\nw3- - - - - - 3 \\n- - - - - - - - \\n- 4 - w1- - w2- \\n- - - - - - - - \\nw1- - 1 4 - - w3\\n- - - - - - - - \\n- 3 - - - - mR- \\n- - - w2- - - - \\nintro animation: None\\npar: 3\\n- - - - - - - - \\n- 3 - - - mL- - \\n- - r - - - d - \\n- - 4 - - 4 - - \\n- 2 u - - l - - \\n- - - - - - - - \\n- - - 2 - - 3 - \\n- u - 3 - - l - \\nintro animation: None\\npar: 6\\nb b e b b e b b \\nd 4 - - 4 - - m \\nb - 4 - - - - e \\nb 3 - 3 - - d b \\nr - - - 3 - - e \\nb e - - - 4 - b \\ne r - - - - 3 b \\nb b m b m b b b \\nintro animation: None \\npar: 5\\n4 - 4 - mLw2- - \\nb - b - - - - - \\n3 - - 2 - 3 - w1\\n- - - e - - - - \\nw1- - - e - - - \\n- - - - - 3 - 4 \\n- - 3 - - b - b \\n- - w2mL- 4 - 4 \\nintro animation: None\\npar: 7\\nmR- 2 mLmR- 3 mL\\n- - - - - - - - \\n- - - 3 - - - - \\n- - 1 - e - - 1 \\n- - - - - - - - \\n- 4 - 3 - 4 - - \\n- 3 - - - - 4 mR\\n4 - - - mR- - - \\nintro animation: None\\npar: 4\\n- m mL- 4 - 3 m \\nb - 4 - 4 e - - \\nw02 - 3 - 4 2 l \\nd w13 - 3 - m - \\nr 2 - 3 - 3 - w1\\n- w0- 4 3 - 4 - \\nb m 2 e 3 3 2 - \\nb - 3 - m - - b \\nintro animation: None\\npar: 6\\n4 mRmL3 mRmL3 mL\\nmL- - - - - - 3 \\nmR- 3 - - 3 - mR\\n3 - - 3 3 - - mL\\nmL- - 3 3 - - 3 \\nmR- 3 - - 3 - mR\\n3 - - - - - - mL\\nmL3 mLmR3 mLmR4 \\nintro animation: None\\npar: 6\\ne e e e e e e e \\ne b b b b - b e \\ne b 3 2 - - b e \\n- - - 3 4 3 b e \\ne b 3 4 3 - - - \\ne b - - 2 3 b e \\ne b - b b b b e \\ne e e e e e e e \\nintro animation: None\\npar: 7\\n4 3 3 w01 3 w53 \\nw8w11 3 w93 4 3 \\n3 3 w43 2 w23 w7\\n3 w02 3 w63 3 3 \\n2 3 3 w43 3 w73 \\nw33 3 3 w13 2 w9\\n1 w2w83 4 3 3 w6\\n3 w54 3 3 w31 3 \\nintro animation: None\\npar: 9\\n4 - 3 mLmR4 - d \\n3 3 - - 3 d r 3 \\n- 3 4 d r - 4 - \\n4 d r 3 - 3 - 4 \\n2 - 3 - 4 l u 2 \\n3 - 3 l u 3 3 3 \\n- l u 3 3 - 4 - \\nu - - mRmL4 - 3 \\nintro animation: None\\npar: 7\\n4 - 4 1 4 2 4 1 \\n1 - 2 - - - - 4 \\n4 - 4 - 4 1 - 2 \\n2 - 1 - 2 4 - 4 \\n4 - 4 - - 2 - 1 \\n1 - 2 4 1 4 - 4 \\n4 - - - - - - 2 \\n2 4 1 4 2 4 1 4 \\nintro animation: None\\npar: 10\\n4 4 4 4 4 4 4 4 \\n4 2 3 2 2 3 2 4 \\n4 3 1 1 1 1 3 4 \\n4 2 1 4 4 1 2 4 \\n4 2 1 4 4 3 2 4 \\n4 3 1 1 1 1 3 4 \\n4 2 3 2 2 3 2 4 \\n4 4 4 4 4 4 4 4 \\nintro animation: None\\npar: 6\\n3 - 3 - - - - 3 \\n- - e 4 - mL- - \\nmL- - - 2 1 mL4 \\n- mLe - 2 1 - mL\\n- mR- - 2 1 - mR\\nmR- e - 2 1 mR4 \\n- - - 4 - mR- - \\n3 - 3 - - - - 3 \\nintro animation: None\\npar: 8\\nmR3 - - - - 2 1 \\n3 4 - - - - 2 2 \\n- - b b b b - - \\n- - b e e b - - \\n- - b e e b - - \\n- - b b b b - - \\n4 3 - - - - mR- \\n2 4 - - - - - mR\\nintro animation: None\\npar: 11\\n4 4 1 2 2 2 4 4 \\n- - - - - - - - \\n- - - - - - - - \\n3 3 3 3 3 3 3 3 \\n3 3 3 3 3 3 3 3 \\n- - - - - - - - \\n- - - - - - - - \\n4 4 2 2 2 1 4 4 \\nintro animation: None\\npar: 4\\n- 3 - 3 - l - 4 \\n- - - - - 3 - mR\\n- 4 - - - - 3 - \\n- r - d - - - - \\n- - - - - - - - \\n- 4 - - - u 4 m \\n- - - - - - - - \\n- - - 2 - - - r \\nintro animation: None\\npar: 4\\nm - - - - - - m \\nb 2 3 d - - mLb \\nm 1 1 mR- - - m \\nb - 3 - 3 3 u b \\nm mRu - 4 - w0m \\nb w0- - d l 3 b \\nm - - 4 3 3 u m \\nb - - - - - - b \\nintro animation: None\\npar: 6\\nw1- 3 2 3 3 - - \\nr - - 2 3 2 1 m \\nb b b b b b b b \\nw0- - e 3 - - mL\\nmL- - 3 e - - w1\\nb b b b b b b b \\nm 1 2 3 2 - - l \\n- - 3 3 2 3 - w0\\nintro animation: None\\npar: 6\\nw03 4 l - m b 4 \\n3 2 l 3 - b 4 4 \\n4 u 3 4 b 4 3 4 \\nu 3 4 b 4 3 3 4 \\n- - b 4 3 3 2 4 \\n- b 4 3 3 2 2 3 \\nb 4 3 3 2 2 3 3 \\n4 4 4 4 4 3 3 w0\\nintro animation: None\\npar: 5\\n3 - - 3 3 - - m \\n3 - - 3 3 - - m \\n3 - - 3 4 - - m \\n3 - - m 1 - - 4 \\n4 - - 1 m - - 3 \\nm - - 4 3 - - 3 \\nm - - 3 3 - - 3 \\nm - - 3 3 - - 3 \\nintro animation: None\\npar: 5\\n- d - - - mL- - \\n- - 4 3 2 3 - - \\n- 1 e 2 3 4 - - \\n- - 4 3 2 4 - - \\n- - b b b 3 - - \\n- 2 4 - - 3 - - \\n- u 3 - - 3 - - \\n- mL- - - mR- - \\nintro animation: None\\npar: 3\\n4 w0b e - - - mL\\n1 4 b 1 b 3 - 4 \\n1 2 b 4 b 3 - 4 \\nu 4 b 4 b 3 - 4 \\n4 l b 4 b 2 - 4 \\n4 d b 4 b 1 1 mR\\n4 l b 4 b mL- 4 \\n4 mRb w0b 4 - 4 \\nintro animation: None\\npar: 4\\nm - 4 3 - 1 - 2 \\n- - - - 3 - - 3 \\n- - 3 - 4 - 3 - \\n4 r - w1w3- - - \\n- - - w3w1- - 3 \\n- 3 - l - - - - \\n- - 3 - - 4 4 - \\nr - - - 3 - - u \\nintro animation: None\\npar: 4\\nr 1 - 3 b w8- 3 \\n- u - - 3 b - 3 \\n- 1 - - 4 - b 3 \\n4 e - 2 - - 1 u \\n- e 2 - 2 1 4 u \\n- 4 - - - - b 3 \\n- u - - - b 3 4 \\nu 2 - w8b 3 4 mR\\nintro animation: None\\npar: 3\\n- - - - - - - - \\n- - w0- - 3 - - \\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\n- - 4 - - w0- - \\n- - - - - - - - \\nintro animation: None\\npar: 4\\n- - - - - - - - \\n- - w0- - 4 - - \\n4 - - 4 3 mL- - \\n- - - - - - - - \\n- - - - - - - - \\n- - - - - - - - \\nmL- 3 - - w0- - \\n- - - - - - - - \\nintro animation: None\\npar: 5\\nmR- d - - - - - \\n- - w0- - 4 - - \\n4 - - 4 3 mL- - \\n- - - - - - - - \\n3 - - - - - - 3 \\n- - - - - - - 3 \\nmL- 3 - - w0- - \\n- - - - - r - mR\\nintro animation: None\\npar: 4\\nmR- d - - - - l \\n- - w0- - 4 - 4 \\n4 - - 4 3 mL- - \\n- - - - - - - - \\n3 - - 2 - - - 3 \\n- - - - - - - 3 \\nmL- 3 - - w0- 3 \\n- - - - - r - mR\\nintro animation: None\\npar: 4\\nmR- d - - 3 - l \\n- - w0- - 3 - 4 \\n4 - - 4 3 mL- - \\n- 3 - 3 l - - - \\n3 - - 2 - - - 3 \\n- - - - - - - 3 \\nmL- 3 - - w0- 3 \\n- - - - - r - mR\\nintro animation: None\\npar: 4\\nmR- d - - 3 - l \\n3 - w0- - 3 - 4 \\n4 - - 4 3 mL- - \\n- 3 - 3 l - - 2 \\n3 - - 4 - - - 3 \\n- 4 - - - - - 2 \\nmLl 3 - - w0- 2 \\n- u 4 - 3 r - mR\\nintro animation: None\\npar: 4\\nmR- d - - 3 - l \\n3 mRw0- 2 3 - 3 \\n4 2 - 4 3 mL- 3 \\n- 3 - 3 l - 4 2 \\n3 - - 4 3 - - 2 \\n- 3 - - - - - 2 \\nmLl 3 - mLw0- 2 \\n- u 3 - 4 r r mR\\nintro animation: None\\npar: 5\\nmR- d - - 3 - l \\n4 mRw0- 2 3 2 3 \\n3 3 2 4 3 mL- 3 \\nmR3 b 3 r - 4 2 \\n3 2 3 4 3 - 3 2 \\n- 3 r - - - u 1 \\nmLl 3 4 mLw0- 2 \\n- u 3 3 2 r r mR\\nintro animation: None\\npar: 5\\nmR- d 1 1 3 - l \\n4 mRw0- 2 3 2 3 \\n3 3 2 4 3 mL- 3 \\nmR3 3 3 r 1 4 2 \\n3 2 3 4 3 1 3 2 \\n- 3 r 1 1 e u 1 \\nmLl 3 4 mLw03 2 \\n- u 3 3 3 r r mR\\nintro animation: None\\npar: 8\\n- - - - - - - - \\n- r - d - - l - \\n- 4 - d - - 4 - \\nb 2 b - - b 2 b \\nb e 3 3 - b e b \\nb b b 2 - b 3 b \\n- - d 2 - - 3 d \\n- - r r 1 1 b l \\nintro animation: None\\npar: 6\\nr - - 2 - - - l \\nr - - 2 - - - u \\nu - - 2 - e - d \\nd e - 2 - - - d \\nd - - 2 - - - l \\nd - - 2 - - - l \\nd - - 2 - e - u \\nr - - 2 - - - u \\nintro animation: None\\npar: 8\\n3 - d - - r - 3 \\n- - 1 l - - w1- \\n- - e - 3 - - - \\n- - w1- - - - - \\nmL- - 2 - - w2- \\nb w22 - u - - - \\nr - 2 - - u - - \\nu l m u - - - l \\nintro animation: None\\npar: 7\\n- - - - b - - - \\n- w0- r - - 2 d \\nmL- - - - - - - \\n- 3 - 3 - - - - \\n- - - - 3 - u - \\ne - - 3 - - - - \\n- r - u - - - 3 \\nb - - - - w0- - \\nintro animation: None\\npar: 9\\n- 2 - - - b d l \\nb e e e e b 2 - \\ne 1 2 1 1 b - - \\nb r - 1 - b - - \\n- - - - - b b - \\n- e - 3 2 2 3 u \\n- - u - r - - e \\n- r - - - - u - \\nintro animation: None\\npar: 9\\nmR- 3 - - - - mL\\n- 3 w03 - 3 - - \\n- - 3 - 2 w13 2 \\n- 3 - - - 2 3 w2\\n2 w12 - - 3 - 3 \\n- 3 - - 3 w03 - \\n- - 3 - - 3 - - \\nmL3 w23 - - - mR\\nintro animation: None\\npar: 13\\nm 3 3 3 3 3 d b \\nb b b b b b - b \\n3 3 2 b b 2 3 3 \\n3 3 mR2 2 mL2 2 \\n3 3 2 m m 2 3 2 \\n3 3 mL3 3 mR3 3 \\n3 3 3 2 2 3 2 2 \\nb b b b b b b b \\nintro animation: None\\npar: 7\\nb b b b b b b b \\nb 3 3 - - 3 3 b \\nb 3 2 2 2 2 3 b \\nb 3 2 e b 2 3 b \\nb 3 2 b e 2 3 b \\nb 3 2 2 2 2 3 b \\nb 3 3 - - 3 3 b \\nb b b b b b b b \\nintro animation: None\\npar: 9\\n- 2 - - - - - l \\n- 2 - - - m 2 mR\\n- 2 - - - - 2 - \\n- 3 - - - - 2 - \\n- 3 - - - m 2 mL\\n- 3 - - - - - - \\nmRe - - - - 3 - \\n- mLl - 3 - l - \\nintro animation: None\\npar: 6\\n- - b 3 3 b d e \\n- w0- 3 3 - w03 \\nb - b 2 2 b b - \\n3 3 2 4 4 2 3 3 \\n3 3 2 4 4 2 3 3 \\nb - b 2 2 b - b \\nr w1- 3 3 - w1l \\n- u b 3 3 b 3 e \\nintro animation: None\\npar: 7\\n- d - - - - - l \\nr - - - - - d - \\n- - 3 b b 3 - - \\n- r 3 b b 3 - u \\n- - 3 b b 3 l r \\nu - 3 b b 3 - d \\nd r - - d - - - \\n- - r - - - l - \\nintro animation: None\\npar: 7\\nd l - l r - r d \\n- - d - - d - - \\n- - 3 3 3 3 - - \\n1 3 3 b 4 3 3 1 \\n- - 3 4 b 3 - - \\n1 3 3 3 3 3 3 1 \\n- r 1 2 2 1 l - \\n1 - 1 3 3 1 - 1 \\nintro animation: None\\npar: 8\\nb 3 b b b b b b \\nb 3 b 3 2 2 2 l \\nb e d b b b b 2 \\nb r 2 3 2 d b 2 \\nb b - b b 2 b 2 \\nb b - b b 2 b 2 \\nb r 3 2 2 3 2 u \\nb b r r r r r u \\nintro animation: None\\npar: 11\\nb - 3 - - - - mL\\n- r - - - 3 - 3 \\n- - 3 - l 2 - - \\nm 3 - - - - - b \\n- - r - 3 - 3 - \\nd - - - - - - u \\n- - 3 - - l - - \\nmL- u - - - u b \\nintro animation: None\\npar: 10\\n- - - 3 3 e - - \\n- 3 - d d 3 b - \\n- - 3 - 3 - 2 - \\nm - - 3 - - - d \\n- - - - 3 w0- - \\n- u - 2 - 3 - - \\n- - - - - w0- 3 \\n- - 3 3 3 u - - \\nintro animation: None\\npar: 6\\n3 3 - - - - - l \\n- - 3 - - - l - \\n- - - 3 - l - - \\n- - - - 3 - - - \\n- - - r u - - - \\n- - r - - u - - \\n- r - - - - u - \\nr - - - - - - u \\nintro animation: None\\npar: 10\\n- - - - 2 w12 - \\nr 3 - - - - d - \\n- w04 3 3 - - m \\nr 2 - 4 w2- - m \\n- - - - 2 - l - \\nw22 - - w0- u - \\n- - 1 - 3 3 - - \\nr 2 w12 - - l - \\nintro animation: None\\npar: 6\\n- - - - - - - - \\n- mL- - 2 - - - \\n- 3 3 - - m - - \\n- m 3 2 3 m - - \\n- m 3 2 3 m - - \\n- m 3 2 3 m - - \\n- m - 2 3 2 - - \\n- - - - - mR- - \\nintro animation: None\\npar: 6\\n- - d - 4 - 3 - \\n3 3 l - 4 - 3 - \\n- - u 3 d r u l \\n4 4 r 3 3 3 - - \\n- - 3 3 3 u 4 4 \\nr d l u 3 l - - \\n- 3 - 4 - d 3 3 \\n- 3 - 4 - r - - \\nintro animation: None\\npar: 7\\n- - - - d 1 l - \\n- - - - 1 1 1 d \\n- - w01 1 1 u 1 \\n- 3 e 3 2 1 1 1 \\n- 2 3 2 2 1 1 1 \\n- - mL3 2 w0- 1 \\n- - - - 1 - - - \\n- - - - 1 - - - \\nintro animation: None\\npar: 7\\n- r - r - d - - \\nr 1 r - - 3 d - \\n- u - 2 - d - - \\nd 3 - 3 - 2 d - \\n- u - 3 - d - - \\n2 - - - - 1 2 d \\nr - 1 1 1 1 2 l \\n- - - r - 1 2 - \\nintro animation: None\\npar: 9\\n3 - - - - - - d \\n- - 3 - d - - - \\n- b w0- 1 - - - \\n- - 2 b - - - - \\n- - 3 b - - - - \\nu - 4 - w0b - - \\n- - 3 - 2 - - l \\n- - - - - - - - \\nintro animation: None\\npar: 6\\n- - - m - - - - \\nd 2 - 3 d - 3 l \\nd - - e - - - u \\nd 1 2 1 3 1 - m \\n- 1 1 1 1 1 - l \\n- - - 3 - - - - \\n2 - - mL- - 3 u \\nr - - 2 - - - u \\nintro animation: None\\npar: 12\\nr d - - - - 1 - \\n2 2 2 2 - - e l \\n2 3 3 2 r - - d \\n2 2 2 2 - - - l \\n- - - - 2 2 2 2 \\n- e - - 2 3 3 2 \\n- 2 - d 2 2 2 2 \\nu - - l - - - l \\nintro animation: None\\npar: 12\\n- - d 3 - l - - \\n- d 3 - - - 3 l \\nr - w0b - - - - \\n- d 2 b - - - - \\n3 - 1 b - 3 - - \\n- - - b - w03 2 \\n- 3 u - - - - - \\nu 3 - - - 3 - u \\nintro animation: None\\npar: 13\\n- d - - 1 - - l \\n4 - 3 - - 2 - - \\n- 2 - 2 1 - 4 u \\n4 - 3 e b 2 - 2 \\n- 2 1 2 1 - 4 u \\n4 - 3 1 - 2 - 2 \\n- 2 - 2 - - 4 u \\nr - - - u - r 2 \\nintro animation: None\\npar: 9\\n3 d - - - - d - \\nr 3 - 3 3 - 3 d \\n- - - b b - - - \\n- r - 1 1 - l - \\n- r - 1 1 - l - \\n- - - b b - - - \\n- 3 - 3 3 - 3 - \\n- u - - - - u l \\nintro animation: None\\npar: 4\\nm w1- 1 2 3 l l \\nw0- m 3 - 4 mR1 \\nu 4 3 4 d 3 2 3 \\n2 3 mR3 3 d - 2 \\n1 u - 4 3 l u 3 \\n4 - l 3 mL- b 2 \\nu w1- 3 2 3 - w0\\nmL- 4 - mRb b - \\nintro animation: None\\npar: 4\\n- d 2 - - l - l \\nmRl 4 - b m 4 4 \\n4 3 3 b 1 b b 3 \\n2 3 b 1 e w0b 4 \\n2 4 3 b 1 b b 4 \\n4 - 3 3 b - - 4 \\nmL- 3 2 4 4 mL4 \\nw0- 2 - 3 - l - \\nintro animation: None\\npar: 7\\n- 3 - - - 3 - d \\n- - - - - - - - \\n4 w0- - - 3 - d \\n- - - - 3 - - - \\n- 2 - - - - 2 d \\n- - 2 - w0- - 3 \\n- - - - - - - - \\n- u - - 3 - 3 l \\nintro animation: None\\npar: 7\\nb b w0b b b b b \\nb 3 1 2 3 3 4 w2\\nb 3 e - b - 4 b \\nw22 - 3 2 w11 b \\nb 3 b 4 3 e 2 b \\nb 4 w1- b - 3 b \\nb 3 2 3 1 3 4 b \\nb b b b b b w0b \\nintro animation: None\\npar: 7\\n3 3 3 3 m 3 w03 \\nb 3 b 3 3 3 3 3 \\n3 3 3 3 b 3 m 3 \\nb 3 mL3 3 3 3 3 \\n3 3 3 3 mR3 w03 \\n1 3 1 3 3 3 3 3 \\n3 3 3 3 1 3 1 3 \\ne 3 1 3 3 3 3 3 \\nintro animation: None\\npar: 4\\nb w21 4 3 4 w0b \\n3 mL2 3 3 4 mRw1\\n4 - b 3 3 b 2 4 \\n3 4 - m m 3 3 mR\\n4 - - m m 3 4 mL\\n3 4 b - - b 4 3 \\nw0mR4 3 4 - mLw2\\nb w1- 3 - 4 w0b \\nintro animation: None\\npar: 9\\n2 3 - - - - 3 2 \\n- 3 - - - - 3 - \\n- - 3 2 2 3 - - \\n- - 2 e - 2 - - \\n- - 2 - e 2 - - \\n- - 3 2 2 3 - - \\n- - - - - - - - \\n- u l l r r u - \\nintro animation: None\\npar: 8\\n3 - - r d - - - \\n- - - 3 d - - - \\nw03 - u - - - 3 \\nr 3 - 3 - l - - \\n- 3 - - - - - - \\n3 w04 e 3 - - - \\n- r - - - 2 - u \\n- - - - - - - - \\nintro animation: None\\npar: 13\\n- 3 - d - - - - \\n- - - 4 - - - - \\n- w11 1 1 - l - \\n- b 2 4 w03 u - \\n4 w01 1 1 - - - \\nw1m - u 3 - u - \\n- - - - mL- - - \\n- - - - - - - - \\nintro animation: None\\npar: 10\\n- r - d - - w0- \\n- 3 - 2 - 3 d - \\n- - b - b - - - \\nmL1 - e b 1 1 - \\n- - b - b - - - \\n- - b 2 - 3 u - \\nu 3 - - b - - - \\n- r - u - w0- - \\nintro animation: None\\npar: 4\\n- - - - - - - - \\n- m - 4 - d - - \\nd - - 3 - - m - \\n- m - 3 3 d - - \\n- - - - - - m - \\n- m 2 - - l - - \\nr - 2 3 - - - - \\n- - - - - - - - \\nintro animation: None\\npar: 13\\n- - - m - - - - \\nr 3 b 1 - - - - \\n- 3 b 1 - d l - \\nw13 b 2 - w1- - \\n- - b 2 - 3 - - \\n- r - u - 3 - - \\nr 3 2 3 2 u - - \\n- r 2 r 2 2 u - \\nintro animation: None\\npar: 7\\n4 - - b - - b - \\n- 3 1 e 3 m 2 d \\n- mL- - w0- - l \\nr 2 - - - - 1 4 \\nb w0- - 3 - e l \\n2 3 r - 1 mR- - \\n4 - - e 4 2 b 2 \\nb e m - 2 r - u \\nintro animation: None\\npar: 6\\n- - - - - - - - \\n- r 3 3 2 1 - - \\n- - 1 2 3 3 l - \\nr 3 2 b b 2 3 l \\nr 3 2 b b 2 3 l \\n- u 3 2 3 3 u - \\n- u 3 3 2 3 l - \\n- - - - - - - - \\nintro animation: None\\npar: 9\\n- - - - - - - - \\nb - - - - m 3 - \\n- - - 3 - - - l \\n- - m - - - 3 - \\n- - - - - - - - \\nd - 3 - m 2 - u \\nr - - - - - u - \\nb - 3 - - u m 2 \\nintro animation: None\\npar: 4\\n- - - - - - - - \\nd 1 - l l - - - \\n- - - 2 3 l - - \\n3 - 2 mL2 3 - - \\n2 - mRe mL- - - \\n- u 3 3 3 u - - \\n- - - - - - - - \\n- - - r - u - - \\nintro animation: None\\npar: 10\\n- - - - - - - - \\n- 3 - d d d - - \\n- u 1 1 1 1 - - \\n- - u 4 4 u - 2 \\n- - u 4 4 d 3 u \\n- 4 - b b 3 u - \\n- u - - - l - - \\n- - - - - - - - \\nintro animation: None\\npar: 6\\n- - - - - m r d \\n3 2 - l - - e - \\n- - - 3 - 4 - - \\n- 1 - - 1 - 2 l \\nb - e mL- 4 - - \\n- - - - - - - - \\n- u - 3 - l m - \\n- - - - - - - - \\nintro animation: None\\npar: 15\\nw01 2 w13 3 w93 \\n3 w82 3 3 w23 2 \\nw72 3 w33 3 1 w6\\n1 w13 2 3 w42 4 \\n3 4 w51 w92 w33 \\n4 w63 2 w03 1 2 \\n3 w22 w83 4 w43 \\nw72 1 3 w54 2 3 \\nintro animation: None\\npar: 6\\nb 3 - - d - - - \\nb - - - - - - - \\nw03 - - 2 - 3 b \\n3 - b - - - 2 b \\n3 - b 3 3 - m b \\nb 3 - - w0b - - \\nb b - - - - - - \\nb - - - - - - - \\nintro animation: None\\npar: 9\\nb b 4 b 4 b 4 b \\nb 4 1 4 1 4 1 4 \\n4 1 4 1 4 1 4 b \\nb 4 1 4 1 4 1 4 \\n4 1 4 b 4 1 4 b \\nb 4 1 4 1 4 1 4 \\n4 1 4 1 4 1 4 b \\n- 4 b 4 b 4 b - \\nintro animation: None\\npar: 9\\nb b 1 3 3 1 b b \\nb mR2 3 mL2 m 2 \\nmR3 2 3 2 2 3 3 \\n2 m 2 mL3 1 3 m \\n2 2 2 3 2 3 3 1 \\n2 1 2 1 2 m 2 2 \\n2 3 mR3 2 2 mL3 \\nm 2 1 3 2 1 2 m \\nintro animation: None\\npar: 10\\n- 4 - - - - - - \\nr w0- - - - 3 - \\n2 d - - - - - - \\n- r 1 1 1 1 l - \\n- - - - - - - - \\n- 4 - - - - - - \\n2 l 3 - - w0u - \\nu - - - - r u - \\nintro animation: None\\npar: 8\\nd 3 2 3 - - - d \\nd 4 1 4 - - - d \\n- - - - r d - - \\n- - - - 3 2 - - \\nr - - - mR3 - - \\n- - - - - 2 - - \\n- b b b b b - - \\nu 2 3 2 3 2 - l \\nintro animation: None\\npar: 4\\n4 w0b e - - - mL\\n1 4 b 1 b 3 - 4 \\n1 2 b 4 b 3 - 4 \\nu 4 b 4 b 3 - 4 \\n4 l b 4 b 2 - 4 \\n4 d b 4 b 1 1 mR\\n4 l b 4 b mL- 4 \\n4 mRb w0b 4 - 4 \\nintro animation: None\\npar: 9\\n- - - - - - - - \\n- - 3 - - d - - \\n- - - d 3 - - - \\n4 - u 2 u 3 - - \\n4 - d 2 d 3 - - \\n- - - u 3 - - - \\n- - 3 - - u - - \\n- - - - - - - - \\nintro animation: None\\npar: 9\\n- 1 - - b - 1 - \\n1 e 3 - - 3 e 1 \\n- w0- - - - - - \\n- 2 - 1 w11 3 - \\n- 2 3 1 w01 3 - \\n- 3 2 - - - 3 - \\n1 e w1- 1 - e 1 \\n- 1 - b - - 1 - \\nintro animation: None\\npar: 5\\nw03 4 4 - 1 - 3 \\n4 3 3 2 - 1 3 - \\nd 2 2 4 - 1 - - \\n- - d - - 1 - l \\n- - r - - u - 3 \\nr 3 2 - - - - u \\n- 2 - 4 2 3 - 4 \\n- 3 - 2 2 2 1 w0\\nintro animation: None\\npar: 12\\nb b b b b b b b \\nb r 3 r 2 3 2 d \\nb 2 b u b b b 1 \\nb r 1 4 1 d b 3 \\nb 3 b 3 d 4 l 2 \\nb 2 l 1 l - l 3 \\nb u b u b 1 b 1 \\nb b b - b 3 b u \\nintro animation: None\\npar: 4\\nb b 3 3 4 - b b \\nb mR4 2 2 d mLb \\n- - - 4 2 - - 3 \\n4 u 4 mLmR- 3 1 \\n- - - mRmL3 l 4 \\n- 2 - 3 2 3 2 - \\nb mL- 4 2 3 l b \\nb b - 1 2 2 b b \\nintro animation: None\\npar: 5\\ne e e e e e e e \\n- 1 1 1 1 1 1 1 \\n- r d l r d r d \\n- - 1 3 2 1 1 1 \\n4 - 4 1 1 1 - 1 \\n- - 3 - - 1 1 1 \\n3 - - 4 - - 3 1 \\n3 1 1 3 2 1 2 1 \\nintro animation: None\\npar: 4\\nmR- - 3 - 4 3 mL\\n- b - 4 2 - 3 - \\n3 - mR- 1 mLw03 \\nw02 1 3 4 - b 1 \\n1 3 1 b 3 2 4 - \\n1 - mL- 3 mR- 3 \\n- u mR3 - - l 2 \\nmL- 3 - e 2 - mR\\nintro animation: None\\npar: 5\\nb 4 3 4 1 - 4 3 \\nd b - 2 - 1 w32 \\n2 - b - 4 3 3 4 \\n2 1 - mL3 - u 4 \\n- 2 2 - mL4 e 1 \\n3 2 2 - 3 b 3 3 \\n- w3- 4 4 3 b 2 \\n2 3 1 4 2 - 4 b \\nintro animation: None\\npar: 5\\nr d - b 3 2 m - \\ne w4d b - 2 - 4 \\nr u l b 3 2 2 3 \\nb b b mR- 3 2 4 \\n- 3 4 3 - - 2 3 \\n1 4 2 2 2 4 3 2 \\n2 3 1 2 - w43 3 \\nmL2 3 4 3 mR- 1 \\nintro animation: None\\npar: 5\\nmR1 1 e - mRmL- \\n1 3 2 - - 1 1 4 \\n4 mR2 e b w62 4 \\n4 - 1 - - u 2 - \\n2 - - - - 3 1 3 \\n1 - 2 e b 4 1 2 \\nd w6- - b 4 1 4 \\nmLu - - b 3 - mR\\nintro animation: None\\npar: 2\\n4 - w0b b - mRl \\n3 - b - - b w2- \\nw1b - w1- - b w3\\nb w3- - - w6mLb \\nb w4- r - - mRb \\nw4b u - l - b w2\\n- - b - - b - 4 \\n3 l w6b b w03 3 \\nintro animation: None\\npar: 7\\n3 3 3 4 3 3 3 e \\n3 3 3 3 3 3 3 3 \\ne 3 b b b b b b \\n3 3 3 4 3 3 3 3 \\n3 3 3 3 4 3 3 3 \\nb b b b b b 3 e \\n3 3 3 3 3 3 3 3 \\ne 3 3 3 4 3 3 3 \\nintro animation: None\\npar: 13\\nb 4 1 3 - 3 3 l \\n4 d - 4 - 2 r 3 \\n2 3 2 4 1 4 - 2 \\n3 3 1 mRmL2 3 3 \\n- 1 4 mLmR- 3 3 \\n1 - l 4 1 3 2 4 \\n- b 4 3 2 - d - \\n1 - 4 - - 3 - m \\nintro animation: None\\npar: 10\\nmR- - - 2 - 4 mL\\nr - 2 2 3 2 mL3 \\nm m m m m m 1 mR\\nm w01 1 3 m 1 mL\\nb e 1 1 1 m 2 - \\nm b m m m m 3 - \\nmR- - 3 3 3 mR- \\nmL- 2 2 2 1 - w0\\nintro animation: None\\npar: 11\\ne mLb b b b mRe \\nd - mLb b mR- d \\nd 2 - mLmR- 1 d \\nd 3 - 4 4 - 4 l \\n- b b b b b b u \\nd 3 - - - 3 - u \\nd e e - e - e 2 \\n1 2 2 3 2 3 2 2 \\nintro animation: None\\npar: 8\\n2 - - - - b - w0\\ne - 1 mLb e - 1 \\n- - - - - - - - \\n- b e - - e - - \\n- - - w0- - - - \\ne - e b - 1 - e \\nb - b - - - - - \\n- - - - b e - e \\nintro animation: None\\npar: 6\\n3 3 3 3 3 3 3 3 \\n3 r 3 - - d - 3 \\n3 u - - l - 2 3 \\n3 - - 4 - - - 3 \\n3 mL- mR- 3 - 3 \\n3 - - - - - - 3 \\n3 r - 3 u r u 3 \\n3 3 3 3 3 3 3 3 \\nintro animation: None\\npar: 7\\nr b l l 3 l l w0\\n4 d d 2 d 4 u u \\nr 2 r u d l l u \\nr u r u d r 3 u \\n2 l l u d d l u \\nr r 3 u d r d u \\nr r u u d 2 r d \\nw0r r u 2 u r r \\nintro animation: None\\npar: 15\\nw11 1 e e 1 1 w0\\nb b b - - b b b \\n- - - - - - - - \\n- - - - - - - - \\n4 4 4 4 4 4 4 4 \\n- b b b b b b - \\n2 w03 2 2 3 w12 \\nmL- - - - - - mR\\nintro animation: None\\npar: 13\\n- - e - - d - - \\n- - 3 - - - 3 - \\n- - - - - - 3 - \\nb b b b - - - - \\n3 3 3 b - - - - \\n3 w03 b r w0- l \\n3 3 3 b 3 - 3 1 \\nb b b b - u - e \\n  ';\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.e) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.g),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.g);\n\t\t} else {\n\t\t\tvar treeLen = builder.e * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.h) : builder.h;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.e);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.g) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.g);\n\t\t}\n\t});\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{h: nodeList, e: (len / elm$core$Array$branchFactor) | 0, g: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Main$init = _Utils_Tuple2(\n\t{\n\t\tU: author$project$Game$loadBoards(author$project$Levels$levels),\n\t\tk: author$project$Game$NotStarted\n\t},\n\telm$core$Platform$Cmd$none);\nvar author$project$Game$Started = function (a) {\n\treturn {$: 1, a: a};\n};\nvar author$project$Coordinates$mapX = F2(\n\tfunction (f, _n0) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\treturn A2(\n\t\t\tauthor$project$Coordinates$Coordinates,\n\t\t\tf(x),\n\t\t\ty);\n\t});\nvar author$project$Coordinates$mapY = F2(\n\tfunction (f, _n0) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\treturn A2(\n\t\t\tauthor$project$Coordinates$Coordinates,\n\t\t\tx,\n\t\t\tf(y));\n\t});\nvar author$project$Direction$advanceCoordinatesInDirection = F2(\n\tfunction (direction, coordinates) {\n\t\tswitch (direction) {\n\t\t\tcase 0:\n\t\t\t\treturn A2(\n\t\t\t\t\tauthor$project$Coordinates$mapY,\n\t\t\t\t\telm$core$Basics$add(1),\n\t\t\t\t\tcoordinates);\n\t\t\tcase 1:\n\t\t\t\treturn A2(\n\t\t\t\t\tauthor$project$Coordinates$mapY,\n\t\t\t\t\tfunction (y) {\n\t\t\t\t\t\treturn y - 1;\n\t\t\t\t\t},\n\t\t\t\t\tcoordinates);\n\t\t\tcase 2:\n\t\t\t\treturn A2(\n\t\t\t\t\tauthor$project$Coordinates$mapX,\n\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\treturn x - 1;\n\t\t\t\t\t},\n\t\t\t\t\tcoordinates);\n\t\t\tdefault:\n\t\t\t\treturn A2(\n\t\t\t\t\tauthor$project$Coordinates$mapX,\n\t\t\t\t\telm$core$Basics$add(1),\n\t\t\t\t\tcoordinates);\n\t\t}\n\t});\nvar author$project$Particle$Particle = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar author$project$Particle$mapCoordinates = F2(\n\tfunction (f, _n0) {\n\t\tvar particleId = _n0.a;\n\t\tvar direction = _n0.b;\n\t\tvar coordinates = _n0.c;\n\t\treturn A3(\n\t\t\tauthor$project$Particle$Particle,\n\t\t\tparticleId,\n\t\t\tdirection,\n\t\t\tf(coordinates));\n\t});\nvar author$project$Particle$advanceParticle = function (particle) {\n\tvar direction = particle.b;\n\treturn A2(\n\t\tauthor$project$Particle$mapCoordinates,\n\t\tauthor$project$Direction$advanceCoordinatesInDirection(direction),\n\t\tparticle);\n};\nvar author$project$Particle$flatMap = F2(\n\tfunction (f, _n0) {\n\t\tvar p = _n0;\n\t\treturn _Utils_update(\n\t\t\tp,\n\t\t\t{\n\t\t\t\ty: f(p.y)\n\t\t\t});\n\t});\nvar author$project$Particle$advanceParticles = author$project$Particle$flatMap(\n\telm$core$List$map(author$project$Particle$advanceParticle));\nvar author$project$Game$advanceParticles = function (_n0) {\n\tvar b = _n0;\n\tvar particles = b.y;\n\treturn _Utils_update(\n\t\tb,\n\t\t{\n\t\t\ty: author$project$Particle$advanceParticles(particles)\n\t\t});\n};\nvar author$project$Level$levelHeight = function (_n0) {\n\tvar l = _n0;\n\treturn l.W;\n};\nvar author$project$Game$boardHeight = function (_n0) {\n\tvar level = _n0.L;\n\treturn author$project$Level$levelHeight(level);\n};\nvar author$project$Level$levelWidth = function (_n0) {\n\tvar l = _n0;\n\treturn l._;\n};\nvar author$project$Game$boardWidth = function (_n0) {\n\tvar level = _n0.L;\n\treturn author$project$Level$levelWidth(level);\n};\nvar elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$member = F2(\n\tfunction (x, xs) {\n\t\treturn A2(\n\t\t\telm$core$List$any,\n\t\t\tfunction (a) {\n\t\t\t\treturn _Utils_eq(a, x);\n\t\t\t},\n\t\t\txs);\n\t});\nvar author$project$Coordinates$coordinatesWithinDimensions = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\tvar w = _n0;\n\t\tvar h = _n1;\n\t\tvar x = _n2.a;\n\t\tvar y = _n2.b;\n\t\treturn A2(\n\t\t\telm$core$List$member,\n\t\t\tx,\n\t\t\tA2(elm$core$List$range, 0, w - 1)) && A2(\n\t\t\telm$core$List$member,\n\t\t\ty,\n\t\t\tA2(elm$core$List$range, 0, h - 1));\n\t});\nvar author$project$Particle$particleCoordinates = function (_n0) {\n\tvar coordinates = _n0.c;\n\treturn coordinates;\n};\nvar author$project$Particle$particlesWithinDimensions = F2(\n\tfunction (width, height) {\n\t\treturn author$project$Particle$flatMap(\n\t\t\telm$core$List$filter(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Basics$composeL,\n\t\t\t\t\tA2(author$project$Coordinates$coordinatesWithinDimensions, width, height),\n\t\t\t\t\tauthor$project$Particle$particleCoordinates)));\n\t});\nvar author$project$Game$trimParticles = function (board) {\n\tvar b = board;\n\tvar particles = b.y;\n\treturn _Utils_update(\n\t\tb,\n\t\t{\n\t\t\ty: A3(\n\t\t\t\tauthor$project$Particle$particlesWithinDimensions,\n\t\t\t\tauthor$project$Game$boardWidth(board),\n\t\t\t\tauthor$project$Game$boardHeight(board),\n\t\t\t\tparticles)\n\t\t});\n};\nvar author$project$Direction$mirrorLeftDirection = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn 2;\n\t\tcase 1:\n\t\t\treturn 3;\n\t\tcase 2:\n\t\t\treturn 0;\n\t\tdefault:\n\t\t\treturn 1;\n\t}\n};\nvar author$project$Direction$mirrorRightDirection = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn 3;\n\t\tcase 1:\n\t\t\treturn 2;\n\t\tcase 2:\n\t\t\treturn 1;\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n};\nvar author$project$Direction$reverseDirection = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn 1;\n\t\tcase 1:\n\t\t\treturn 0;\n\t\tcase 2:\n\t\t\treturn 3;\n\t\tdefault:\n\t\t\treturn 2;\n\t}\n};\nvar author$project$Direction$sidewaysDirections = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn _List_fromArray(\n\t\t\t\t[3, 0, 2]);\n\t\tcase 3:\n\t\t\treturn _List_fromArray(\n\t\t\t\t[0, 3, 1]);\n\t\tcase 2:\n\t\t\treturn _List_fromArray(\n\t\t\t\t[0, 2, 1]);\n\t\tdefault:\n\t\t\treturn _List_fromArray(\n\t\t\t\t[3, 2, 1]);\n\t}\n};\nvar author$project$Particle$incrementParticleId = function (_n0) {\n\tvar value = _n0;\n\treturn value + 1;\n};\nvar author$project$Particle$buildParticle = F3(\n\tfunction (coordinates, direction, _n0) {\n\t\tvar particleId = _n0.ae;\n\t\tvar particles = _n0.y;\n\t\tvar newParticle = A3(author$project$Particle$Particle, particleId, direction, coordinates);\n\t\treturn {\n\t\t\tae: author$project$Particle$incrementParticleId(particleId),\n\t\t\ty: A2(elm$core$List$cons, newParticle, particles)\n\t\t};\n\t});\nvar author$project$Obstacle$energizeAt = F3(\n\tfunction (coordinates, direction, particles) {\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tauthor$project$Particle$buildParticle(coordinates),\n\t\t\tparticles,\n\t\t\tauthor$project$Direction$sidewaysDirections(direction));\n\t});\nvar author$project$Obstacle$increaseClusterSize = F2(\n\tfunction (increasedSize, obstacle) {\n\t\tif (!obstacle.$) {\n\t\t\tvar n = obstacle.a;\n\t\t\tvar coordinates = obstacle.b;\n\t\t\treturn A2(author$project$Obstacle$Cluster, n + increasedSize, coordinates);\n\t\t} else {\n\t\t\treturn obstacle;\n\t\t}\n\t});\nvar author$project$Direction$allDirections = _List_fromArray(\n\t[0, 3, 2, 1]);\nvar author$project$Obstacle$reactionAt = F2(\n\tfunction (coordinates, particles) {\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tauthor$project$Particle$buildParticle(coordinates),\n\t\t\tparticles,\n\t\t\tauthor$project$Direction$allDirections);\n\t});\nvar author$project$Particle$extract = function (_n0) {\n\tvar particles = _n0.y;\n\treturn particles;\n};\nvar author$project$Particle$length = A2(elm$core$Basics$composeL, elm$core$List$length, author$project$Particle$extract);\nvar author$project$Particle$map = F2(\n\tfunction (f, _n0) {\n\t\tvar p = _n0;\n\t\tvar particles = p.y;\n\t\treturn _Utils_update(\n\t\t\tp,\n\t\t\t{\n\t\t\t\ty: A2(elm$core$List$map, f, particles)\n\t\t\t});\n\t});\nvar author$project$Particle$mapDirection = F2(\n\tfunction (f, _n0) {\n\t\tvar particleId = _n0.a;\n\t\tvar direction = _n0.b;\n\t\tvar coordinates = _n0.c;\n\t\treturn A3(\n\t\t\tauthor$project$Particle$Particle,\n\t\t\tparticleId,\n\t\t\tf(direction),\n\t\t\tcoordinates);\n\t});\nvar author$project$Particle$particleAtCoordinates = F2(\n\tfunction (coords, _n0) {\n\t\tvar particleCoords = _n0.c;\n\t\treturn _Utils_eq(coords, particleCoords);\n\t});\nvar author$project$Particle$mapParticlesAtCoordinates = F3(\n\tfunction (f, particles, coordinates) {\n\t\treturn A2(\n\t\t\tauthor$project$Particle$map,\n\t\t\tfunction (particle) {\n\t\t\t\treturn A2(author$project$Particle$particleAtCoordinates, coordinates, particle) ? f(particle) : particle;\n\t\t\t},\n\t\t\tparticles);\n\t});\nvar author$project$Particle$mappend = F2(\n\tfunction (_n0, _n1) {\n\t\tvar p1 = _n0;\n\t\tvar p = _n1;\n\t\tvar particles = p.y;\n\t\treturn _Utils_update(\n\t\t\tp,\n\t\t\t{\n\t\t\t\ty: _Utils_ap(particles, p1.y)\n\t\t\t});\n\t});\nvar author$project$Particle$particleDirection = function (_n0) {\n\tvar direction = _n0.b;\n\treturn direction;\n};\nvar author$project$Particle$particlesAtCoordinates = F2(\n\tfunction (particles, coordinates) {\n\t\treturn A2(\n\t\t\tauthor$project$Particle$flatMap,\n\t\t\telm$core$List$filter(\n\t\t\t\tauthor$project$Particle$particleAtCoordinates(coordinates)),\n\t\t\tparticles);\n\t});\nvar author$project$Particle$particlesNotAtAnyCoordinates = F2(\n\tfunction (particles, coordinatesList) {\n\t\treturn A2(\n\t\t\tauthor$project$Particle$flatMap,\n\t\t\telm$core$List$filter(\n\t\t\t\tfunction (_n0) {\n\t\t\t\t\tvar coordinates = _n0.c;\n\t\t\t\t\treturn !A2(elm$core$List$member, coordinates, coordinatesList);\n\t\t\t\t}),\n\t\t\tparticles);\n\t});\nvar author$project$Particle$particlesNotAtCoordinates = F2(\n\tfunction (particles, coordinates) {\n\t\treturn A2(\n\t\t\tauthor$project$Particle$flatMap,\n\t\t\telm$core$List$filter(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Basics$composeL,\n\t\t\t\t\telm$core$Basics$not,\n\t\t\t\t\tauthor$project$Particle$particleAtCoordinates(coordinates))),\n\t\t\tparticles);\n\t});\nvar elm$core$List$takeReverse = F3(\n\tfunction (n, list, kept) {\n\t\ttakeReverse:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn kept;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn kept;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs,\n\t\t\t\t\t\t$temp$kept = A2(elm$core$List$cons, x, kept);\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tkept = $temp$kept;\n\t\t\t\t\tcontinue takeReverse;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$takeTailRec = F2(\n\tfunction (n, list) {\n\t\treturn elm$core$List$reverse(\n\t\t\tA3(elm$core$List$takeReverse, n, list, _List_Nil));\n\t});\nvar elm$core$List$takeFast = F3(\n\tfunction (ctr, n, list) {\n\t\tif (n <= 0) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar _n0 = _Utils_Tuple2(n, list);\n\t\t\t_n0$1:\n\t\t\twhile (true) {\n\t\t\t\t_n0$5:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\t\treturn list;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_n0.b.b.b) {\n\t\t\t\t\t\t\tswitch (_n0.a) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tbreak _n0$1;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tvar _n2 = _n0.b;\n\t\t\t\t\t\t\t\t\tvar x = _n2.a;\n\t\t\t\t\t\t\t\t\tvar _n3 = _n2.b;\n\t\t\t\t\t\t\t\t\tvar y = _n3.a;\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[x, y]);\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tif (_n0.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _n4 = _n0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _n4.a;\n\t\t\t\t\t\t\t\t\t\tvar _n5 = _n4.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _n5.a;\n\t\t\t\t\t\t\t\t\t\tvar _n6 = _n5.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _n6.a;\n\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[x, y, z]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tif (_n0.b.b.b.b && _n0.b.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _n7 = _n0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _n7.a;\n\t\t\t\t\t\t\t\t\t\tvar _n8 = _n7.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _n8.a;\n\t\t\t\t\t\t\t\t\t\tvar _n9 = _n8.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _n9.a;\n\t\t\t\t\t\t\t\t\t\tvar _n10 = _n9.b;\n\t\t\t\t\t\t\t\t\t\tvar w = _n10.a;\n\t\t\t\t\t\t\t\t\t\tvar tl = _n10.b;\n\t\t\t\t\t\t\t\t\t\treturn (ctr > 1000) ? A2(\n\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(elm$core$List$takeTailRec, n - 4, tl))))) : A2(\n\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3(elm$core$List$takeFast, ctr + 1, n - 4, tl)))));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_n0.a === 1) {\n\t\t\t\t\t\t\t\tbreak _n0$1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _n0$5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tvar _n1 = _n0.b;\n\t\t\tvar x = _n1.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[x]);\n\t\t}\n\t});\nvar elm$core$List$take = F2(\n\tfunction (n, list) {\n\t\treturn A3(elm$core$List$takeFast, 0, n, list);\n\t});\nvar author$project$Particle$take = function (n) {\n\treturn author$project$Particle$flatMap(\n\t\telm$core$List$take(n));\n};\nvar elm$core$Basics$ge = _Utils_ge;\nvar elm$core$Basics$neq = _Utils_notEqual;\nvar elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar author$project$Obstacle$handleObstacle = F3(\n\tfunction (obstacle, particles, obstacles) {\n\t\tswitch (obstacle.$) {\n\t\t\tcase 0:\n\t\t\t\tvar n = obstacle.a;\n\t\t\t\tvar coordinates = obstacle.b;\n\t\t\t\tvar excess = (author$project$Particle$length(\n\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates)) + n) - 5;\n\t\t\t\tif (excess >= 0) {\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Obstacle$reactionAt,\n\t\t\t\t\t\t\tcoordinates,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Particle$mappend,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tauthor$project$Particle$take,\n\t\t\t\t\t\t\t\t\texcess,\n\t\t\t\t\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates)),\n\t\t\t\t\t\t\t\tA2(author$project$Particle$particlesNotAtCoordinates, particles, coordinates))),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\t\t\tfunction (o) {\n\t\t\t\t\t\t\t\treturn !_Utils_eq(o, obstacle);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tobstacles));\n\t\t\t\t} else {\n\t\t\t\t\tvar newObstacle = A2(\n\t\t\t\t\t\tauthor$project$Obstacle$increaseClusterSize,\n\t\t\t\t\t\tauthor$project$Particle$length(\n\t\t\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates)),\n\t\t\t\t\t\tobstacle);\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2(author$project$Particle$particlesNotAtCoordinates, particles, coordinates),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\tnewObstacle,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\t\t\t\tfunction (o) {\n\t\t\t\t\t\t\t\t\treturn !_Utils_eq(o, obstacle);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tobstacles)));\n\t\t\t\t}\n\t\t\tcase 7:\n\t\t\t\tvar coordinates = obstacle.a;\n\t\t\t\tvar particleDirections = A2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tauthor$project$Particle$particleDirection,\n\t\t\t\t\tauthor$project$Particle$extract(\n\t\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates)));\n\t\t\t\tvar potentiallyFireReaction = function (ps) {\n\t\t\t\t\treturn elm$core$List$isEmpty(particleDirections) ? ps : A3(\n\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\tauthor$project$Obstacle$energizeAt(coordinates),\n\t\t\t\t\t\tps,\n\t\t\t\t\t\tparticleDirections);\n\t\t\t\t};\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tpotentiallyFireReaction(\n\t\t\t\t\t\tA2(author$project$Particle$particlesNotAtCoordinates, particles, coordinates)),\n\t\t\t\t\tobstacles);\n\t\t\tcase 6:\n\t\t\t\tvar coordinates = obstacle.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2(author$project$Particle$particlesNotAtCoordinates, particles, coordinates),\n\t\t\t\t\tobstacles);\n\t\t\tcase 2:\n\t\t\t\tvar coordinates = obstacle.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA3(\n\t\t\t\t\t\tauthor$project$Particle$mapParticlesAtCoordinates,\n\t\t\t\t\t\tauthor$project$Particle$mapDirection(author$project$Direction$reverseDirection),\n\t\t\t\t\t\tparticles,\n\t\t\t\t\t\tcoordinates),\n\t\t\t\t\tobstacles);\n\t\t\tcase 3:\n\t\t\t\tvar coordinates = obstacle.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA3(\n\t\t\t\t\t\tauthor$project$Particle$mapParticlesAtCoordinates,\n\t\t\t\t\t\tauthor$project$Particle$mapDirection(author$project$Direction$mirrorLeftDirection),\n\t\t\t\t\t\tparticles,\n\t\t\t\t\t\tcoordinates),\n\t\t\t\t\tobstacles);\n\t\t\tcase 4:\n\t\t\t\tvar coordinates = obstacle.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA3(\n\t\t\t\t\t\tauthor$project$Particle$mapParticlesAtCoordinates,\n\t\t\t\t\t\tauthor$project$Particle$mapDirection(author$project$Direction$mirrorRightDirection),\n\t\t\t\t\t\tparticles,\n\t\t\t\t\t\tcoordinates),\n\t\t\t\t\tobstacles);\n\t\t\tcase 5:\n\t\t\t\tvar newDirection = obstacle.a;\n\t\t\t\tvar coordinates = obstacle.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA3(\n\t\t\t\t\t\tauthor$project$Particle$mapParticlesAtCoordinates,\n\t\t\t\t\t\tauthor$project$Particle$mapDirection(\n\t\t\t\t\t\t\telm$core$Basics$always(newDirection)),\n\t\t\t\t\t\tparticles,\n\t\t\t\t\t\tcoordinates),\n\t\t\t\t\tobstacles);\n\t\t\tdefault:\n\t\t\t\tvar coordinates1 = obstacle.a;\n\t\t\t\tvar coordinates2 = obstacle.b;\n\t\t\t\tvar particlesAtCoordinates2 = A2(\n\t\t\t\t\tauthor$project$Particle$map,\n\t\t\t\t\tauthor$project$Particle$mapCoordinates(\n\t\t\t\t\t\telm$core$Basics$always(coordinates2)),\n\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates1));\n\t\t\t\tvar particlesAtCoordinates1 = A2(\n\t\t\t\t\tauthor$project$Particle$map,\n\t\t\t\t\tauthor$project$Particle$mapCoordinates(\n\t\t\t\t\t\telm$core$Basics$always(coordinates1)),\n\t\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates2));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2(\n\t\t\t\t\t\tauthor$project$Particle$mappend,\n\t\t\t\t\t\tparticlesAtCoordinates2,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\tauthor$project$Particle$mappend,\n\t\t\t\t\t\t\tparticlesAtCoordinates1,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tauthor$project$Particle$particlesNotAtAnyCoordinates,\n\t\t\t\t\t\t\t\tparticles,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[coordinates1, coordinates2])))),\n\t\t\t\t\tobstacles);\n\t\t}\n\t});\nvar author$project$Game$advanceBoard = function (board) {\n\tvar bo = board;\n\tvar handleObstacleOnBoard = F2(\n\t\tfunction (obstacle, _n0) {\n\t\t\tvar b = _n0;\n\t\t\tvar particles = b.y;\n\t\t\tvar obstacles = b.x;\n\t\t\tvar outcome = A3(author$project$Obstacle$handleObstacle, obstacle, particles, obstacles);\n\t\t\treturn _Utils_update(\n\t\t\t\tb,\n\t\t\t\t{x: outcome.b, y: outcome.a});\n\t\t});\n\treturn author$project$Game$trimParticles(\n\t\tauthor$project$Game$advanceParticles(\n\t\t\tA3(elm$core$List$foldl, handleObstacleOnBoard, board, bo.x)));\n};\nvar author$project$Game$Complete = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 2, a: a, b: b, c: c};\n\t});\nvar author$project$Obstacle$isCluster = function (obstacle) {\n\tif (!obstacle.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar author$project$Game$boardContainsClusters = function (_n0) {\n\tvar obstacles = _n0.x;\n\treturn A2(elm$core$List$any, author$project$Obstacle$isCluster, obstacles);\n};\nvar author$project$Level$levelPar = function (_n0) {\n\tvar par = _n0.Y;\n\treturn par;\n};\nvar author$project$Game$completeGameWhenNoClustersRemain = function (game) {\n\tif (game.$ === 1) {\n\t\tvar board = game.a;\n\t\tvar clickCounter = board.K;\n\t\tvar level = board.L;\n\t\treturn author$project$Game$boardContainsClusters(board) ? author$project$Game$Started(board) : A3(\n\t\t\tauthor$project$Game$Complete,\n\t\t\tboard,\n\t\t\tauthor$project$Level$levelPar(level),\n\t\t\tclickCounter);\n\t} else {\n\t\treturn game;\n\t}\n};\nvar author$project$Game$incrementClickCounter = function (_n0) {\n\tvar value = _n0;\n\treturn value + 1;\n};\nvar author$project$Obstacle$incrementSize = function (_n0) {\n\tvar n = _n0;\n\treturn n + 1;\n};\nvar author$project$Obstacle$singleObstacleAtCoordinates = F2(\n\tfunction (coordinates, obstacle) {\n\t\tswitch (obstacle.$) {\n\t\t\tcase 0:\n\t\t\t\tvar coords = obstacle.b;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tcase 1:\n\t\t\t\tvar coords1 = obstacle.a;\n\t\t\t\tvar coords2 = obstacle.b;\n\t\t\t\treturn _Utils_eq(coords1, coordinates) || _Utils_eq(coords2, coordinates);\n\t\t\tcase 2:\n\t\t\t\tvar coords = obstacle.a;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tcase 3:\n\t\t\t\tvar coords = obstacle.a;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tcase 4:\n\t\t\t\tvar coords = obstacle.a;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tcase 5:\n\t\t\t\tvar coords = obstacle.b;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tcase 6:\n\t\t\t\tvar coords = obstacle.a;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t\tdefault:\n\t\t\t\tvar coords = obstacle.a;\n\t\t\t\treturn _Utils_eq(coords, coordinates);\n\t\t}\n\t});\nvar author$project$Obstacle$obstacleAtCoordinates = F2(\n\tfunction (obstacles, coordinates) {\n\t\treturn elm$core$List$head(\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tauthor$project$Obstacle$singleObstacleAtCoordinates(coordinates),\n\t\t\t\tobstacles));\n\t});\nvar author$project$Game$incrementClicksOnCluster = F2(\n\tfunction (coordinates, board) {\n\t\tvar b = board;\n\t\tvar obstacles = b.x;\n\t\tvar clickCounter = b.K;\n\t\tvar _n0 = A2(author$project$Obstacle$obstacleAtCoordinates, obstacles, coordinates);\n\t\tif ((!_n0.$) && (!_n0.a.$)) {\n\t\t\tvar obstacle = _n0.a;\n\t\t\tvar size = obstacle.a;\n\t\t\tvar coords = obstacle.b;\n\t\t\tvar newObstacle = A2(\n\t\t\t\tauthor$project$Obstacle$Cluster,\n\t\t\t\tauthor$project$Obstacle$incrementSize(size),\n\t\t\t\tcoords);\n\t\t\treturn _Utils_update(\n\t\t\t\tb,\n\t\t\t\t{\n\t\t\t\t\tK: author$project$Game$incrementClickCounter(clickCounter),\n\t\t\t\t\tx: A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tnewObstacle,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$filter,\n\t\t\t\t\t\t\tfunction (o) {\n\t\t\t\t\t\t\t\treturn !_Utils_eq(o, obstacle);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tobstacles))\n\t\t\t\t});\n\t\t} else {\n\t\t\treturn board;\n\t\t}\n\t});\nvar author$project$Game$mapBoard = F2(\n\tfunction (f, game) {\n\t\tif (game.$ === 1) {\n\t\t\tvar board = game.a;\n\t\t\treturn author$project$Game$Started(\n\t\t\t\tf(board));\n\t\t} else {\n\t\t\treturn game;\n\t\t}\n\t});\nvar author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar board = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tk: author$project$Game$Started(board)\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 2:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{k: author$project$Game$NotStarted}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 3:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tk: author$project$Game$completeGameWhenNoClustersRemain(\n\t\t\t\t\t\t\t\tA2(author$project$Game$mapBoard, author$project$Game$advanceBoard, model.k))\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\tif ((!msg.a.$) && (!msg.a.a.$)) {\n\t\t\t\t\tvar _n1 = msg.a.a;\n\t\t\t\t\tvar coordinates = _n1.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tk: A2(\n\t\t\t\t\t\t\t\t\tauthor$project$Game$mapBoard,\n\t\t\t\t\t\t\t\t\tauthor$project$Game$incrementClicksOnCluster(coordinates),\n\t\t\t\t\t\t\t\t\tmodel.k)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(model, elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t}\n\t});\nvar author$project$Game$clickCounterValue = function (_n0) {\n\tvar value = _n0;\n\treturn value;\n};\nvar author$project$Game$clicksMade = function (game) {\n\tswitch (game.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\tvar clickCounter = game.a.K;\n\t\t\treturn author$project$Game$clickCounterValue(clickCounter);\n\t\tdefault:\n\t\t\tvar n = game.c;\n\t\t\treturn n;\n\t}\n};\nvar author$project$Level$parValue = function (_n0) {\n\tvar v = _n0;\n\treturn v;\n};\nvar author$project$Game$parForBoard = function (_n0) {\n\tvar level = _n0.L;\n\treturn author$project$Level$parValue(\n\t\tauthor$project$Level$levelPar(level));\n};\nvar author$project$Coordinates$dimensionsToCoordinates = F2(\n\tfunction (_n0, _n1) {\n\t\tvar w = _n0;\n\t\tvar h = _n1;\n\t\tvar ys = A2(elm$core$List$range, 0, h - 1);\n\t\tvar xs = A2(elm$core$List$range, 0, w - 1);\n\t\treturn elm$core$List$reverse(\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (y) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn author$project$Coordinates$coordinatesFromPair(\n\t\t\t\t\t\t\t\t_Utils_Tuple2(x, y));\n\t\t\t\t\t\t},\n\t\t\t\t\t\txs);\n\t\t\t\t},\n\t\t\t\tys));\n\t});\nvar author$project$Game$renderableBoard = function (board) {\n\tvar particles = board.y;\n\tvar obstacles = board.x;\n\tvar tileInformation = function (coordinates) {\n\t\treturn _Utils_Tuple2(\n\t\t\tauthor$project$Particle$extract(\n\t\t\t\tA2(author$project$Particle$particlesAtCoordinates, particles, coordinates)),\n\t\t\tA2(author$project$Obstacle$obstacleAtCoordinates, obstacles, coordinates));\n\t};\n\tvar allCoordinates = A2(\n\t\tauthor$project$Coordinates$dimensionsToCoordinates,\n\t\tauthor$project$Game$boardWidth(board),\n\t\tauthor$project$Game$boardHeight(board));\n\treturn A2(\n\t\telm$core$List$map,\n\t\telm$core$List$map(tileInformation),\n\t\tallCoordinates);\n};\nvar author$project$Main$StartGame = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$html$Html$button = _VirtualDom_node('button');\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar author$project$Main$displayBoard = F2(\n\tfunction (index, board) {\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$button,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\tauthor$project$Main$StartGame(board))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t'Start game ' + elm$core$String$fromInt(index))\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar author$project$Main$EndGame = {$: 2};\nvar author$project$Main$endGameButton = A2(\n\telm$html$Html$button,\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$Events$onClick(author$project$Main$EndGame)\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\telm$html$Html$text('End game')\n\t\t]));\nvar author$project$Game$advanceBoardId = function (_n0) {\n\tvar bId = _n0;\n\treturn bId + 1;\n};\nvar author$project$Game$getBoardId = function (_n0) {\n\tvar boardId = _n0.ak;\n\treturn boardId;\n};\nvar author$project$Main$currentBoard = function (_n0) {\n\tvar game = _n0.k;\n\tswitch (game.$) {\n\t\tcase 0:\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\tcase 1:\n\t\t\tvar board = game.a;\n\t\t\treturn elm$core$Maybe$Just(board);\n\t\tdefault:\n\t\t\tvar board = game.a;\n\t\t\treturn elm$core$Maybe$Just(board);\n\t}\n};\nvar author$project$Main$nextBoard = function (model) {\n\tvar game = model.k;\n\tvar boards = model.U;\n\tvar _n0 = author$project$Main$currentBoard(model);\n\tif (_n0.$ === 1) {\n\t\treturn elm$core$Maybe$Nothing;\n\t} else {\n\t\tvar board = _n0.a;\n\t\treturn elm$core$List$head(\n\t\t\tA2(\n\t\t\t\telm$core$List$filter,\n\t\t\t\tfunction (b) {\n\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\tauthor$project$Game$getBoardId(b),\n\t\t\t\t\t\tauthor$project$Game$advanceBoardId(\n\t\t\t\t\t\t\tauthor$project$Game$getBoardId(board)));\n\t\t\t\t},\n\t\t\t\tboards));\n\t}\n};\nvar author$project$Main$nextBoardButton = function (model) {\n\tvar _n0 = author$project$Main$nextBoard(model);\n\tif (!_n0.$) {\n\t\tvar nextBoard_ = _n0.a;\n\t\treturn A2(\n\t\t\telm$html$Html$button,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\tauthor$project$Main$StartGame(nextBoard_))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text('Go on to next board')\n\t\t\t\t]));\n\t} else {\n\t\treturn elm$html$Html$text('');\n\t}\n};\nvar author$project$Direction$showDirection = function (direction) {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\treturn 'up';\n\t\tcase 1:\n\t\t\treturn 'down';\n\t\tcase 2:\n\t\t\treturn 'left';\n\t\tdefault:\n\t\t\treturn 'right';\n\t}\n};\nvar author$project$Main$ClickObstacle = function (a) {\n\treturn {$: 4, a: a};\n};\nvar author$project$Obstacle$showSize = function (_n0) {\n\tvar n = _n0;\n\treturn elm$core$String$fromInt(n);\n};\nvar author$project$Main$obstacleClass = function (obstacle) {\n\tswitch (obstacle.$) {\n\t\tcase 0:\n\t\t\tvar size = obstacle.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t'cluster',\n\t\t\t\t\t'cluster-' + author$project$Obstacle$showSize(size)\n\t\t\t\t]);\n\t\tcase 1:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['portal']);\n\t\tcase 2:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['mirror']);\n\t\tcase 3:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['mirror-left']);\n\t\tcase 4:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['mirror-right']);\n\t\tcase 5:\n\t\t\tvar direction = obstacle.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t'change-direction',\n\t\t\t\t\t'change-direction-' + author$project$Direction$showDirection(direction)\n\t\t\t\t]);\n\t\tcase 6:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['black-hole']);\n\t\tdefault:\n\t\t\treturn _List_fromArray(\n\t\t\t\t['energizer']);\n\t}\n};\nvar elm$html$Html$span = _VirtualDom_node('span');\nvar elm$html$Html$table = _VirtualDom_node('table');\nvar elm$html$Html$td = _VirtualDom_node('td');\nvar elm$html$Html$tr = _VirtualDom_node('tr');\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$html$Html$Attributes$classList = function (classes) {\n\treturn elm$html$Html$Attributes$class(\n\t\tA2(\n\t\t\telm$core$String$join,\n\t\t\t' ',\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\telm$core$Tuple$first,\n\t\t\t\tA2(elm$core$List$filter, elm$core$Tuple$second, classes))));\n};\nvar author$project$Main$renderBoard = function (boardTiles) {\n\tvar showParticle = function (particle) {\n\t\treturn A2(\n\t\t\telm$html$Html$span,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$class(\n\t\t\t\t\t'particle particle-' + author$project$Direction$showDirection(\n\t\t\t\t\t\tauthor$project$Particle$particleDirection(particle)))\n\t\t\t\t]),\n\t\t\t_List_Nil);\n\t};\n\tvar classes = F2(\n\t\tfunction (particles, obstacle) {\n\t\t\treturn _Utils_ap(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Maybe$map,\n\t\t\t\t\t\tfunction (o) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\t\t\tfunction (s) {\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(s, true);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tauthor$project$Main$obstacleClass(o));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tobstacle)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'has-particle',\n\t\t\t\t\t\telm$core$List$length(particles) > 0)\n\t\t\t\t\t]));\n\t\t});\n\tvar renderColumn = function (_n0) {\n\t\tvar particles = _n0.a;\n\t\tvar obstacle = _n0.b;\n\t\treturn A2(\n\t\t\telm$html$Html$td,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\tA2(classes, particles, obstacle)),\n\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\tauthor$project$Main$ClickObstacle(obstacle))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$span,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\tA2(elm$core$List$map, showParticle, particles))\n\t\t\t\t]));\n\t};\n\tvar renderRow = function (columns) {\n\t\treturn A2(\n\t\t\telm$html$Html$tr,\n\t\t\t_List_Nil,\n\t\t\tA2(elm$core$List$map, renderColumn, columns));\n\t};\n\treturn A2(\n\t\telm$html$Html$table,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$class('board')\n\t\t\t]),\n\t\tA2(elm$core$List$map, renderRow, boardTiles));\n};\nvar elm$html$Html$h2 = _VirtualDom_node('h2');\nvar author$project$Main$view = function (model) {\n\tvar _n0 = model.k;\n\tswitch (_n0.$) {\n\t\tcase 0:\n\t\t\treturn A2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\tA2(elm$core$List$indexedMap, author$project$Main$displayBoard, model.U));\n\t\tcase 1:\n\t\t\tvar board = _n0.a;\n\t\t\treturn A2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$h2,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\t'Clicks: ' + elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t\tauthor$project$Game$clicksMade(model.k)))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$h2,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\t'Par: ' + elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t\tauthor$project$Game$parForBoard(board)))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tauthor$project$Main$endGameButton,\n\t\t\t\t\t\tauthor$project$Main$renderBoard(\n\t\t\t\t\t\tauthor$project$Game$renderableBoard(board))\n\t\t\t\t\t]));\n\t\tdefault:\n\t\t\tvar board = _n0.a;\n\t\t\treturn A2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$h2,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\t'Complete! Clicks: ' + elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t\tauthor$project$Game$clicksMade(model.k)))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tauthor$project$Main$endGameButton,\n\t\t\t\t\t\tauthor$project$Main$nextBoardButton(model),\n\t\t\t\t\t\tauthor$project$Main$renderBoard(\n\t\t\t\t\t\tauthor$project$Game$renderableBoard(board))\n\t\t\t\t\t]));\n\t}\n};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$core$String$length = _String_length;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {as: fragment, av: host, aD: path, aF: port_, aJ: protocol, aK: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {aI: processes, aU: taggers};\n\t});\nvar elm$time$Time$init = elm$core$Task$succeed(\n\tA2(elm$time$Time$State, elm$core$Dict$empty, elm$core$Dict$empty));\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _n0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _n0.a;\n\t\t\t\t\tvar result = _n0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = list.a;\n\t\t\t\t\t\tvar lKey = _n2.a;\n\t\t\t\t\t\tvar lValue = _n2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_n0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _n3 = A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\telm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _n3.a;\n\t\tvar intermediateResult = _n3.b;\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n4, result) {\n\t\t\t\t\tvar k = _n4.a;\n\t\t\t\t\tvar v = _n4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _n1 = A2(elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_n1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$time$Time$addMySub = F2(\n\tfunction (_n0, state) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\tvar _n1 = A2(elm$core$Dict$get, interval, state);\n\t\tif (_n1.$ === 1) {\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _n1.a;\n\t\t\treturn A3(\n\t\t\t\telm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2(elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Process$spawn = _Scheduler_spawn;\nvar elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$time$Time$customZone = elm$time$Time$Zone;\nvar elm$time$Time$setInterval = _Time_setInterval;\nvar elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\telm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2(elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\telm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2(elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _n0) {\n\t\tvar processes = _n0.aI;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_n6, id, _n7) {\n\t\t\t\tvar spawns = _n7.a;\n\t\t\t\tvar existing = _n7.b;\n\t\t\t\tvar kills = _n7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_n5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\telm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3(elm$core$List$foldl, elm$time$Time$addMySub, elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _n4) {\n\t\t\t\tvar spawns = _n4.a;\n\t\t\t\tvar existing = _n4.b;\n\t\t\t\tvar kills = _n4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _n3) {\n\t\t\t\tvar spawns = _n3.a;\n\t\t\t\tvar existing = _n3.b;\n\t\t\t\tvar kills = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3(elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _n1 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\telm$core$Dict$empty,\n\t\t\t\telm$core$Task$succeed(0)));\n\t\tvar spawnList = _n1.a;\n\t\tvar existingDict = _n1.b;\n\t\tvar killTask = _n1.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$time$Time$now = _Time_now(elm$time$Time$millisToPosix);\nvar elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _n0 = A2(elm$core$Dict$get, interval, state.aU);\n\t\tif (_n0.$ === 1) {\n\t\t\treturn elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _n0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Task$andThen, tellTaggers, elm$time$Time$now));\n\t\t}\n\t});\nvar elm$time$Time$subMap = F2(\n\tfunction (f, _n0) {\n\t\tvar interval = _n0.a;\n\t\tvar tagger = _n0.b;\n\t\treturn A2(\n\t\t\telm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2(elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager(elm$time$Time$init, elm$time$Time$onEffects, elm$time$Time$onSelfMsg, 0, elm$time$Time$subMap);\nvar elm$time$Time$subscription = _Platform_leaf('Time');\nvar elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn elm$time$Time$subscription(\n\t\t\tA2(elm$time$Time$Every, interval, tagger));\n\t});\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{\n\t\ta8: function (_n0) {\n\t\t\treturn author$project$Main$init;\n\t\t},\n\t\tbg: function (_n1) {\n\t\t\tvar game = _n1.k;\n\t\t\treturn author$project$Game$isGameActive(game) ? A2(\n\t\t\t\telm$time$Time$every,\n\t\t\t\t600,\n\t\t\t\telm$core$Basics$always(author$project$Main$AdvanceBoard)) : elm$core$Platform$Sub$none;\n\t\t},\n\t\tbi: author$project$Main$update,\n\t\tbk: author$project$Main$view\n\t});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport * as serviceWorker from './serviceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}